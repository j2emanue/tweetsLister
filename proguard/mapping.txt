android.annotation.SuppressLint -> android.a.a:
    java.lang.String[] value() -> a
android.annotation.TargetApi -> android.a.b:
    int value() -> a
android.support.v13.app.FragmentCompat -> android.support.v13.app.a:
    android.support.v13.app.FragmentCompat$FragmentCompatImpl IMPL -> a
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl -> android.support.v13.app.b:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$FragmentCompatImpl -> android.support.v13.app.c:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl -> android.support.v13.app.d:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl -> android.support.v13.app.e:
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompatICS -> android.support.v13.app.f:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentCompatICSMR1 -> android.support.v13.app.g:
    void setUserVisibleHint(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentPagerAdapter -> android.support.v13.app.h:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.app.FragmentManager mFragmentManager -> e
    android.app.FragmentTransaction mCurTransaction -> f
    android.app.Fragment mCurrentPrimaryItem -> g
    android.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.i:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.app.FragmentManager mFragmentManager -> e
    android.app.FragmentTransaction mCurTransaction -> f
    java.util.ArrayList mSavedState -> g
    java.util.ArrayList mFragments -> h
    android.app.Fragment mCurrentPrimaryItem -> i
    android.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.app.FragmentManager) -> a
    void setup(android.content.Context,android.app.FragmentManager,int) -> a
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$1 -> android.support.v13.app.j:
android.support.v13.app.FragmentTabHost$DummyTabFactory -> android.support.v13.app.k:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.l:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.m:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.a.a:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> b
    int FEEDBACK_ALL_MASK -> a
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> a
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> c
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> e
    java.lang.String feedbackTypeToString(int) -> a
    java.lang.String flagToString(int) -> b
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.a.b:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.a.c:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.a.d:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.a.e:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    int ID_HOME -> b
    android.app.Activity mActivity -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> a
    void setDrawerIndicatorEnabled(boolean) -> a
    boolean isDrawerIndicatorEnabled() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.f:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    float mOffsetBy -> c
    android.graphics.Rect mTmpRect -> d
    void setOffset(float) -> a
    float getOffset() -> a
    void setOffsetBy(float) -> b
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.g:
    java.lang.String TAG -> a
    int[] THEME_ATTRS -> b
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.h:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompat -> android.support.v4.app.i:
    boolean invalidateOptionsMenu(android.app.Activity) -> a
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> a
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.j:
    void invalidateOptionsMenu(android.app.Activity) -> a
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.k:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> a
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.l:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> a
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> a
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> a
    android.os.Bundle toBundle() -> a
    void update(android.support.v4.app.ActivityOptionsCompat) -> a
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.m:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> a
    android.os.Bundle toBundle() -> a
    void update(android.support.v4.app.ActivityOptionsCompat) -> a
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.n:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> a
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> a
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> a
    android.os.Bundle toBundle() -> a
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.o:
    java.lang.String TAG -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    int OP_NULL -> c
    int OP_ADD -> d
    int OP_REPLACE -> e
    int OP_REMOVE -> f
    int OP_HIDE -> g
    int OP_SHOW -> h
    int OP_DETACH -> i
    int OP_ATTACH -> j
    android.support.v4.app.BackStackRecord$Op mHead -> k
    android.support.v4.app.BackStackRecord$Op mTail -> l
    int mNumOp -> m
    int mEnterAnim -> n
    int mExitAnim -> o
    int mPopEnterAnim -> p
    int mPopExitAnim -> q
    int mTransition -> r
    int mTransitionStyle -> s
    boolean mAddToBackStack -> t
    boolean mAllowAddToBackStack -> u
    java.lang.String mName -> v
    boolean mCommitted -> w
    int mIndex -> x
    int mBreadCrumbTitleRes -> y
    java.lang.CharSequence mBreadCrumbTitleText -> z
    int mBreadCrumbShortTitleRes -> A
    java.lang.CharSequence mBreadCrumbShortTitleText -> B
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    int getId() -> a
    int getBreadCrumbTitleRes() -> b
    int getBreadCrumbShortTitleRes() -> c
    java.lang.CharSequence getBreadCrumbTitle() -> d
    java.lang.CharSequence getBreadCrumbShortTitle() -> e
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction setTransition(int) -> a
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> b
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    boolean isAddToBackStackAllowed() -> f
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> g
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> c
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> a
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> d
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> b
    void bumpBackStackNesting(int) -> e
    int commit() -> h
    int commitAllowingStateLoss() -> i
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> j
    int getTransition() -> k
    int getTransitionStyle() -> l
    boolean isEmpty() -> m
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.p:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.q:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.r:
    int STYLE_NORMAL -> a
    int STYLE_NO_TITLE -> b
    int STYLE_NO_FRAME -> c
    int STYLE_NO_INPUT -> d
    java.lang.String SAVED_DIALOG_STATE_TAG -> ai
    java.lang.String SAVED_STYLE -> aj
    java.lang.String SAVED_THEME -> ak
    java.lang.String SAVED_CANCELABLE -> al
    java.lang.String SAVED_SHOWS_DIALOG -> am
    java.lang.String SAVED_BACK_STACK_ID -> an
    int mStyle -> e
    int mTheme -> f
    boolean mCancelable -> g
    boolean mShowsDialog -> h
    int mBackStackId -> i
    android.app.Dialog mDialog -> j
    boolean mViewDestroyed -> k
    boolean mDismissed -> l
    boolean mShownByMe -> m
    void setStyle(int,int) -> a
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> a
    void dismiss() -> a
    void dismissAllowingStateLoss() -> b
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> c
    int getTheme() -> d
    void setCancelable(boolean) -> b
    boolean isCancelable() -> e
    void setShowsDialog(boolean) -> c
    boolean getShowsDialog() -> f
    void onAttach(android.app.Activity) -> a
    void onDetach() -> g
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> h
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> i
    void onDestroyView() -> j
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int INITIALIZING -> n
    int CREATED -> o
    int ACTIVITY_CREATED -> p
    int STOPPED -> q
    int STARTED -> r
    int RESUMED -> s
    int mState -> t
    android.view.View mAnimatingAway -> u
    int mStateAfterAnimating -> v
    android.os.Bundle mSavedFragmentState -> w
    android.util.SparseArray mSavedViewState -> x
    int mIndex -> y
    java.lang.String mWho -> z
    android.os.Bundle mArguments -> A
    android.support.v4.app.Fragment mTarget -> B
    int mTargetIndex -> C
    int mTargetRequestCode -> D
    boolean mAdded -> E
    boolean mRemoving -> F
    boolean mResumed -> G
    boolean mFromLayout -> H
    boolean mInLayout -> I
    boolean mRestored -> J
    int mBackStackNesting -> K
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> L
    android.support.v4.app.FragmentActivity mActivity -> M
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> N
    android.support.v4.app.Fragment mParentFragment -> O
    int mFragmentId -> P
    int mContainerId -> Q
    java.lang.String mTag -> R
    boolean mHidden -> S
    boolean mDetached -> T
    boolean mRetainInstance -> U
    boolean mRetaining -> V
    boolean mHasMenu -> W
    boolean mMenuVisible -> X
    boolean mCalled -> Y
    int mNextAnim -> Z
    android.view.ViewGroup mContainer -> aa
    android.view.View mView -> ab
    android.view.View mInnerView -> ac
    boolean mDeferStart -> ad
    boolean mUserVisibleHint -> ae
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> af
    boolean mLoadersStarted -> ag
    boolean mCheckedForLoaderManager -> ah
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> k
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> l
    java.lang.String getTag() -> m
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> n
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    void setTargetFragment(android.support.v4.app.Fragment,int) -> a
    android.support.v4.app.Fragment getTargetFragment() -> o
    int getTargetRequestCode() -> p
    android.support.v4.app.FragmentActivity getActivity() -> q
    android.content.res.Resources getResources() -> r
    java.lang.CharSequence getText(int) -> a
    java.lang.String getString(int) -> b
    java.lang.String getString(int,java.lang.Object[]) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> s
    android.support.v4.app.FragmentManager getChildFragmentManager() -> t
    android.support.v4.app.Fragment getParentFragment() -> u
    boolean isAdded() -> v
    boolean isDetached() -> w
    boolean isRemoving() -> x
    boolean isInLayout() -> y
    boolean isResumed() -> z
    boolean isVisible() -> A
    boolean isHidden() -> B
    void onHiddenChanged(boolean) -> d
    void setRetainInstance(boolean) -> e
    boolean getRetainInstance() -> C
    void setHasOptionsMenu(boolean) -> f
    void setMenuVisibility(boolean) -> g
    void setUserVisibleHint(boolean) -> h
    boolean getUserVisibleHint() -> D
    android.support.v4.app.LoaderManager getLoaderManager() -> E
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> F
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> h
    void onResume() -> G
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> H
    void onStop() -> i
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> j
    void onDestroy() -> I
    void initState() -> J
    void onDetach() -> g
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> K
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    void unregisterForContextMenu(android.view.View) -> b
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    void instantiateChildFragmentManager() -> L
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> M
    void performResume() -> N
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> O
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> P
    void performStop() -> Q
    void performReallyStop() -> R
    void performDestroyView() -> S
    void performDestroy() -> T
android.support.v4.app.Fragment$1 -> android.support.v4.app.s:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.t:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.u:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> q
    java.lang.String FRAGMENTS_TAG -> a
    int HONEYCOMB -> r
    int MSG_REALLY_STOPPED -> b
    int MSG_RESUME_PENDING -> c
    android.os.Handler mHandler -> d
    android.support.v4.app.FragmentManagerImpl mFragments -> e
    android.support.v4.app.FragmentContainer mContainer -> f
    boolean mCreated -> g
    boolean mResumed -> h
    boolean mStopped -> i
    boolean mReallyStopped -> j
    boolean mRetaining -> k
    boolean mOptionsMenuInvalidated -> l
    boolean mCheckedForLoaderManager -> m
    boolean mLoadersStarted -> n
    java.util.HashMap mAllLoaderManagers -> o
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> p
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    java.lang.Object getLastCustomNonConfigurationInstance() -> c
    void supportInvalidateOptionsMenu() -> d
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> e
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> f
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> g
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.w:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.x:
    int[] Fragment -> a
    int Fragment_id -> b
    int Fragment_name -> c
    int Fragment_tag -> d
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.y:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.z:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.aa:
    int POP_BACK_STACK_INCLUSIVE -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    android.support.v4.app.FragmentTransaction openTransaction() -> b
    boolean executePendingTransactions() -> c
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack() -> d
    boolean popBackStackImmediate() -> e
    void popBackStack(java.lang.String,int) -> a
    boolean popBackStackImmediate(java.lang.String,int) -> b
    void popBackStack(int,int) -> a
    boolean popBackStackImmediate(int,int) -> b
    int getBackStackEntryCount() -> f
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void enableDebugLogging(boolean) -> a
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.ab:
    int getId() -> a
    java.lang.String getName() -> j
    int getBreadCrumbTitleRes() -> b
    int getBreadCrumbShortTitleRes() -> c
    java.lang.CharSequence getBreadCrumbTitle() -> d
    java.lang.CharSequence getBreadCrumbShortTitle() -> e
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.ac:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.ad:
    boolean DEBUG -> b
    java.lang.String TAG -> c
    boolean HONEYCOMB -> d
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> e
    java.lang.String TARGET_STATE_TAG -> f
    java.lang.String VIEW_STATE_TAG -> g
    java.lang.String USER_VISIBLE_HINT_TAG -> h
    java.util.ArrayList mPendingActions -> i
    java.lang.Runnable[] mTmpActions -> j
    boolean mExecutingActions -> k
    java.util.ArrayList mActive -> l
    java.util.ArrayList mAdded -> m
    java.util.ArrayList mAvailIndices -> n
    java.util.ArrayList mBackStack -> o
    java.util.ArrayList mCreatedMenus -> p
    java.util.ArrayList mBackStackIndices -> q
    java.util.ArrayList mAvailBackStackIndices -> r
    java.util.ArrayList mBackStackChangeListeners -> s
    int mCurState -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    android.support.v4.app.FragmentContainer mContainer -> v
    android.support.v4.app.Fragment mParent -> w
    boolean mNeedMenuInvalidate -> x
    boolean mStateSaved -> y
    boolean mDestroyed -> z
    java.lang.String mNoTransactionsBecause -> A
    boolean mHavePendingDeferredStart -> B
    android.os.Bundle mStateBundle -> C
    android.util.SparseArray mStateArray -> D
    java.lang.Runnable mExecCommit -> E
    android.view.animation.Interpolator DECELERATE_QUINT -> F
    android.view.animation.Interpolator DECELERATE_CUBIC -> G
    android.view.animation.Interpolator ACCELERATE_QUINT -> H
    android.view.animation.Interpolator ACCELERATE_CUBIC -> I
    int ANIM_DUR -> J
    int ANIM_STYLE_OPEN_ENTER -> K
    int ANIM_STYLE_OPEN_EXIT -> L
    int ANIM_STYLE_CLOSE_ENTER -> M
    int ANIM_STYLE_CLOSE_EXIT -> N
    int ANIM_STYLE_FADE_ENTER -> O
    int ANIM_STYLE_FADE_EXIT -> P
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> c
    void popBackStack() -> d
    boolean popBackStackImmediate() -> e
    void popBackStack(java.lang.String,int) -> a
    boolean popBackStackImmediate(java.lang.String,int) -> b
    void popBackStack(int,int) -> a
    boolean popBackStackImmediate(int,int) -> b
    int getBackStackEntryCount() -> f
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> g
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> w
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> c
    boolean execPendingActions() -> h
    void reportBackStackChanged() -> i
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> j
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> k
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> l
    void dispatchCreate() -> m
    void dispatchActivityCreated() -> n
    void dispatchStart() -> o
    void dispatchResume() -> p
    void dispatchPause() -> q
    void dispatchStop() -> r
    void dispatchReallyStop() -> s
    void dispatchDestroyView() -> t
    void dispatchDestroy() -> u
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> v
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> d
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.ae:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.af:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.ag:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.ah:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ai:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.aj:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.ak:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.support.v4.app.FragmentManager mFragmentManager -> e
    android.support.v4.app.FragmentTransaction mCurTransaction -> f
    android.support.v4.app.Fragment mCurrentPrimaryItem -> g
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.al:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.am:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.support.v4.app.FragmentManager mFragmentManager -> e
    android.support.v4.app.FragmentTransaction mCurTransaction -> f
    java.util.ArrayList mSavedState -> g
    java.util.ArrayList mFragments -> h
    android.support.v4.app.Fragment mCurrentPrimaryItem -> i
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> a
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> a
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.an:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.ao:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ap:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.aq:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ar:
    int TRANSIT_ENTER_MASK -> C
    int TRANSIT_EXIT_MASK -> D
    int TRANSIT_UNSET -> E
    int TRANSIT_NONE -> F
    int TRANSIT_FRAGMENT_OPEN -> G
    int TRANSIT_FRAGMENT_CLOSE -> H
    int TRANSIT_FRAGMENT_FADE -> I
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    boolean isEmpty() -> m
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction setTransition(int) -> a
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> b
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    boolean isAddToBackStackAllowed() -> f
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> g
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> c
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> a
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> d
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> b
    int commit() -> h
    int commitAllowingStateLoss() -> i
android.support.v4.app.ListFragment -> android.support.v4.app.as:
    int INTERNAL_EMPTY_ID -> a
    int INTERNAL_PROGRESS_CONTAINER_ID -> b
    int INTERNAL_LIST_CONTAINER_ID -> c
    android.os.Handler mHandler -> l
    java.lang.Runnable mRequestFocus -> m
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> ai
    android.widget.ListAdapter mAdapter -> d
    android.widget.ListView mList -> e
    android.view.View mEmptyView -> f
    android.widget.TextView mStandardEmptyView -> g
    android.view.View mProgressContainer -> h
    android.view.View mListContainer -> i
    java.lang.CharSequence mEmptyText -> j
    boolean mListShown -> k
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> j
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setSelection(int) -> c
    int getSelectedItemPosition() -> a
    long getSelectedItemId() -> b
    android.widget.ListView getListView() -> c
    void setEmptyText(java.lang.CharSequence) -> a
    void setListShown(boolean) -> a
    void setListShownNoAnimation(boolean) -> b
    void setListShown(boolean,boolean) -> a
    android.widget.ListAdapter getListAdapter() -> d
    void ensureList() -> e
android.support.v4.app.ListFragment$1 -> android.support.v4.app.at:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.au:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.av:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void enableDebugLogging(boolean) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aw:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ax:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    android.support.v4.util.SparseArrayCompat mLoaders -> c
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> d
    java.lang.String mWho -> e
    android.support.v4.app.FragmentActivity mActivity -> f
    boolean mStarted -> g
    boolean mRetaining -> h
    boolean mRetainingStarted -> i
    boolean mCreatingLoader -> j
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ay:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.az:
    java.lang.String TAG -> b
    java.lang.String PARENT_ACTIVITY -> a
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> c
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpFromSameTask(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    android.content.Intent getParentActivityIntent(android.app.Activity) -> b
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.app.Activity) -> c
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ba:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.bb:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.bc:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.bd:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.be:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.bf:
    int FLAG_HIGH_PRIORITY -> a
    int PRIORITY_DEFAULT -> b
    int PRIORITY_LOW -> c
    int PRIORITY_MIN -> d
    int PRIORITY_HIGH -> e
    int PRIORITY_MAX -> f
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> g
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.bg:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.bh:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> a
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> b
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.bi:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.bj:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> b
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> d
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> b
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> e
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> a
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> a
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> a
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> a
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> b
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> c
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> d
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> c
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> d
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> a
    android.app.Notification getNotification() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.bk:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.bl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.bm:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.bn:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.bo:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.bp:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.bq:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.br:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.bs:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bt:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.ServiceCompat -> android.support.v4.app.bu:
    int START_STICKY -> a
android.support.v4.app.ShareCompat -> android.support.v4.app.bv:
    java.lang.String EXTRA_CALLING_PACKAGE -> a
    java.lang.String EXTRA_CALLING_ACTIVITY -> b
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> c
    java.lang.String getCallingPackage(android.app.Activity) -> a
    android.content.ComponentName getCallingActivity(android.app.Activity) -> b
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.bw:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> a
    android.content.Intent getIntent() -> a
    android.app.Activity getActivity() -> b
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    android.content.Intent createChooserIntent() -> c
    void startChooser() -> d
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> a
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> a
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> a
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> b
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> b
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> a
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> b
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> a
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> c
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> b
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> c
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> d
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> d
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> e
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> e
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> f
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> f
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.bx:
    java.lang.String TAG -> a
    android.app.Activity mActivity -> b
    android.content.Intent mIntent -> c
    java.lang.String mCallingPackage -> d
    android.content.ComponentName mCallingActivity -> e
    java.util.ArrayList mStreams -> f
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> a
    boolean isShareIntent() -> a
    boolean isSingleShare() -> b
    boolean isMultipleShare() -> c
    java.lang.String getType() -> d
    java.lang.CharSequence getText() -> e
    java.lang.String getHtmlText() -> f
    android.net.Uri getStream() -> g
    android.net.Uri getStream(int) -> a
    int getStreamCount() -> h
    java.lang.String[] getEmailTo() -> i
    java.lang.String[] getEmailCc() -> j
    java.lang.String[] getEmailBcc() -> k
    java.lang.String getSubject() -> l
    java.lang.String getCallingPackage() -> m
    android.content.ComponentName getCallingActivity() -> n
    android.graphics.drawable.Drawable getCallingActivityIcon() -> o
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> p
    java.lang.CharSequence getCallingApplicationLabel() -> q
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.by:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.bz:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ca:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.cb:
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.cc:
    java.lang.String HISTORY_FILENAME_PREFIX -> a
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> a
android.support.v4.app.ShareCompatJB -> android.support.v4.app.cd:
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ce:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.cf:
    java.lang.String TAG -> a
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> b
    java.util.ArrayList mIntents -> c
    android.content.Context mSourceContext -> d
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> b
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> b
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    int getIntentCount() -> a
    android.content.Intent getIntent(int) -> a
    android.content.Intent editIntentAt(int) -> b
    java.util.Iterator iterator() -> iterator
    void startActivities() -> b
    void startActivities(android.os.Bundle) -> a
    android.app.PendingIntent getPendingIntent(int,int) -> a
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> a
    android.content.Intent[] getIntents() -> c
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.cg:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.ch:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.ci:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.cj:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.ck:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> a
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.cl:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> a
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.a:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> c
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> d
    long mUpdateThrottle -> e
    long mLastLoadCompleteTime -> f
    android.os.Handler mHandler -> g
    void setUpdateThrottle(long) -> a
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void waitForLoader() -> f
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.c:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> a
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.d:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.e:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.CursorLoader -> android.support.v4.content.f:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> h
    android.net.Uri mUri -> i
    java.lang.String[] mProjection -> j
    java.lang.String mSelection -> k
    java.lang.String[] mSelectionArgs -> l
    java.lang.String mSortOrder -> m
    android.database.Cursor mCursor -> n
    android.database.Cursor loadInBackground() -> g
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> h
    void onStopLoading() -> i
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> j
    android.net.Uri getUri() -> k
    void setUri(android.net.Uri) -> a
    java.lang.String[] getProjection() -> l
    void setProjection(java.lang.String[]) -> a
    java.lang.String getSelection() -> m
    void setSelection(java.lang.String) -> a
    java.lang.String[] getSelectionArgs() -> n
    void setSelectionArgs(java.lang.String[]) -> b
    java.lang.String getSortOrder() -> o
    void setSortOrder(java.lang.String) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> b
    java.lang.String TAG_ROOT_PATH -> c
    java.lang.String TAG_FILES_PATH -> d
    java.lang.String TAG_CACHE_PATH -> e
    java.lang.String TAG_EXTERNAL -> f
    java.lang.String ATTR_NAME -> g
    java.lang.String ATTR_PATH -> h
    java.io.File DEVICE_ROOT -> i
    java.util.HashMap sCache -> j
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> k
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> a
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.g:
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.h:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.i:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> h
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> a
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> b
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> c
    java.lang.String EXTRA_CHANGED_UID_LIST -> d
    java.lang.String EXTRA_HTML_TEXT -> e
    int FLAG_ACTIVITY_TASK_ON_HOME -> f
    int FLAG_ACTIVITY_CLEAR_TASK -> g
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.j:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.k:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.l:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.m:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.n:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.o:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.Loader -> android.support.v4.content.p:
    int mId -> o
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> p
    android.content.Context mContext -> q
    boolean mStarted -> r
    boolean mAbandoned -> s
    boolean mReset -> t
    boolean mContentChanged -> u
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> p
    int getId() -> q
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> r
    boolean isAbandoned() -> s
    boolean isReset() -> t
    void startLoading() -> u
    void onStartLoading() -> h
    void forceLoad() -> v
    void onForceLoad() -> a
    void stopLoading() -> w
    void onStopLoading() -> i
    void abandon() -> x
    void onAbandon() -> y
    void reset() -> z
    void onReset() -> j
    boolean takeContentChanged() -> A
    void onContentChanged() -> B
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.q:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.r:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.s:
    java.lang.String TAG -> b
    boolean DEBUG -> c
    android.content.Context mAppContext -> d
    java.util.HashMap mReceivers -> e
    java.util.HashMap mActions -> f
    java.util.ArrayList mPendingBroadcasts -> g
    int MSG_EXEC_PENDING_BROADCASTS -> a
    android.os.Handler mHandler -> h
    java.lang.Object mLock -> i
    android.support.v4.content.LocalBroadcastManager mInstance -> j
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void sendBroadcastSync(android.content.Intent) -> b
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.t:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.u:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.v:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.w:
    java.lang.String LOG_TAG -> a
    int CORE_POOL_SIZE -> b
    int MAXIMUM_POOL_SIZE -> c
    int KEEP_ALIVE -> e
    java.util.concurrent.ThreadFactory sThreadFactory -> f
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> g
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    int MESSAGE_POST_RESULT -> h
    int MESSAGE_POST_PROGRESS -> i
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> j
    java.util.concurrent.Executor sDefaultExecutor -> k
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> l
    java.util.concurrent.FutureTask mFuture -> m
    android.support.v4.content.ModernAsyncTask$Status mStatus -> n
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> o
    void init() -> b
    void setDefaultExecutor(java.util.concurrent.Executor) -> a
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> d
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> e
    boolean cancel(boolean) -> a
    java.lang.Object get() -> f
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> a
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> c
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void execute(java.lang.Runnable) -> a
    void publishProgress(java.lang.Object[]) -> d
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.x:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.y:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.z:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.aa:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ab:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ac:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ad:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ae:
    java.lang.Object[] mParams -> b
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.a.a:
    int CONFIG_UI_MODE -> a
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.b.a:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> a
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> a
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.c.a:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> a
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.c.b:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.c.c:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.c.d:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.c.e:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.c.f:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.c.g:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.c.h:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.c.i:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.TrafficStatsCompat -> android.support.v4.c.j:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.c.k:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.c.l:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.c.m:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> a
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.c.n:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.c.o:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.c.p:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.c.q:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.d.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.d.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.d.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.d.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.d.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.AtomicFile -> android.support.v4.e.a:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> a
    void delete() -> b
    java.io.FileOutputStream startWrite() -> c
    void finishWrite(java.io.FileOutputStream) -> a
    void failWrite(java.io.FileOutputStream) -> b
    java.io.FileInputStream openRead() -> d
    byte[] readFully() -> e
    boolean sync(java.io.FileOutputStream) -> c
android.support.v4.util.DebugUtils -> android.support.v4.e.b:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.e.c:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.e.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> a
    java.lang.Object get(long) -> a
    java.lang.Object get(long,java.lang.Object) -> a
    void delete(long) -> b
    void remove(long) -> c
    void removeAt(int) -> a
    void gc() -> d
    void put(long,java.lang.Object) -> b
    int size() -> b
    long keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    void setValueAt(int,java.lang.Object) -> a
    int indexOfKey(long) -> d
    int indexOfValue(java.lang.Object) -> a
    void clear() -> c
    void append(long,java.lang.Object) -> c
    int binarySearch(long[],int,int,long) -> a
    int idealByteArraySize(int) -> d
    int idealLongArraySize(int) -> e
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.e.e:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    int size() -> b
    int maxSize() -> c
    int hitCount() -> d
    int missCount() -> e
    int createCount() -> f
    int putCount() -> g
    int evictionCount() -> h
    java.util.Map snapshot() -> i
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.e.f:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void removeAtRange(int,int) -> a
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void setValueAt(int,java.lang.Object) -> c
    int indexOfKey(int) -> g
    int indexOfValue(java.lang.Object) -> a
    void clear() -> b
    void append(int,java.lang.Object) -> d
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> h
    int idealIntArraySize(int) -> i
android.support.v4.util.TimeUtils -> android.support.v4.e.g:
    int HUNDRED_DAY_FIELD_LEN -> a
    int SECONDS_PER_MINUTE -> b
    int SECONDS_PER_HOUR -> c
    int SECONDS_PER_DAY -> d
    java.lang.Object sFormatSync -> e
    char[] sFormatStr -> f
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.n:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.o:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.p:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    int SHOW_PRESS -> h
    int LONG_PRESS -> i
    int TAP -> j
    android.os.Handler mHandler -> k
    android.view.GestureDetector$OnGestureListener mListener -> l
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> m
    boolean mStillDown -> n
    boolean mDeferConfirmSingleTap -> o
    boolean mInLongPress -> p
    boolean mAlwaysInTapRegion -> q
    boolean mAlwaysInBiggerTapRegion -> r
    android.view.MotionEvent mCurrentDownEvent -> s
    android.view.MotionEvent mPreviousUpEvent -> t
    boolean mIsDoubleTapping -> u
    float mLastFocusX -> v
    float mLastFocusY -> w
    float mDownFocusX -> x
    float mDownFocusY -> y
    boolean mIsLongpressEnabled -> z
    android.view.VelocityTracker mVelocityTracker -> A
    void init(android.content.Context) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    void setIsLongpressEnabled(boolean) -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void cancel() -> b
    void cancelTaps() -> c
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> d
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.q:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.r:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.s:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int RELATIVE_LAYOUT_DIRECTION -> b
    int START -> c
    int END -> d
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> e
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.t:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.u:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.v:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.w:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.x:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
    boolean isTracking(android.view.KeyEvent) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.y:
    int META_MODIFIER_MASK -> a
    int META_ALL_MASK -> b
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.z:
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.aa:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.ab:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.ac:
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.ad:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MenuCompat -> android.support.v4.view.ae:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> a
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.af:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ag:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.ah:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuItemCompat -> android.support.v4.view.ai:
    int SHOW_AS_ACTION_NEVER -> a
    int SHOW_AS_ACTION_IF_ROOM -> b
    int SHOW_AS_ACTION_ALWAYS -> c
    int SHOW_AS_ACTION_WITH_TEXT -> d
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> e
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> f
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.aj:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ak:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.al:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.am:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.an:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> b
    int ACTION_POINTER_DOWN -> c
    int ACTION_POINTER_UP -> d
    int ACTION_HOVER_MOVE -> e
    int ACTION_SCROLL -> f
    int ACTION_POINTER_INDEX_MASK -> g
    int ACTION_POINTER_INDEX_SHIFT -> h
    int ACTION_HOVER_ENTER -> i
    int ACTION_HOVER_EXIT -> j
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.ao:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ap:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.aq:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ar:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.as:
    android.database.DataSetObservable mObservable -> c
    int POSITION_UNCHANGED -> a
    int POSITION_NONE -> b
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> f
    int INDICATOR_HEIGHT -> g
    int MIN_PADDING_BOTTOM -> h
    int TAB_PADDING -> i
    int TAB_SPACING -> j
    int MIN_TEXT_SPACING -> k
    int FULL_UNDERLINE_HEIGHT -> l
    int MIN_STRIP_HEIGHT -> m
    int mIndicatorColor -> n
    int mIndicatorHeight -> o
    int mMinPaddingBottom -> p
    int mMinTextSpacing -> q
    int mMinStripHeight -> r
    int mTabPadding -> s
    android.graphics.Paint mTabPaint -> t
    android.graphics.Rect mTempRect -> u
    int mTabAlpha -> v
    boolean mDrawFullUnderline -> w
    boolean mDrawFullUnderlineSet -> x
    int mFullUnderlineHeight -> y
    boolean mIgnoreTap -> z
    float mInitialMotionX -> A
    float mInitialMotionY -> B
    int mTouchSlop -> C
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.at:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.au:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> f
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> g
    float mLastKnownPositionOffset -> h
    int mScaledTextSpacing -> i
    int mGravity -> j
    boolean mUpdatingText -> k
    boolean mUpdatingPositions -> l
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> m
    java.lang.ref.WeakReference mWatchingAdapter -> n
    int[] ATTRS -> o
    int[] TEXT_ATTRS -> p
    float SIDE_ALPHA -> q
    int TEXT_SPACING -> r
    int mNonPrimaryAlpha -> s
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> t
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.av:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.aw:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ax:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ay:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.az:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ba:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.bb:
    java.lang.String TAG -> a
    java.util.Locale mLocale -> b
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.bc:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.bd:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.be:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.bf:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.bg:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.bh:
    int OVER_SCROLL_ALWAYS -> a
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> b
    int OVER_SCROLL_NEVER -> c
    long FAKE_FRAME_TIME -> o
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> d
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> e
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> f
    int LAYER_TYPE_NONE -> g
    int LAYER_TYPE_SOFTWARE -> h
    int LAYER_TYPE_HARDWARE -> i
    int LAYOUT_DIRECTION_LTR -> j
    int LAYOUT_DIRECTION_RTL -> k
    int LAYOUT_DIRECTION_INHERIT -> l
    int LAYOUT_DIRECTION_LOCALE -> m
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> n
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    int getLabelFor(android.view.View) -> g
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bi:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    int getLabelFor(android.view.View) -> g
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bj:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bk:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.bl:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bm:
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bn:
    int getLabelFor(android.view.View) -> g
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    void setLayoutDirection(android.view.View,int) -> f
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bo:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    int getLabelFor(android.view.View) -> g
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bp:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bq:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.br:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> b
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bs:
    boolean hasTransientState(android.view.View) -> a
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bt:
    int getLabelFor(android.view.View) -> a
    void setLabelFor(android.view.View,int) -> a
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> b
    void setLayoutDirection(android.view.View,int) -> b
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bu:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bv:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bw:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bx:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.by:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bz:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ca:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.cb:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.cc:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.cd:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ce:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.cf:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> d
    boolean DEBUG -> e
    boolean USE_CACHE -> f
    int DEFAULT_OFFSCREEN_PAGES -> g
    int MAX_SETTLE_DURATION -> h
    int MIN_DISTANCE_FOR_FLING -> i
    int DEFAULT_GUTTER_SIZE -> j
    int MIN_FLING_VELOCITY -> k
    int[] LAYOUT_ATTRS -> l
    int mExpectedAdapterCount -> m
    java.util.Comparator COMPARATOR -> n
    android.view.animation.Interpolator sInterpolator -> o
    java.util.ArrayList mItems -> p
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> q
    android.graphics.Rect mTempRect -> r
    android.support.v4.view.PagerAdapter mAdapter -> s
    int mCurItem -> t
    int mRestoredCurItem -> u
    android.os.Parcelable mRestoredAdapterState -> v
    java.lang.ClassLoader mRestoredClassLoader -> w
    android.widget.Scroller mScroller -> x
    android.support.v4.view.ViewPager$PagerObserver mObserver -> y
    int mPageMargin -> z
    android.graphics.drawable.Drawable mMarginDrawable -> A
    int mTopPageBounds -> B
    int mBottomPageBounds -> C
    float mFirstOffset -> D
    float mLastOffset -> E
    int mChildWidthMeasureSpec -> F
    int mChildHeightMeasureSpec -> G
    boolean mInLayout -> H
    boolean mScrollingCacheEnabled -> I
    boolean mPopulatePending -> J
    int mOffscreenPageLimit -> K
    boolean mIsBeingDragged -> L
    boolean mIsUnableToDrag -> M
    boolean mIgnoreGutter -> N
    int mDefaultGutterSize -> O
    int mGutterSize -> P
    int mTouchSlop -> Q
    float mLastMotionX -> R
    float mLastMotionY -> S
    float mInitialMotionX -> T
    float mInitialMotionY -> U
    int mActivePointerId -> V
    int INVALID_POINTER -> W
    android.view.VelocityTracker mVelocityTracker -> Z
    int mMinimumVelocity -> aa
    int mMaximumVelocity -> ab
    int mFlingDistance -> ac
    int mCloseEnough -> ad
    int CLOSE_ENOUGH -> ae
    boolean mFakeDragging -> af
    long mFakeDragBeginTime -> ag
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> ah
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> ai
    boolean mFirstLayout -> aj
    boolean mNeedCalculatePageOffsets -> ak
    boolean mCalledSuper -> al
    int mDecorChildCount -> am
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> an
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> ao
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ap
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aq
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ar
    int DRAW_ORDER_DEFAULT -> as
    int DRAW_ORDER_FORWARD -> at
    int DRAW_ORDER_REVERSE -> au
    int mDrawingOrder -> av
    java.util.ArrayList mDrawingOrderedChildren -> aw
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ax
    int SCROLL_STATE_IDLE -> a
    int SCROLL_STATE_DRAGGING -> b
    int SCROLL_STATE_SETTLING -> c
    java.lang.Runnable mEndScrollRunnable -> ay
    int mScrollState -> az
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> j
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> a
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> b
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> k
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> c
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> l
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> b
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> m
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> g
    boolean pageRight() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> i
android.support.v4.view.ViewPager$1 -> android.support.v4.view.cg:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ch:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ci:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.cj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ck:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.cn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.co:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.cq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.cr:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cs:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> q
    int TYPE_VIEW_HOVER_ENTER -> a
    int TYPE_VIEW_HOVER_EXIT -> b
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> c
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> d
    int TYPE_WINDOW_CONTENT_CHANGED -> e
    int TYPE_VIEW_SCROLLED -> f
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> g
    int TYPE_ANNOUNCEMENT -> h
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> i
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> j
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> k
    int TYPE_GESTURE_DETECTION_START -> l
    int TYPE_GESTURE_DETECTION_END -> m
    int TYPE_TOUCH_INTERACTION_START -> n
    int TYPE_TOUCH_INTERACTION_END -> o
    int TYPES_ALL_MASK -> p
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.b:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.a.c:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.d:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.a.e:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.a.f:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.a.g:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.a.k:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.a.n:
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> x
    java.lang.Object mInfo -> y
    int ACTION_FOCUS -> a
    int ACTION_CLEAR_FOCUS -> b
    int ACTION_SELECT -> c
    int ACTION_CLEAR_SELECTION -> d
    int ACTION_CLICK -> e
    int ACTION_LONG_CLICK -> f
    int ACTION_ACCESSIBILITY_FOCUS -> g
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> h
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> i
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> j
    int ACTION_NEXT_HTML_ELEMENT -> k
    int ACTION_PREVIOUS_HTML_ELEMENT -> l
    int ACTION_SCROLL_FORWARD -> m
    int ACTION_SCROLL_BACKWARD -> n
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> o
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> p
    int FOCUS_INPUT -> q
    int FOCUS_ACCESSIBILITY -> r
    int MOVEMENT_GRANULARITY_CHARACTER -> s
    int MOVEMENT_GRANULARITY_WORD -> t
    int MOVEMENT_GRANULARITY_LINE -> u
    int MOVEMENT_GRANULARITY_PARAGRAPH -> v
    int MOVEMENT_GRANULARITY_PAGE -> w
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> b
    void setSource(android.view.View,int) -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> b
    int getWindowId() -> c
    int getChildCount() -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> c
    void addChild(android.view.View) -> c
    void addChild(android.view.View,int) -> c
    int getActions() -> e
    void addAction(int) -> d
    boolean performAction(int) -> e
    boolean performAction(int,android.os.Bundle) -> a
    void setMovementGranularities(int) -> f
    int getMovementGranularities() -> f
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> g
    void setParent(android.view.View) -> d
    void setParent(android.view.View,int) -> d
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> h
    void setCheckable(boolean) -> a
    boolean isChecked() -> i
    void setChecked(boolean) -> b
    boolean isFocusable() -> j
    void setFocusable(boolean) -> c
    boolean isFocused() -> k
    void setFocused(boolean) -> d
    boolean isVisibleToUser() -> l
    void setVisibleToUser(boolean) -> e
    boolean isAccessibilityFocused() -> m
    void setAccessibilityFocused(boolean) -> f
    boolean isSelected() -> n
    void setSelected(boolean) -> g
    boolean isClickable() -> o
    void setClickable(boolean) -> h
    boolean isLongClickable() -> p
    void setLongClickable(boolean) -> i
    boolean isEnabled() -> q
    void setEnabled(boolean) -> j
    boolean isPassword() -> r
    void setPassword(boolean) -> k
    boolean isScrollable() -> s
    void setScrollable(boolean) -> l
    java.lang.CharSequence getPackageName() -> t
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> u
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> v
    void setText(java.lang.CharSequence) -> c
    java.lang.CharSequence getContentDescription() -> w
    void setContentDescription(java.lang.CharSequence) -> d
    void recycle() -> x
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.p:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.q:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> b
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> g
    void setParent(java.lang.Object,android.view.View,int) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.r:
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void addChild(java.lang.Object,android.view.View,int) -> b
    void setSource(java.lang.Object,android.view.View,int) -> a
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.s:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isVisibleToUser(java.lang.Object) -> v
    boolean isAccessibilityFocused(java.lang.Object) -> w
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setVisibleToUser(java.lang.Object,boolean) -> k
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
    void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.t:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.u:
    void addChild(java.lang.Object,android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View,int) -> b
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> b
    java.lang.Object focusSearch(java.lang.Object,int) -> c
    void setParent(java.lang.Object,android.view.View,int) -> c
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.w:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.x:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.y:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.z:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.aa:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.ab:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.ac:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.ad:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> b
    void setSource(android.view.View) -> a
    void setSource(android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> c
    int getWindowId() -> d
    boolean isChecked() -> e
    void setChecked(boolean) -> a
    boolean isEnabled() -> f
    void setEnabled(boolean) -> b
    boolean isPassword() -> g
    void setPassword(boolean) -> c
    boolean isFullScreen() -> h
    void setFullScreen(boolean) -> d
    boolean isScrollable() -> i
    void setScrollable(boolean) -> e
    int getItemCount() -> j
    void setItemCount(int) -> a
    int getCurrentItemIndex() -> k
    void setCurrentItemIndex(int) -> b
    int getFromIndex() -> l
    void setFromIndex(int) -> c
    int getToIndex() -> m
    void setToIndex(int) -> d
    int getScrollX() -> n
    void setScrollX(int) -> e
    int getScrollY() -> o
    void setScrollY(int) -> f
    int getMaxScrollX() -> p
    void setMaxScrollX(int) -> g
    int getMaxScrollY() -> q
    void setMaxScrollY(int) -> h
    int getAddedCount() -> r
    void setAddedCount(int) -> i
    int getRemovedCount() -> s
    void setRemovedCount(int) -> j
    java.lang.CharSequence getClassName() -> t
    void setClassName(java.lang.CharSequence) -> a
    java.util.List getText() -> u
    java.lang.CharSequence getBeforeText() -> v
    void setBeforeText(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> w
    void setContentDescription(java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData() -> x
    void setParcelableData(android.os.Parcelable) -> a
    void recycle() -> y
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.ae:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.af:
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ag:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    void setChecked(java.lang.Object,boolean) -> a
    boolean isEnabled(java.lang.Object) -> r
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> t
    void setPassword(java.lang.Object,boolean) -> d
    boolean isFullScreen(java.lang.Object) -> s
    void setFullScreen(java.lang.Object,boolean) -> c
    boolean isScrollable(java.lang.Object) -> u
    void setScrollable(java.lang.Object,boolean) -> e
    int getItemCount(java.lang.Object) -> h
    void setItemCount(java.lang.Object,int) -> d
    int getCurrentItemIndex(java.lang.Object) -> f
    void setCurrentItemIndex(java.lang.Object,int) -> b
    int getFromIndex(java.lang.Object) -> g
    void setFromIndex(java.lang.Object,int) -> c
    int getToIndex(java.lang.Object) -> o
    void setToIndex(java.lang.Object,int) -> h
    int getScrollX(java.lang.Object) -> k
    void setScrollX(java.lang.Object,int) -> f
    int getScrollY(java.lang.Object) -> l
    void setScrollY(java.lang.Object,int) -> g
    int getMaxScrollX(java.lang.Object) -> w
    void setMaxScrollX(java.lang.Object,int) -> i
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollY(java.lang.Object,int) -> j
    int getAddedCount(java.lang.Object) -> b
    void setAddedCount(java.lang.Object,int) -> a
    int getRemovedCount(java.lang.Object) -> j
    void setRemovedCount(java.lang.Object,int) -> e
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.util.List getText(java.lang.Object) -> n
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void recycle(java.lang.Object) -> v
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ah:
    void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ai:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.aj:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    java.lang.Object getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.a.ak:
    int getMaxScrollX(java.lang.Object) -> a
    int getMaxScrollY(java.lang.Object) -> b
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.a.al:
    void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    int FLAG_AUTO_REQUERY -> j
    int FLAG_REGISTER_CONTENT_OBSERVER -> k
    void init(android.content.Context,android.database.Cursor,boolean) -> a
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> b
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> a
    void onContentChanged() -> c
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> g
    int STATE_IDLE -> a
    int STATE_DRAGGING -> b
    int STATE_SETTLING -> c
    int LOCK_MODE_UNLOCKED -> d
    int LOCK_MODE_LOCKED_CLOSED -> e
    int LOCK_MODE_LOCKED_OPEN -> f
    int MIN_DRAWER_MARGIN -> h
    int DEFAULT_SCRIM_COLOR -> i
    int PEEK_DELAY -> j
    int MIN_FLING_VELOCITY -> k
    boolean ALLOW_EDGE_LOCK -> l
    int[] LAYOUT_ATTRS -> m
    int mMinDrawerMargin -> n
    int mScrimColor -> o
    float mScrimOpacity -> p
    android.graphics.Paint mScrimPaint -> q
    android.support.v4.widget.ViewDragHelper mLeftDragger -> r
    android.support.v4.widget.ViewDragHelper mRightDragger -> s
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> t
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> u
    int mDrawerState -> v
    boolean mInLayout -> w
    boolean mFirstLayout -> x
    int mLockModeLeft -> y
    int mLockModeRight -> z
    boolean mDisallowInterceptRequested -> A
    boolean mChildrenCanceledTouch -> B
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> C
    float mInitialMotionX -> D
    float mInitialMotionY -> E
    android.graphics.drawable.Drawable mShadowLeft -> F
    android.graphics.drawable.Drawable mShadowRight -> G
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    void setDrawerLockMode(int,android.view.View) -> a
    int getDrawerLockMode(int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    void moveDrawerToOffset(android.view.View,float) -> c
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> e
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> f
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> g
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.g:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.h:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.i:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.j:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.k:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.l:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.m:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.n:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.o:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.p:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.q:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.r:
    int mLayout -> l
    int mDropDownLayout -> m
    android.view.LayoutInflater mInflater -> n
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void setViewResource(int) -> a
    void setDropDownViewResource(int) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.s:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> a
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    float getCurrVelocity() -> f
    boolean computeScrollOffset() -> g
    void startScroll(int,int,int,int) -> a
    void startScroll(int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation() -> h
    void notifyHorizontalEdgeReached(int,int,int) -> a
    void notifyVerticalEdgeReached(int,int,int) -> b
    boolean isOverScrolled() -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.t:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.u:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.v:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.w:
    float getCurrVelocity(java.lang.Object) -> d
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.x:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.y:
    float getCurrVelocity(java.lang.Object) -> a
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.z:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> a
    void setInputType(android.view.View,int) -> b
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> c
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.aa:
    java.lang.Object mListener -> a
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.ab:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.ac:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.ad:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.ae:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.af:
    android.view.View newSearchView(android.content.Context) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.ag:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.ah:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.ai:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.aj:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.ak:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.al:
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.am:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.an:
    android.view.View newSearchView(android.content.Context) -> a
    void setImeOptions(android.view.View,int) -> a
    void setInputType(android.view.View,int) -> b
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.ao:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.ap:
    int[] mFrom -> l
    int[] mTo -> m
    int mStringConversionColumn -> o
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> p
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> q
    java.lang.String[] mOriginalFrom -> n
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> d
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    int getStringConversionColumn() -> e
    void setStringConversionColumn(int) -> c
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> f
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> a
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.aq:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.ar:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> b
    int DEFAULT_OVERHANG_SIZE -> c
    int DEFAULT_FADE_COLOR -> d
    int mSliderFadeColor -> e
    int MIN_FLING_VELOCITY -> f
    int mCoveredFadeColor -> g
    android.graphics.drawable.Drawable mShadowDrawable -> h
    int mOverhangSize -> i
    boolean mCanSlide -> j
    android.view.View mSlideableView -> k
    float mSlideOffset -> l
    float mParallaxOffset -> m
    int mSlideRange -> n
    boolean mIsUnableToDrag -> o
    int mParallaxBy -> p
    float mInitialMotionX -> q
    float mInitialMotionY -> r
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> s
    android.support.v4.widget.ViewDragHelper mDragHelper -> t
    boolean mPreservedOpenState -> u
    boolean mFirstLayout -> v
    android.graphics.Rect mTmpRect -> w
    java.util.ArrayList mPostedRunnables -> x
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean hasOpaqueBackground(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    void smoothSlideOpen() -> b
    boolean openPane() -> c
    void smoothSlideClosed() -> d
    boolean closePane() -> e
    boolean isOpen() -> f
    boolean canSlide() -> g
    boolean isSlideable() -> h
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.as:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.at:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.au:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.av:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.aw:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ax:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.ay:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.az:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ba:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.bb:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.bc:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.bd:
    java.lang.String TAG -> m
    int INVALID_POINTER -> a
    int STATE_IDLE -> b
    int STATE_DRAGGING -> c
    int STATE_SETTLING -> d
    int EDGE_LEFT -> e
    int EDGE_RIGHT -> f
    int EDGE_TOP -> g
    int EDGE_BOTTOM -> h
    int EDGE_ALL -> i
    int DIRECTION_HORIZONTAL -> j
    int DIRECTION_VERTICAL -> k
    int DIRECTION_ALL -> l
    int EDGE_SIZE -> n
    int BASE_SETTLE_DURATION -> o
    int MAX_SETTLE_DURATION -> p
    int mDragState -> q
    int mTouchSlop -> r
    int mActivePointerId -> s
    float[] mInitialMotionX -> t
    float[] mInitialMotionY -> u
    float[] mLastMotionX -> v
    float[] mLastMotionY -> w
    int[] mInitialEdgesTouched -> x
    int[] mEdgeDragsInProgress -> y
    int[] mEdgeDragsLocked -> z
    int mPointersDown -> A
    android.view.VelocityTracker mVelocityTracker -> B
    float mMaxVelocity -> C
    float mMinVelocity -> D
    int mEdgeSize -> E
    int mTrackingEdges -> F
    android.support.v4.widget.ScrollerCompat mScroller -> G
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> H
    android.view.View mCapturedView -> I
    boolean mReleaseInProgress -> J
    android.view.ViewGroup mParentView -> K
    android.view.animation.Interpolator sInterpolator -> L
    java.lang.Runnable mSetIdleRunnable -> M
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    float getMinVelocity() -> a
    int getViewDragState() -> b
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> c
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> d
    int getActivePointerId() -> e
    int getTouchSlop() -> f
    void cancel() -> g
    void abort() -> h
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> b
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    void flingCapturedView(int,int,int,int) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> i
    void clearMotionHistory(int) -> f
    void ensureMotionHistorySizeForId(int) -> g
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> a
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    boolean isEdgeTouched(int) -> e
    boolean isEdgeTouched(int,int) -> c
    void releaseViewForPointerUp() -> j
    void dragTo(int,int,int,int) -> c
    boolean isCapturedViewUnder(int,int) -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> e
    int getEdgesTouched(int,int) -> f
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.be:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.bf:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.bg:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.google.ads.Ad -> com.google.ads.a:
    boolean isReady() -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void stopLoading() -> b
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.String BASE_URL_PARAM -> a
    java.lang.String HTML_PARAM -> b
    java.lang.String URL_PARAM -> c
    java.lang.String CUSTOM_CLOSE_PARAM -> d
    java.lang.String INTENT_ACTION_PARAM -> e
    java.lang.String TYPE_PARAM -> f
    java.lang.String COMPONENT_NAME_PARAM -> g
    java.lang.String PACKAGE_NAME_PARAM -> h
    java.lang.String INTENT_FLAGS_PARAM -> i
    java.lang.String INTENT_EXTRAS_PARAM -> j
    java.lang.String ORIENTATION_PARAM -> k
    com.google.ads.internal.a a -> l
    java.lang.Object b -> m
    com.google.ads.AdActivity c -> n
    com.google.ads.internal.d d -> o
    com.google.ads.AdActivity e -> p
    com.google.ads.AdActivity f -> q
    com.google.ads.AdActivity$StaticMethodWrapper g -> r
    com.google.ads.internal.AdWebView h -> s
    android.widget.FrameLayout i -> t
    int j -> u
    android.view.ViewGroup k -> v
    boolean l -> w
    long m -> x
    android.widget.RelativeLayout n -> y
    com.google.ads.AdActivity o -> z
    boolean p -> A
    boolean q -> B
    boolean r -> C
    boolean s -> D
    com.google.ads.internal.AdVideoView t -> E
    android.view.View a(int,boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    com.google.ads.internal.AdWebView getOpeningAdWebView() -> b
    boolean isShowing() -> c
    boolean leftApplication() -> d
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void a(java.util.HashMap,com.google.ads.internal.d) -> a
    void a(com.google.ads.internal.d) -> a
    com.google.ads.internal.AdVideoView a(android.app.Activity) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> i
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> e
    com.google.ads.AdActivity b() -> f
    com.google.ads.AdActivity c() -> g
    com.google.ads.internal.d d() -> h
    com.google.ads.internal.d b(com.google.ads.internal.d) -> b
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.b:
    boolean isShowing() -> a
    boolean leftApplication() -> b
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.c:
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> c
    void onLeaveApplication(com.google.ads.Ad) -> d
com.google.ads.AdRequest -> com.google.ads.d:
    java.lang.String VERSION -> a
    java.text.SimpleDateFormat a -> d
    java.lang.reflect.Method b -> e
    java.lang.reflect.Method c -> f
    com.google.ads.AdRequest$Gender d -> g
    java.util.Date e -> h
    java.util.Set f -> i
    java.util.Map g -> j
    java.util.Map h -> k
    android.location.Location i -> l
    boolean j -> m
    boolean k -> n
    java.lang.String LOGTAG -> b
    java.lang.String TEST_EMULATOR -> c
    java.util.Set l -> o
    com.google.ads.AdRequest setGender(com.google.ads.AdRequest$Gender) -> a
    com.google.ads.AdRequest$Gender getGender() -> a
    com.google.ads.AdRequest setBirthday(java.lang.String) -> a
    com.google.ads.AdRequest setBirthday(java.util.Date) -> a
    com.google.ads.AdRequest setBirthday(java.util.Calendar) -> a
    java.util.Date getBirthday() -> b
    com.google.ads.AdRequest clearBirthday() -> c
    com.google.ads.AdRequest setPlusOneOptOut(boolean) -> a
    boolean getPlusOneOptOut() -> d
    com.google.ads.AdRequest setKeywords(java.util.Set) -> a
    com.google.ads.AdRequest addKeyword(java.lang.String) -> b
    com.google.ads.AdRequest addKeywords(java.util.Set) -> b
    java.util.Set getKeywords() -> e
    com.google.ads.mediation.admob.AdMobAdapterExtras a() -> g
    com.google.ads.AdRequest setExtras(java.util.Map) -> a
    com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object) -> a
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> a
    com.google.ads.AdRequest removeNetworkExtras(java.lang.Class) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> b
    com.google.ads.AdRequest setMediationExtras(java.util.Map) -> b
    com.google.ads.AdRequest addMediationExtra(java.lang.String,java.lang.Object) -> b
    com.google.ads.AdRequest setLocation(android.location.Location) -> a
    android.location.Location getLocation() -> f
    com.google.ads.AdRequest setTesting(boolean) -> b
    java.util.Map getRequestMap(android.content.Context) -> a
    com.google.ads.AdRequest addTestDevice(java.lang.String) -> c
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> c
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.e:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.f:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.g:
    int FULL_WIDTH -> a
    int AUTO_HEIGHT -> b
    int LANDSCAPE_AD_HEIGHT -> c
    int PORTRAIT_AD_HEIGHT -> d
    int LARGE_AD_HEIGHT -> e
    com.google.ads.AdSize SMART_BANNER -> f
    com.google.ads.AdSize BANNER -> g
    com.google.ads.AdSize IAB_MRECT -> h
    com.google.ads.AdSize IAB_BANNER -> i
    com.google.ads.AdSize IAB_LEADERBOARD -> j
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> k
    int a -> l
    int b -> m
    boolean c -> n
    boolean d -> o
    boolean e -> p
    java.lang.String f -> q
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
    int getWidthInPixels(android.content.Context) -> a
    int getHeightInPixels(android.content.Context) -> b
    boolean isSizeAppropriate(int,int) -> a
    com.google.ads.AdSize findBestSize(com.google.ads.AdSize[]) -> a
    int a(android.content.Context) -> c
    int b(android.content.Context) -> d
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void destroy() -> c
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    boolean a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> b
    java.util.Set c(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> c
    boolean a(java.lang.String,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    boolean isReady() -> a
    boolean isRefreshing() -> d
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void stopLoading() -> b
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.AppEventListener -> com.google.ads.h:
    void onAppEvent(com.google.ads.Ad,java.lang.String,java.lang.String) -> a
com.google.ads.InterstitialAd -> com.google.ads.i:
    com.google.ads.internal.d a -> a
    boolean isReady() -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void show() -> c
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> a
    void stopLoading() -> b
com.google.ads.SwipeableAdListener -> com.google.ads.j:
    void onAdActivated(com.google.ads.Ad) -> a
    void onAdDeactivated(com.google.ads.Ad) -> b
com.google.ads.a -> com.google.ads.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.l:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.m:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.n:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.o:
    android.content.Context a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    void run() -> run
com.google.ads.af -> com.google.ads.p:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.q:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$1 -> com.google.ads.r:
com.google.ads.ag$a -> com.google.ads.s:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> com.google.ads.t:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> com.google.ads.u:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> com.google.ads.v:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> com.google.ads.w:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> com.google.ads.x:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> com.google.ads.y:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> com.google.ads.z:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> com.google.ads.aa:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> com.google.ads.ab:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> com.google.ads.ac:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> com.google.ads.ad:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> com.google.ads.ae:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> com.google.ads.af:
    java.lang.String[] a -> a
com.google.ads.ai -> com.google.ads.ag:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.ah:
    com.google.ads.at c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
    java.lang.String a(byte[],java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
com.google.ads.ak -> com.google.ads.ai:
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.String i -> i
    long j -> j
    boolean c -> c
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> b
    void f(android.content.Context) -> f
com.google.ads.ak$a -> com.google.ads.aj:
com.google.ads.al -> com.google.ads.ak:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] c -> c
    com.google.ads.ai d -> d
    com.google.ads.ah e -> e
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,java.lang.String,java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.ads.am -> com.google.ads.al:
    void a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
com.google.ads.am$a -> com.google.ads.am:
com.google.ads.an -> com.google.ads.an:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.google.ads.ao -> com.google.ads.ao:
com.google.ads.ap -> com.google.ads.ap:
    char[] a -> a
    char[] b -> b
    byte[] c -> c
    byte[] d -> d
    char[] a(byte[],int,int,char[],int,char[]) -> a
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],int,int,char[],boolean) -> a
    char[] a(byte[],int,int,char[],int) -> a
    int a(char[],int,byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(char[],int,int) -> a
    byte[] a(char[],int,int,byte[]) -> a
com.google.ads.aq -> com.google.ads.aq:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.ar -> com.google.ads.ar:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.as -> com.google.ads.as:
    com.google.ads.internal.a a -> a
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,long,android.content.SharedPreferences) -> a
    void a(android.app.Activity) -> a
com.google.ads.as$1 -> com.google.ads.at:
    android.content.Context a -> a
    void run() -> run
com.google.ads.as$a -> com.google.ads.au:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    android.content.SharedPreferences$Editor a(android.content.Context) -> a
    void run() -> run
com.google.ads.at -> com.google.ads.av:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.at a(java.io.OutputStream) -> a
    com.google.ads.at a(java.io.OutputStream,int) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    void b() -> b
    void a() -> a
    void a(byte) -> a
    void a(int) -> a
    void a(byte[]) -> a
    void a(byte[],int,int) -> a
    void a(int,int) -> a
    void b(int) -> b
    void b(long) -> b
com.google.ads.at$a -> com.google.ads.aw:
com.google.ads.au -> com.google.ads.ax:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.ay:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
    byte[] a(long) -> a
com.google.ads.c -> com.google.ads.az:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.ba:
com.google.ads.d -> com.google.ads.bb:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.doubleclick.DfpAdView:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
com.google.ads.doubleclick.DfpExtras -> com.google.ads.doubleclick.a:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.doubleclick.DfpExtras setPublisherProvidedId(java.lang.String) -> a
    com.google.ads.doubleclick.DfpExtras setPlusOneOptOut(boolean) -> a
    com.google.ads.doubleclick.DfpExtras setUseExactAdSize(boolean) -> b
    com.google.ads.doubleclick.DfpExtras setExtras(java.util.Map) -> a
    com.google.ads.doubleclick.DfpExtras clearExtras() -> b
    com.google.ads.doubleclick.DfpExtras addExtra(java.lang.String,java.lang.Object) -> a
    com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object) -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
    com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map) -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras setUseExactAdSize(boolean) -> c
    com.google.ads.mediation.admob.AdMobAdapterExtras setPlusOneOptOut(boolean) -> d
com.google.ads.doubleclick.DfpInterstitialAd -> com.google.ads.doubleclick.b:
    void setAppEventListener(com.google.ads.AppEventListener) -> a
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.doubleclick.SwipeableDfpAdView:
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
com.google.ads.e -> com.google.ads.bc:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void b() -> b
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean a(com.google.ads.c,com.google.ads.internal.d) -> a
    boolean a(com.google.ads.h,java.lang.String) -> a
    void a(com.google.ads.h,boolean) -> a
    void a(com.google.ads.h,android.view.View) -> a
    void a(com.google.ads.h) -> a
    void b(com.google.ads.h) -> b
    void c(com.google.ads.h) -> c
    boolean c() -> c
    boolean d() -> d
    void b(com.google.ads.c,com.google.ads.AdRequest) -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> e
    com.google.ads.h e() -> e
    void d(com.google.ads.h) -> d
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    com.google.ads.h c(com.google.ads.e) -> c
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.bd:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$2 -> com.google.ads.be:
    com.google.ads.f a -> a
    boolean b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$3 -> com.google.ads.bf:
    android.view.View a -> a
    com.google.ads.f b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$4 -> com.google.ads.bg:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$5 -> com.google.ads.bh:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$6 -> com.google.ads.bi:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$7 -> com.google.ads.bj:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.bk:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.bl:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
    java.util.List e() -> e
com.google.ads.g -> com.google.ads.bm:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
com.google.ads.g$a -> com.google.ads.bn:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.bo:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    java.lang.String k -> k
    com.google.ads.AdRequest l -> l
    java.util.HashMap m -> m
    com.google.ads.f a() -> a
    void a(android.app.Activity) -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    com.google.ads.g$a e() -> e
    android.view.View f() -> f
    void g() -> g
    java.lang.String h() -> h
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    com.google.ads.mediation.MediationAdapter i() -> i
    com.google.ads.e j() -> j
    void a(android.view.View) -> a
    void k() -> k
    boolean l() -> l
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.bp:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.h$2 -> com.google.ads.bq:
    com.google.ads.mediation.MediationInterstitialAdapter a -> a
    com.google.ads.h b -> b
    void run() -> run
com.google.ads.i -> com.google.ads.br:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    boolean a(java.util.Map) -> a
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
com.google.ads.i$a -> com.google.ads.bs:
com.google.ads.internal.ActivationOverlay -> com.google.ads.a.a:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> setOverlayEnabled
    void setOverlayActivated(boolean) -> setOverlayActivated
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> setYPosition
    int d() -> d
    void setXPosition(int) -> setXPosition
    com.google.ads.internal.i e() -> e
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.ActivationOverlay$1 -> com.google.ads.a.b:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.a.c:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void a() -> a
    void b() -> b
    void setMediaControllerEnabled(boolean) -> setMediaControllerEnabled
    void setSrc(java.lang.String) -> setSrc
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> c
    void d() -> d
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> e
    void f() -> f
com.google.ads.internal.AdVideoView$a -> com.google.ads.a.d:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.a.e:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> setAdActivity
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> setAdSize
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> setCustomClose
    void setIsExpandedMraid(boolean) -> setIsExpandedMraid
    void a(boolean) -> a
com.google.ads.internal.AdWebView$1 -> com.google.ads.a.f:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> com.google.ads.a.g:
    com.google.ads.internal.AdWebView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.a.h:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    java.lang.String a(android.net.Uri,java.util.HashMap) -> a
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.a.i:
com.google.ads.internal.a$2 -> com.google.ads.a.j:
    com.google.ads.internal.a a() -> a
    java.lang.Object b() -> b
com.google.ads.internal.a$3 -> com.google.ads.a.k:
com.google.ads.internal.a$4 -> com.google.ads.a.l:
com.google.ads.internal.b -> com.google.ads.a.m:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.a.n:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.AdRequest h -> h
    android.webkit.WebView i -> i
    com.google.ads.l j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.LinkedList m -> m
    java.lang.String n -> n
    com.google.ads.AdSize o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    com.google.ads.AdRequest$ErrorCode s -> s
    boolean t -> t
    int u -> u
    java.lang.Thread v -> v
    boolean w -> w
    com.google.ads.internal.c$d x -> x
    boolean a -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void b() -> b
    void a(java.lang.String,com.google.ads.c,com.google.ads.d) -> a
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(java.lang.String,java.lang.String) -> b
    void i() -> i
    void j() -> j
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> c
    void c(boolean) -> c
    void a(int) -> a
    void d(boolean) -> d
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> e
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> com.google.ads.a.o:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.a.p:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> com.google.ads.a.q:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.a.r:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.a.s:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> com.google.ads.a.t:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.a.u:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> com.google.ads.a.v:
    com.google.ads.internal.d b -> b
    android.webkit.WebView c -> c
    java.util.LinkedList d -> d
    int e -> e
    boolean f -> f
    java.lang.String g -> g
    com.google.ads.AdSize h -> h
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.d -> com.google.ads.a.w:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.af q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    int u -> u
    java.lang.Boolean v -> v
    com.google.ads.d w -> w
    com.google.ads.e x -> x
    com.google.ads.f y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.n i() -> i
    com.google.ads.d j() -> j
    com.google.ads.internal.c k() -> k
    com.google.ads.internal.AdWebView l() -> l
    com.google.ads.internal.i m() -> m
    com.google.ads.internal.g n() -> n
    void a(int) -> a
    int o() -> o
    long p() -> p
    boolean q() -> q
    boolean r() -> r
    boolean s() -> s
    boolean t() -> t
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void a(com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void u() -> u
    void v() -> v
    void w() -> w
    void a(java.lang.String,java.lang.String) -> a
    void x() -> x
    void a(com.google.ads.f,java.lang.Boolean) -> a
    void b(com.google.ads.f,java.lang.Boolean) -> b
    void a(java.util.List,java.lang.String) -> a
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> y
    void z() -> z
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void A() -> A
    void B() -> B
    void C() -> C
    void D() -> D
    void b(java.lang.String) -> b
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a(com.google.ads.l,boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
com.google.ads.internal.e -> com.google.ads.a.x:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.util.HashMap a(java.io.Serializable) -> a
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.a.y:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void c(java.net.HttpURLConnection) -> c
    void d(java.net.HttpURLConnection) -> d
    void e(java.net.HttpURLConnection) -> e
    void f(java.net.HttpURLConnection) -> f
    void g(java.net.HttpURLConnection) -> g
    void h(java.net.HttpURLConnection) -> h
    void i(java.net.HttpURLConnection) -> i
    void j(java.net.HttpURLConnection) -> j
    void a(boolean) -> a
    void k(java.net.HttpURLConnection) -> k
    void l(java.net.HttpURLConnection) -> l
    void m(java.net.HttpURLConnection) -> m
    void a(java.lang.String) -> a
    void a(java.net.HttpURLConnection,int) -> a
    void run() -> run
    void b() -> b
    void a(android.content.Context,java.net.HttpURLConnection) -> a
com.google.ads.internal.f$1 -> com.google.ads.a.z:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.a.aa:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.a.ab:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.a.ac:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a(boolean) -> a
com.google.ads.internal.i -> com.google.ads.a.ad:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean a() -> a
com.google.ads.internal.j -> com.google.ads.a.ae:
    java.lang.String a -> a
    android.content.Context b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.io.BufferedOutputStream a(java.net.HttpURLConnection) -> a
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.a.af:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.a.ag:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.a.ah:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> com.google.ads.a.ai:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> com.google.ads.a.aj:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> com.google.ads.a.ak:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.bt:
    com.google.ads.h a -> a
    boolean b -> b
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> a
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> b
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> c
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> d
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
com.google.ads.k -> com.google.ads.bu:
    com.google.ads.h a -> a
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> a
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> b
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> c
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> d
com.google.ads.l -> com.google.ads.bv:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
com.google.ads.m -> com.google.ads.bw:
    com.google.ads.m c -> c
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.bx:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
com.google.ads.mediation.EmptyNetworkExtras -> com.google.ads.b.a:
com.google.ads.mediation.MediationAdRequest -> com.google.ads.b.b:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
    com.google.ads.AdRequest$Gender getGender() -> a
    java.util.Date getBirthday() -> b
    java.lang.Integer getAgeInYears() -> c
    java.util.Set getKeywords() -> d
    android.location.Location getLocation() -> e
    boolean isTesting() -> f
com.google.ads.mediation.MediationAdapter -> com.google.ads.b.c:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.b.d:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    android.view.View getBannerView() -> d
com.google.ads.mediation.MediationBannerListener -> com.google.ads.b.e:
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> a
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> b
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> c
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> d
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.b.f:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    void showInterstitial() -> e
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.b.g:
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> a
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> b
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> c
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> d
com.google.ads.mediation.MediationServerParameters -> com.google.ads.b.h:
    void load(java.util.Map) -> a
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.b.i:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.b.j:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.ads.b.k:
com.google.ads.mediation.admob.AdMobAdapter -> com.google.ads.b.a.a:
    com.google.ads.mediation.MediationBannerListener a -> a
    com.google.ads.mediation.MediationInterstitialListener b -> b
    com.google.ads.AdView c -> c
    com.google.ads.InterstitialAd d -> d
    void a() -> f
    boolean b() -> g
    com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> a
    com.google.ads.AdView a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    com.google.ads.InterstitialAd a(android.app.Activity,java.lang.String) -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> a
    android.view.View getBannerView() -> d
    void destroy() -> a
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> a
    void showInterstitial() -> e
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter) -> a
    com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter) -> b
com.google.ads.mediation.admob.AdMobAdapter$1 -> com.google.ads.b.a.b:
com.google.ads.mediation.admob.AdMobAdapter$a -> com.google.ads.b.a.c:
    com.google.ads.mediation.admob.AdMobAdapter a -> a
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> c
    void onLeaveApplication(com.google.ads.Ad) -> d
com.google.ads.mediation.admob.AdMobAdapter$b -> com.google.ads.b.a.d:
    com.google.ads.mediation.admob.AdMobAdapter a -> a
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> c
    void onLeaveApplication(com.google.ads.Ad) -> d
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.b.a.e:
    boolean a -> a
    java.util.Map b -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras setPlusOneOptOut(boolean) -> d
    boolean getPlusOneOptOut() -> d
    com.google.ads.mediation.admob.AdMobAdapterExtras setUseExactAdSize(boolean) -> c
    boolean getUseExactAdSize() -> e
    java.util.Map getExtras() -> f
    com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map) -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
    com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object) -> b
com.google.ads.mediation.admob.AdMobAdapterServerParameters -> com.google.ads.b.a.f:
    java.lang.String adUnitId -> a
    java.lang.String allowHouseAds -> b
com.google.ads.mediation.customevent.CustomEvent -> com.google.ads.b.b.a:
    void destroy() -> a
com.google.ads.mediation.customevent.CustomEventAdapter -> com.google.ads.b.b.b:
    java.lang.String a -> a
    com.google.ads.mediation.customevent.CustomEventBanner b -> b
    com.google.ads.mediation.customevent.CustomEventAdapter$a c -> c
    com.google.ads.mediation.customevent.CustomEventInterstitial d -> d
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.customevent.CustomEventExtras) -> a
    android.view.View getBannerView() -> d
    void showInterstitial() -> e
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.customevent.CustomEventExtras) -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
    void destroy() -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    java.lang.Object a(java.lang.String,java.lang.Class,java.lang.String) -> a
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    java.lang.String a(com.google.ads.mediation.customevent.CustomEventAdapter) -> a
com.google.ads.mediation.customevent.CustomEventAdapter$a -> com.google.ads.b.b.c:
    android.view.View b -> b
    com.google.ads.mediation.MediationBannerListener c -> c
    com.google.ads.mediation.customevent.CustomEventAdapter a -> a
    void onReceivedAd(android.view.View) -> a
    void onFailedToReceiveAd() -> a
    void onClick() -> onClick
    void onPresentScreen() -> b
    void onDismissScreen() -> c
    void onLeaveApplication() -> d
    android.view.View a() -> e
    java.lang.String b() -> f
com.google.ads.mediation.customevent.CustomEventAdapter$b -> com.google.ads.b.b.d:
    com.google.ads.mediation.MediationInterstitialListener b -> b
    com.google.ads.mediation.customevent.CustomEventAdapter a -> a
    void onReceivedAd() -> e
    void onFailedToReceiveAd() -> a
    void onPresentScreen() -> b
    void onDismissScreen() -> c
    void onLeaveApplication() -> d
    java.lang.String a() -> f
com.google.ads.mediation.customevent.CustomEventBanner -> com.google.ads.b.b.e:
    void requestBannerAd(com.google.ads.mediation.customevent.CustomEventBannerListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> a
com.google.ads.mediation.customevent.CustomEventBannerListener -> com.google.ads.b.b.f:
    void onReceivedAd(android.view.View) -> a
    void onClick() -> onClick
com.google.ads.mediation.customevent.CustomEventExtras -> com.google.ads.b.b.g:
    java.util.HashMap a -> a
    com.google.ads.mediation.customevent.CustomEventExtras addExtra(java.lang.String,java.lang.Object) -> a
    com.google.ads.mediation.customevent.CustomEventExtras clearExtras() -> a
    java.lang.Object getExtra(java.lang.String) -> a
    java.lang.Object removeExtra(java.lang.String) -> b
com.google.ads.mediation.customevent.CustomEventInterstitial -> com.google.ads.b.b.h:
    void requestInterstitialAd(com.google.ads.mediation.customevent.CustomEventInterstitialListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> a
    void showInterstitial() -> b
com.google.ads.mediation.customevent.CustomEventInterstitialListener -> com.google.ads.b.b.i:
    void onReceivedAd() -> e
com.google.ads.mediation.customevent.CustomEventListener -> com.google.ads.b.b.j:
    void onFailedToReceiveAd() -> a
    void onPresentScreen() -> b
    void onDismissScreen() -> c
    void onLeaveApplication() -> d
com.google.ads.mediation.customevent.CustomEventServerParameters -> com.google.ads.b.b.k:
    java.lang.String label -> a
    java.lang.String className -> b
    java.lang.String parameter -> c
com.google.ads.n -> com.google.ads.by:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$d c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$b e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b k -> k
    com.google.ads.util.i$b l -> l
    com.google.ads.util.i$b m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
    com.google.ads.util.i$c p -> p
    com.google.ads.util.i$c q -> q
    com.google.ads.util.i$c r -> r
    com.google.ads.util.i$c s -> s
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.bz:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.ca:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.cb:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.cc:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.cd:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.c.a:
    java.lang.String a -> d
    int b -> e
    int c -> f
    int d -> g
    int e -> h
    int f -> i
    int g -> j
    java.lang.String h -> k
    int i -> l
    int j -> m
    com.google.ads.searchads.SearchAdRequest$BorderType k -> n
    int l -> o
    java.lang.String m -> p
    void setQuery(java.lang.String) -> d
    void setBackgroundColor(int) -> a
    void setBackgroundGradient(int,int) -> a
    void setHeaderTextColor(int) -> b
    void setDescriptionTextColor(int) -> c
    void setAnchorTextColor(int) -> d
    void setFontFace(java.lang.String) -> e
    void setHeaderTextSize(int) -> e
    void setBorderColor(int) -> f
    void setBorderType(com.google.ads.searchads.SearchAdRequest$BorderType) -> a
    void setBorderThickness(int) -> g
    void setCustomChannels(java.lang.String) -> f
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> h
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.c.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.ce:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.cf:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(com.google.ads.util.d) -> a
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap a(android.location.Location) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.IcsUtil -> com.google.ads.util.b:
com.google.ads.util.IcsUtil$IcsAdWebView -> com.google.ads.util.c:
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.util.IcsUtil$a -> com.google.ads.util.d:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.a -> com.google.ads.util.e:
    boolean a -> a
    void a(boolean) -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> b
    void b(boolean,java.lang.String) -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.util.f:
com.google.ads.util.b -> com.google.ads.util.g:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a(com.google.ads.util.b$a,java.lang.String) -> a
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
    boolean a(int) -> a
com.google.ads.util.b$a -> com.google.ads.util.h:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.util.i:
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
com.google.ads.util.c -> com.google.ads.util.j:
    boolean a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
com.google.ads.util.c$a -> com.google.ads.util.k:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.util.l:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> com.google.ads.util.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    com.google.ads.util.d f -> f
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.util.n:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
    void a(android.content.Intent,java.lang.String) -> a
com.google.ads.util.f -> com.google.ads.util.o:
    java.lang.Object b() -> b
com.google.ads.util.g -> com.google.ads.util.p:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(android.view.Window) -> a
com.google.ads.util.g$1 -> com.google.ads.util.q:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.util.r:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
com.google.ads.util.g$a$1 -> com.google.ads.util.s:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.util.t:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.util.u:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.util.v:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.util.w:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.util.x:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.util.y:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.h -> com.google.ads.util.z:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
com.google.ads.util.i -> com.google.ads.util.aa:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int t -> t
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i$a) -> a
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$1 -> com.google.ads.util.ab:
com.google.ads.util.i$a -> com.google.ads.util.ac:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.util.ad:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.util.ae:
    boolean e -> e
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.util.af:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.cg:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.ch:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.ci:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.cj:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.ck:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.jakewharton.disklrucache.DiskLruCache -> com.a.a.a:
    java.lang.String JOURNAL_FILE -> a
    java.lang.String JOURNAL_FILE_TEMP -> b
    java.lang.String JOURNAL_FILE_BACKUP -> c
    java.lang.String MAGIC -> d
    java.lang.String VERSION_1 -> e
    long ANY_SEQUENCE_NUMBER -> f
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> g
    java.lang.String CLEAN -> i
    java.lang.String DIRTY -> j
    java.lang.String REMOVE -> k
    java.lang.String READ -> l
    java.io.File directory -> m
    java.io.File journalFile -> n
    java.io.File journalFileTmp -> o
    java.io.File journalFileBackup -> p
    int appVersion -> q
    long maxSize -> r
    int valueCount -> s
    long size -> t
    java.io.Writer journalWriter -> u
    java.util.LinkedHashMap lruEntries -> v
    int redundantOpCount -> w
    long nextSequenceNumber -> x
    java.util.concurrent.ThreadPoolExecutor executorService -> h
    java.util.concurrent.Callable cleanupCallable -> y
    java.io.OutputStream NULL_OUTPUT_STREAM -> z
    com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> h
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> i
    void rebuildJournal() -> j
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> b
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> a
    java.io.File getDirectory() -> a
    long getMaxSize() -> b
    void setMaxSize(long) -> a
    long size() -> c
    void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> k
    boolean remove(java.lang.String) -> c
    boolean isClosed() -> d
    void checkNotClosed() -> l
    void flush() -> e
    void close() -> close
    void trimToSize() -> m
    void delete() -> f
    void validateKey(java.lang.String) -> e
    java.lang.String inputStreamToString(java.io.InputStream) -> b
    java.io.Writer access$000(com.jakewharton.disklrucache.DiskLruCache) -> a
    void access$100(com.jakewharton.disklrucache.DiskLruCache) -> b
    boolean access$200(com.jakewharton.disklrucache.DiskLruCache) -> c
    void access$300(com.jakewharton.disklrucache.DiskLruCache) -> d
    int access$402(com.jakewharton.disklrucache.DiskLruCache,int) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$1600(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long) -> a
    java.lang.String access$1700(java.io.InputStream) -> a
    int access$1800(com.jakewharton.disklrucache.DiskLruCache) -> e
    java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache) -> f
    java.io.OutputStream access$2000() -> g
    void access$2200(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
com.jakewharton.disklrucache.DiskLruCache$1 -> com.a.a.b:
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.jakewharton.disklrucache.DiskLruCache$2 -> com.a.a.c:
    void write(int) -> write
com.jakewharton.disklrucache.DiskLruCache$Editor -> com.a.a.d:
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.io.InputStream newInputStream(int) -> a
    java.lang.String getString(int) -> b
    java.io.OutputStream newOutputStream(int) -> c
    void set(int,java.lang.String) -> a
    void commit() -> a
    void abort() -> b
    void abortUnlessCommitted() -> c
    com.jakewharton.disklrucache.DiskLruCache$Entry access$1400(com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    boolean[] access$1500(com.jakewharton.disklrucache.DiskLruCache$Editor) -> b
    boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream -> com.a.a.e:
    com.jakewharton.disklrucache.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.jakewharton.disklrucache.DiskLruCache$Entry -> com.a.a.f:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry) -> a
    long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry) -> b
    java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry) -> c
    boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry) -> d
    long access$1200(com.jakewharton.disklrucache.DiskLruCache$Entry) -> e
    long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry,long) -> a
com.jakewharton.disklrucache.DiskLruCache$Snapshot -> com.a.a.g:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] lengths -> e
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor edit() -> a
    java.io.InputStream getInputStream(int) -> a
    java.lang.String getString(int) -> b
    long getLength(int) -> c
    void close() -> close
com.jakewharton.disklrucache.StrictLineReader -> com.a.a.h:
    byte CR -> a
    byte LF -> b
    java.io.InputStream in -> c
    java.nio.charset.Charset charset -> d
    byte[] buf -> e
    int pos -> f
    int end -> g
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader) -> a
com.jakewharton.disklrucache.StrictLineReader$1 -> com.a.a.i:
    com.jakewharton.disklrucache.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.jakewharton.disklrucache.Util -> com.a.a.j:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    java.lang.String readFully(java.io.Reader) -> a
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
org.jefferyemanuel.database.TweeterContentProvider -> org.jefferyemanuel.database.TweeterContentProvider:
    org.jefferyemanuel.database.TweeterUserDatabaseHelper database -> d
    int TOTAL_ELEMENTS -> e
    int ELEMENT_ID -> f
    java.lang.String BASE_PATH -> g
    android.net.Uri CONTENT_URI -> a
    java.lang.String CONTENT_TYPE -> b
    java.lang.String CONTENT_ITEM_TYPE -> c
    android.content.UriMatcher sURIMatcher -> h
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void checkColumns(java.lang.String[]) -> a
org.jefferyemanuel.database.TweeterTable -> org.jefferyemanuel.database.a:
    java.lang.String DATABASE_CREATE -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
org.jefferyemanuel.database.TweeterUserDatabaseHelper -> org.jefferyemanuel.database.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.jefferyemanuel.willowtweetapp.BuildConfig -> org.jefferyemanuel.willowtweetapp.a:
    boolean DEBUG -> a
org.jefferyemanuel.willowtweetapp.Consts -> org.jefferyemanuel.willowtweetapp.b:
    boolean DEVELOPER_MODE -> a
    java.lang.String TAG -> b
    java.lang.String TAG_FRAGMENT -> c
    java.lang.String KEY_USER_OBJECT -> d
    java.lang.String KEY_TIMEPOSTED -> e
    java.lang.String KEY_TWEETDATE -> f
    java.lang.String KEY_AUTHOR -> g
    java.lang.String KEY_AVATAR -> h
    java.lang.String KEY_TWEED_ID -> i
    java.lang.String KEY_TWEET_COUNT -> j
    java.lang.String KEY_TWEET_MSG -> k
    java.lang.String KEY_IS_RETWEET -> l
    java.lang.String KEY_FOLLOWERS -> m
    java.lang.String KEY_FOLLOWING -> n
    java.lang.String TABLE_TWEETER_INFO -> o
    java.lang.String COLUMN_ID -> p
    java.lang.String COLUMN_USER -> q
    java.lang.String DATABASE_NAME -> r
    java.lang.String AUTHORITY -> s
    int DATABASE_VERSION -> t
    android.net.Uri CONTENT_URI -> u
    int LOADER_ID -> v
    int LOADER_ASYNCH_ID -> w
    java.lang.String MESSAGE -> x
    java.lang.String TASK_FRAGMENT_ID -> y
    java.lang.String TASK_ARGUMENT_USERLIST -> z
    java.lang.String CONSUMER_KEY -> A
    java.lang.String CONSUMER_SECRET_KEY -> B
    java.lang.String ACCESS_TOKEN -> C
    java.lang.String ACCESS_TOKEN_SECRET -> D
    java.lang.String CALLBACKURL -> E
    java.lang.String URL_REQUEST_TOKEN -> F
    java.lang.String URL_ACCESS_TOKEN -> G
    java.lang.String URL_AUTHORIZE -> H
    java.lang.String HANDLER_SHOW_DIALOG -> I
    java.lang.String HANDLER_HIDE_DIALOG -> J
    java.lang.String HANDLER_REMOVE_TASK -> K
    java.lang.String HANDLER_BEGIN_TASK -> L
    int NUMBER_OF_STATUSES -> M
    int IO_BUFFER_SIZE -> N
    int DISK_CACHE_SIZE -> O
    int COMPRESS_QUALITY -> P
    int ERROR_CODE_RATE_LIMITED_EXCEEDED -> Q
    java.lang.String admob_publisherID -> R
    java.lang.String URL_TWITTER_SEARCH -> S
org.jefferyemanuel.willowtweetapp.DiskLruImageCache -> org.jefferyemanuel.willowtweetapp.c:
    com.jakewharton.disklrucache.DiskLruCache mDiskCache -> a
    android.graphics.Bitmap$CompressFormat mCompressFormat -> b
    int mCompressQuality -> c
    int APP_VERSION -> d
    int VALUE_COUNT -> e
    java.lang.String TAG -> f
    android.content.Context context -> g
    boolean writeBitmapToFile(android.graphics.Bitmap,com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmap(java.lang.String,android.widget.ImageView) -> a
    boolean containsKey(java.lang.String) -> a
    void clearCache() -> a
    java.io.File getCacheFolder() -> b
    android.content.Context access$0(org.jefferyemanuel.willowtweetapp.DiskLruImageCache) -> a
org.jefferyemanuel.willowtweetapp.DiskLruImageCache$1 -> org.jefferyemanuel.willowtweetapp.d:
    org.jefferyemanuel.willowtweetapp.DiskLruImageCache this$0 -> a
    java.lang.String val$key -> b
    java.lang.String val$safeKey -> c
    android.widget.ImageView val$imageView -> d
    void run() -> run
org.jefferyemanuel.willowtweetapp.DiskLruImageCache$1$1 -> org.jefferyemanuel.willowtweetapp.e:
    org.jefferyemanuel.willowtweetapp.DiskLruImageCache$1 this$1 -> a
    android.widget.ImageView val$imageView -> b
    android.graphics.Bitmap val$b -> c
    void run() -> run
org.jefferyemanuel.willowtweetapp.DownloadImageTask -> org.jefferyemanuel.willowtweetapp.f:
    android.support.v4.util.LruCache mMemoryCache -> a
    org.jefferyemanuel.willowtweetapp.DownloadImageTask instance -> b
    org.jefferyemanuel.willowtweetapp.DownloadImageTask getInstance(android.app.Activity) -> a
    void loadBitmap(java.lang.String,android.widget.ImageView) -> a
    void addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String) -> a
    void access$0(org.jefferyemanuel.willowtweetapp.DownloadImageTask,java.lang.String,android.graphics.Bitmap) -> a
org.jefferyemanuel.willowtweetapp.DownloadImageTask$1 -> org.jefferyemanuel.willowtweetapp.g:
    org.jefferyemanuel.willowtweetapp.DownloadImageTask this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
org.jefferyemanuel.willowtweetapp.DownloadImageTask$DownloadImageTaskViaWeb -> org.jefferyemanuel.willowtweetapp.h:
    android.widget.ImageView bmImage -> a
    org.jefferyemanuel.willowtweetapp.DownloadImageTask this$0 -> b
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.jefferyemanuel.willowtweetapp.Linkifier -> org.jefferyemanuel.willowtweetapp.i:
    android.widget.TextView setLinks(android.widget.TextView,java.lang.String,long) -> a
org.jefferyemanuel.willowtweetapp.Linkifier$InternalURLSpan -> org.jefferyemanuel.willowtweetapp.j:
    java.lang.String text -> a
    long twitterId -> b
    org.jefferyemanuel.willowtweetapp.Linkifier this$0 -> c
    void onClick(android.view.View) -> onClick
    void handleLinkClicked(android.content.Context,java.lang.String) -> a
org.jefferyemanuel.willowtweetapp.MainActivity -> org.jefferyemanuel.willowtweetapp.MainActivity:
    org.jefferyemanuel.willowtweetapp.MainActivity$SectionsPagerAdapter mSectionsPagerAdapter -> u
    org.jefferyemanuel.willowtweetapp.DiskLruImageCache imageDiskCache -> v
    java.text.NumberFormat nf -> w
    android.support.v4.app.FragmentManager fm -> q
    java.util.ArrayList mTweetersObj_map -> r
    java.lang.String[] mpageTitles -> s
    android.support.v4.view.ViewPager mViewPager -> t
    android.os.Handler handler -> x
    void onDestroy() -> onDestroy
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResumeFragments() -> a
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void createWarningDialog(java.lang.String) -> b
    void dismissProgressDialog() -> n
    void showProgressDialog(java.lang.String) -> c
    void reStartLoader() -> h
    void updateProgressDialog(int) -> b
    boolean isOnline() -> i
    void setupTitles(java.lang.String[]) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void threadMsg(java.lang.String) -> d
    void onPreExecute() -> j
    void onProgressUpdate(int) -> a
    void onCancelled() -> k
    void onPostExecute(java.util.ArrayList) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void access$1(org.jefferyemanuel.willowtweetapp.MainActivity,java.lang.String) -> a
    void access$2(org.jefferyemanuel.willowtweetapp.MainActivity) -> a
    org.jefferyemanuel.willowtweetapp.DiskLruImageCache access$3() -> l
    java.text.NumberFormat access$4() -> m
org.jefferyemanuel.willowtweetapp.MainActivity$1 -> org.jefferyemanuel.willowtweetapp.k:
    org.jefferyemanuel.willowtweetapp.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.jefferyemanuel.willowtweetapp.MainActivity$SectionsPagerAdapter -> org.jefferyemanuel.willowtweetapp.l:
    org.jefferyemanuel.willowtweetapp.MainActivity this$0 -> c
    android.support.v4.app.Fragment getItem(int) -> a
    int getItemPosition(java.lang.Object) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
org.jefferyemanuel.willowtweetapp.MainActivity$TweetsListFragment -> org.jefferyemanuel.willowtweetapp.m:
    java.lang.String ARG_SECTION_NUMBER -> l
    int position -> m
    java.lang.String key -> ai
    android.widget.ListView lv -> aj
    org.jefferyemanuel.willowtweetapp.TweeterJSONAdapter mAdapter -> ak
    org.jefferyemanuel.willowtweetapp.MainActivity$TweetsListFragment newInstance(int) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> G
    void onAttach(android.app.Activity) -> a
    void addHeader() -> e
org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity -> org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity:
    android.media.SoundPool mSoundPool -> q
    boolean sound_loaded -> r
    int soundID -> s
    android.support.v4.widget.SimpleCursorAdapter mDataAdapter -> t
    android.widget.ListView tweeterList -> u
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void onCreate(android.os.Bundle) -> onCreate
    void enableHomeButton() -> h
    void deleteAllTweetListEntries() -> i
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void displayListView() -> j
    void playSound(int) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onClick(android.view.View) -> onClick
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity$1 -> org.jefferyemanuel.willowtweetapp.n:
    org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity this$0 -> a
    void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity$2 -> org.jefferyemanuel.willowtweetapp.o:
    org.jefferyemanuel.willowtweetapp.ModifyTweetersActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.jefferyemanuel.willowtweetapp.MyDialogFragment -> org.jefferyemanuel.willowtweetapp.p:
    android.content.Context mContext -> ai
    org.jefferyemanuel.willowtweetapp.MyDialogFragment newInstance(android.content.Context,java.lang.String) -> b
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.jefferyemanuel.willowtweetapp.ProgressDialogFragment -> org.jefferyemanuel.willowtweetapp.q:
    java.lang.String ARG_MESSAGE -> ai
    android.app.ProgressDialog dialog -> aj
    org.jefferyemanuel.willowtweetapp.ProgressDialogFragment newInstance(java.lang.String) -> b
    void onDestroyView() -> j
    void onCreate(android.os.Bundle) -> a
    void setProgressOfDialog(int) -> c
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
org.jefferyemanuel.willowtweetapp.ProgressDialogFragment$1 -> org.jefferyemanuel.willowtweetapp.r:
    org.jefferyemanuel.willowtweetapp.ProgressDialogFragment this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.jefferyemanuel.willowtweetapp.R -> org.jefferyemanuel.willowtweetapp.s:
org.jefferyemanuel.willowtweetapp.R$anim -> org.jefferyemanuel.willowtweetapp.t:
    int slide -> slide
    int slide_out -> slide_out
org.jefferyemanuel.willowtweetapp.R$attr -> org.jefferyemanuel.willowtweetapp.u:
org.jefferyemanuel.willowtweetapp.R$color -> org.jefferyemanuel.willowtweetapp.v:
    int black -> black
    int blue -> blue
    int crystal_blue -> crystal_blue
    int error_message -> error_message
    int faint_neongreen -> faint_neongreen
    int gold -> gold
    int green -> green
    int grey_font -> grey_font
    int light_font -> light_font
    int pink -> pink
    int red -> red
    int text_shadow -> text_shadow
    int text_shadow_white -> text_shadow_white
    int translucent_red -> translucent_red
    int white -> white
org.jefferyemanuel.willowtweetapp.R$dimen -> org.jefferyemanuel.willowtweetapp.w:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
org.jefferyemanuel.willowtweetapp.R$drawable -> org.jefferyemanuel.willowtweetapp.x:
    int bird -> bird
    int border -> border
    int bubble -> bubble
    int ic_launcher -> ic_launcher
    int listshape -> listshape
    int plus_sign -> plus_sign
    int refresh -> refresh
    int rounded_corners -> rounded_corners
    int spinning_loader -> spinning_loader
    int stickmanpointing -> stickmanpointing
org.jefferyemanuel.willowtweetapp.R$id -> org.jefferyemanuel.willowtweetapp.y:
    int action_settings -> action_settings
    int adView_one -> adView_one
    int adView_three -> adView_three
    int adView_two -> adView_two
    int avatar_header -> avatar_header
    int btn_add_newuser -> btn_add_newuser
    int container_adview -> container_adview
    int container_header_info -> container_header_info
    int container_list_item -> container_list_item
    int container_tweet_info -> container_tweet_info
    int et_additional_username -> et_additional_username
    int header_layout_root -> header_layout_root
    int iv_avatar -> iv_avatar
    int iv_tweetlist_avatar_row -> iv_tweetlist_avatar_row
    int menu_additionbtn -> menu_additionbtn
    int menu_load_tweeter_btn -> menu_load_tweeter_btn
    int menu_refresh_btn -> menu_refresh_btn
    int pager -> pager
    int pager_title_strip -> pager_title_strip
    int text -> text
    int toast_layout_root -> toast_layout_root
    int tv_followers -> tv_followers
    int tv_following -> tv_following
    int tv_name -> tv_name
    int tv_noitems -> tv_noitems
    int tv_total_tweets -> tv_total_tweets
    int tv_tweet_status -> tv_tweet_status
    int username -> username
org.jefferyemanuel.willowtweetapp.R$layout -> org.jefferyemanuel.willowtweetapp.z:
    int activity_main -> activity_main
    int list_header -> list_header
    int list_item_child -> list_item_child
    int listfragment_layout -> listfragment_layout
    int modifytweeters_layout -> modifytweeters_layout
    int toast_layout -> toast_layout
    int tweeter_list_row_item -> tweeter_list_row_item
org.jefferyemanuel.willowtweetapp.R$menu -> org.jefferyemanuel.willowtweetapp.aa:
    int main -> main
    int tweeterlist_menu -> tweeterlist_menu
org.jefferyemanuel.willowtweetapp.R$raw -> org.jefferyemanuel.willowtweetapp.ab:
    int logosound -> logosound
org.jefferyemanuel.willowtweetapp.R$string -> org.jefferyemanuel.willowtweetapp.ac:
    int action_clear_all -> action_clear_all
    int action_settings -> action_settings
    int app_name -> app_name
    int cd_photo -> cd_photo
    int notification_loading_items -> notification_loading_items
    int title_addbutton -> title_addbutton
    int title_addtweeter -> title_addtweeter
    int title_loadtweeters -> title_loadtweeters
    int title_refresh_listing -> title_refresh_listing
    int tweets -> tweets
    int warning_empty_addition -> warning_empty_addition
    int warning_item_deleted -> warning_item_deleted
    int warning_item_inserted_previously -> warning_item_inserted_previously
    int warning_max_apiCalls_Reached -> warning_max_apiCalls_Reached
    int warning_no_connection -> warning_no_connection
    int warning_no_data_collected -> warning_no_data_collected
    int warning_noitems_found -> warning_noitems_found
    int warning_noitems_present -> warning_noitems_present
    int warning_nothingEntered -> warning_nothingEntered
    int zerotweets -> zerotweets
org.jefferyemanuel.willowtweetapp.R$style -> org.jefferyemanuel.willowtweetapp.ad:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
org.jefferyemanuel.willowtweetapp.RetainFragment -> org.jefferyemanuel.willowtweetapp.ae:
    java.lang.String TAG -> b
    android.support.v4.util.LruCache mRetainedCache -> a
    org.jefferyemanuel.willowtweetapp.RetainFragment findOrCreateRetainFragment(android.app.FragmentManager) -> a
    void onCreate(android.os.Bundle) -> onCreate
org.jefferyemanuel.willowtweetapp.TaskFragment -> org.jefferyemanuel.willowtweetapp.af:
    twitter4j.conf.Configuration twitterConfiguration -> a
    org.jefferyemanuel.willowtweetapp.TaskFragment$TaskCallbacks mCallbacks -> b
    org.jefferyemanuel.willowtweetapp.TaskFragment$LongOperation mTask -> c
    twitter4j.conf.Configuration getTwitterCoonfiguration() -> a
    void setTwitterCoonfiguration(twitter4j.conf.Configuration) -> a
    org.jefferyemanuel.willowtweetapp.TaskFragment newInstance(java.lang.String[]) -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void onDetach() -> g
    org.jefferyemanuel.willowtweetapp.TaskFragment$TaskCallbacks access$0(org.jefferyemanuel.willowtweetapp.TaskFragment) -> a
org.jefferyemanuel.willowtweetapp.TaskFragment$LongOperation -> org.jefferyemanuel.willowtweetapp.ag:
    twitter4j.Twitter twitter -> a
    java.util.ArrayList mTweetersObj_map -> b
    java.lang.String[] tweeters -> c
    org.jefferyemanuel.willowtweetapp.TaskFragment this$0 -> d
    void onPreExecute() -> onPreExecute
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
org.jefferyemanuel.willowtweetapp.TaskFragment$TaskCallbacks -> org.jefferyemanuel.willowtweetapp.ah:
    void onPreExecute() -> j
    void onProgressUpdate(int) -> a
    void onCancelled() -> k
    void onPostExecute(java.util.ArrayList) -> a
org.jefferyemanuel.willowtweetapp.TweeterJSONAdapter -> org.jefferyemanuel.willowtweetapp.ai:
    java.util.ArrayList mTweeterInfo -> a
    android.support.v4.app.FragmentActivity context -> b
    org.jefferyemanuel.willowtweetapp.DiskLruImageCache imageDiskCache -> c
    org.jefferyemanuel.willowtweetapp.Linkifier linkifier -> d
    int getCount() -> getCount
    java.util.HashMap getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getRotation(android.content.Context) -> a
    java.lang.Object getItem(int) -> getItem
org.jefferyemanuel.willowtweetapp.TweeterUsersLoader -> org.jefferyemanuel.willowtweetapp.aj:
    java.util.ArrayList mResults -> h
    twitter4j.conf.ConfigurationBuilder cb -> i
    twitter4j.Twitter twitter -> j
    java.util.ArrayList mTweetersObj_map -> k
    java.lang.String[] tweeters -> l
    java.lang.String[] getTweeters() -> g
    void setTweeters(java.lang.String[]) -> a
    void onStartLoading() -> h
    java.util.ArrayList loadInBackground() -> k
    void deliverResult(java.util.ArrayList) -> a
    void onReset() -> j
    void onCanceled(java.util.ArrayList) -> b
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
org.jefferyemanuel.willowtweetapp.Utils -> org.jefferyemanuel.willowtweetapp.ak:
    void printLog(java.lang.String,java.lang.String) -> a
    void hideKeyboard(android.app.Activity) -> a
    void createToast(android.content.Context,java.lang.String) -> a
    boolean isExternalStorageRemovable() -> a
    java.io.File getExternalCacheDir(android.content.Context) -> a
    boolean hasExternalCacheDir() -> b
twitter4j.AccountSettings -> twitter4j.AccountSettings:
    boolean isSleepTimeEnabled() -> isSleepTimeEnabled
    java.lang.String getSleepStartTime() -> getSleepStartTime
    java.lang.String getSleepEndTime() -> getSleepEndTime
    twitter4j.Location[] getTrendLocations() -> getTrendLocations
    boolean isGeoEnabled() -> isGeoEnabled
    twitter4j.TimeZone getTimeZone() -> getTimeZone
    java.lang.String getLanguage() -> getLanguage
    boolean isDiscoverableByEmail() -> isDiscoverableByEmail
    boolean isAlwaysUseHttps() -> isAlwaysUseHttps
twitter4j.AccountTotals -> twitter4j.AccountTotals:
    int getUpdates() -> getUpdates
    int getFollowers() -> getFollowers
    int getFavorites() -> getFavorites
    int getFriends() -> getFriends
twitter4j.Category -> twitter4j.Category:
    java.lang.String getName() -> getName
    java.lang.String getSlug() -> getSlug
    int getSize() -> getSize
twitter4j.ConnectionLifeCycleListener -> twitter4j.ConnectionLifeCycleListener:
    void onConnect() -> onConnect
    void onDisconnect() -> onDisconnect
    void onCleanUp() -> onCleanUp
twitter4j.CursorSupport -> twitter4j.CursorSupport:
    long START -> START
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.DirectMessage -> twitter4j.DirectMessage:
    long getId() -> getId
    java.lang.String getText() -> getText
    long getSenderId() -> getSenderId
    long getRecipientId() -> getRecipientId
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getSenderScreenName() -> getSenderScreenName
    java.lang.String getRecipientScreenName() -> getRecipientScreenName
    twitter4j.User getSender() -> getSender
    twitter4j.User getRecipient() -> getRecipient
twitter4j.EntitySupport -> twitter4j.EntitySupport:
    twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
twitter4j.ExceptionDiagnosis -> twitter4j.ExceptionDiagnosis:
    int stackLineHash -> stackLineHash
    int lineNumberHash -> lineNumberHash
    java.lang.String hexString -> hexString
    java.lang.Throwable th -> th
    long serialVersionUID -> serialVersionUID
    int getStackLineHash() -> getStackLineHash
    java.lang.String getStackLineHashAsHex() -> getStackLineHashAsHex
    int getLineNumberHash() -> getLineNumberHash
    java.lang.String getLineNumberHashAsHex() -> getLineNumberHashAsHex
    java.lang.String asHexString() -> asHexString
    java.lang.String toHexString(int) -> toHexString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.Friendship -> twitter4j.Friendship:
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    boolean isFollowing() -> isFollowing
    boolean isFollowedBy() -> isFollowedBy
twitter4j.GeoLocation -> twitter4j.GeoLocation:
    double latitude -> latitude
    double longitude -> longitude
    long serialVersionUID -> serialVersionUID
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.GeoQuery -> twitter4j.GeoQuery:
    twitter4j.GeoLocation location -> location
    java.lang.String query -> query
    java.lang.String ip -> ip
    java.lang.String accuracy -> accuracy
    java.lang.String granularity -> granularity
    int maxResults -> maxResults
    long serialVersionUID -> serialVersionUID
    twitter4j.GeoLocation getLocation() -> getLocation
    java.lang.String getQuery() -> getQuery
    void setQuery(java.lang.String) -> setQuery
    java.lang.String getIp() -> getIp
    java.lang.String getAccuracy() -> getAccuracy
    void setAccuracy(java.lang.String) -> setAccuracy
    twitter4j.GeoQuery accuracy(java.lang.String) -> accuracy
    java.lang.String getGranularity() -> getGranularity
    void setGranularity(java.lang.String) -> setGranularity
    twitter4j.GeoQuery granularity(java.lang.String) -> granularity
    int getMaxResults() -> getMaxResults
    void setMaxResults(int) -> setMaxResults
    twitter4j.GeoQuery maxResults(int) -> maxResults
    twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,int,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,double,java.util.List) -> appendParameter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.HashtagEntity -> twitter4j.HashtagEntity:
    java.lang.String getText() -> getText
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.IDs -> twitter4j.IDs:
    long[] getIDs() -> getIDs
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.Location -> twitter4j.Location:
    int getWoeid() -> getWoeid
    java.lang.String getCountryName() -> getCountryName
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getPlaceName() -> getPlaceName
    int getPlaceCode() -> getPlaceCode
    java.lang.String getName() -> getName
    java.lang.String getURL() -> getURL
twitter4j.MediaEntity -> twitter4j.MediaEntity:
    long getId() -> getId
    java.lang.String getMediaURL() -> getMediaURL
    java.lang.String getMediaURLHttps() -> getMediaURLHttps
    java.util.Map getSizes() -> getSizes
    java.lang.String getType() -> getType
twitter4j.MediaEntity$Size -> twitter4j.MediaEntity$Size:
    java.lang.Integer THUMB -> THUMB
    java.lang.Integer SMALL -> SMALL
    java.lang.Integer MEDIUM -> MEDIUM
    java.lang.Integer LARGE -> LARGE
    int FIT -> FIT
    int CROP -> CROP
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getResize() -> getResize
twitter4j.OEmbed -> twitter4j.OEmbed:
    java.lang.String getHtml() -> getHtml
    java.lang.String getAuthorName() -> getAuthorName
    java.lang.String getURL() -> getURL
    java.lang.String getVersion() -> getVersion
    long getCacheAge() -> getCacheAge
    java.lang.String getAuthorURL() -> getAuthorURL
    int getWidth() -> getWidth
twitter4j.OEmbedRequest -> twitter4j.OEmbedRequest:
    long serialVersionUID -> serialVersionUID
    long statusId -> statusId
    java.lang.String url -> url
    int maxWidth -> maxWidth
    boolean hideMedia -> hideMedia
    boolean hideThread -> hideThread
    boolean omitScript -> omitScript
    twitter4j.OEmbedRequest$Align align -> align
    java.lang.String[] related -> related
    java.lang.String lang -> lang
    void setMaxWidth(int) -> setMaxWidth
    twitter4j.OEmbedRequest MaxWidth(int) -> MaxWidth
    void setHideMedia(boolean) -> setHideMedia
    twitter4j.OEmbedRequest HideMedia(boolean) -> HideMedia
    void setHideThread(boolean) -> setHideThread
    twitter4j.OEmbedRequest HideThread(boolean) -> HideThread
    void setOmitScript(boolean) -> setOmitScript
    twitter4j.OEmbedRequest omitScript(boolean) -> omitScript
    void setAlign(twitter4j.OEmbedRequest$Align) -> setAlign
    twitter4j.OEmbedRequest align(twitter4j.OEmbedRequest$Align) -> align
    void setRelated(java.lang.String[]) -> setRelated
    twitter4j.OEmbedRequest related(java.lang.String[]) -> related
    void setLang(java.lang.String) -> setLang
    twitter4j.OEmbedRequest lang(java.lang.String) -> lang
    twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.OEmbedRequest$Align -> twitter4j.OEmbedRequest$Align:
    twitter4j.OEmbedRequest$Align LEFT -> LEFT
    twitter4j.OEmbedRequest$Align CENTER -> CENTER
    twitter4j.OEmbedRequest$Align RIGHT -> RIGHT
    twitter4j.OEmbedRequest$Align NONE -> NONE
    twitter4j.OEmbedRequest$Align[] $VALUES -> $VALUES
    twitter4j.OEmbedRequest$Align[] values() -> values
    twitter4j.OEmbedRequest$Align valueOf(java.lang.String) -> valueOf
twitter4j.PagableResponseList -> twitter4j.PagableResponseList:
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.Paging -> twitter4j.Paging:
    int page -> page
    int count -> count
    long sinceId -> sinceId
    long maxId -> maxId
    long serialVersionUID -> serialVersionUID
    char[] S -> S
    char[] SMCP -> SMCP
    java.lang.String COUNT -> COUNT
    java.lang.String PER_PAGE -> PER_PAGE
    twitter4j.internal.http.HttpParameter[] NULL_PARAMETER_ARRAY -> NULL_PARAMETER_ARRAY
    java.util.List NULL_PARAMETER_LIST -> NULL_PARAMETER_LIST
    java.util.List asPostParameterList() -> asPostParameterList
    twitter4j.internal.http.HttpParameter[] asPostParameterArray() -> asPostParameterArray
    java.util.List asPostParameterList(char[]) -> asPostParameterList
    java.util.List asPostParameterList(char[],java.lang.String) -> asPostParameterList
    twitter4j.internal.http.HttpParameter[] asPostParameterArray(char[],java.lang.String) -> asPostParameterArray
    void addPostParameter(char[],char,java.util.List,java.lang.String,long) -> addPostParameter
    int getPage() -> getPage
    void setPage(int) -> setPage
    int getCount() -> getCount
    void setCount(int) -> setCount
    twitter4j.Paging count(int) -> count
    long getSinceId() -> getSinceId
    void setSinceId(long) -> setSinceId
    twitter4j.Paging sinceId(long) -> sinceId
    long getMaxId() -> getMaxId
    void setMaxId(long) -> setMaxId
    twitter4j.Paging maxId(long) -> maxId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.Place -> twitter4j.Place:
    java.lang.String getName() -> getName
    java.lang.String getStreetAddress() -> getStreetAddress
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getId() -> getId
    java.lang.String getCountry() -> getCountry
    java.lang.String getPlaceType() -> getPlaceType
    java.lang.String getURL() -> getURL
    java.lang.String getFullName() -> getFullName
    java.lang.String getBoundingBoxType() -> getBoundingBoxType
    twitter4j.GeoLocation[][] getBoundingBoxCoordinates() -> getBoundingBoxCoordinates
    java.lang.String getGeometryType() -> getGeometryType
    twitter4j.GeoLocation[][] getGeometryCoordinates() -> getGeometryCoordinates
    twitter4j.Place[] getContainedWithIn() -> getContainedWithIn
twitter4j.Query -> twitter4j.Query:
    java.lang.String query -> query
    java.lang.String lang -> lang
    java.lang.String locale -> locale
    long maxId -> maxId
    int count -> count
    java.lang.String since -> since
    long sinceId -> sinceId
    java.lang.String geocode -> geocode
    java.lang.String until -> until
    java.lang.String resultType -> resultType
    long serialVersionUID -> serialVersionUID
    java.lang.String nextPageQuery -> nextPageQuery
    java.lang.String MILES -> MILES
    java.lang.String KILOMETERS -> KILOMETERS
    java.lang.String MIXED -> MIXED
    java.lang.String POPULAR -> POPULAR
    java.lang.String RECENT -> RECENT
    twitter4j.internal.http.HttpParameter WITH_TWITTER_USER_ID -> WITH_TWITTER_USER_ID
    twitter4j.Query createWithNextPageQuery(java.lang.String) -> createWithNextPageQuery
    java.lang.String getQuery() -> getQuery
    void setQuery(java.lang.String) -> setQuery
    twitter4j.Query query(java.lang.String) -> query
    java.lang.String getLang() -> getLang
    void setLang(java.lang.String) -> setLang
    twitter4j.Query lang(java.lang.String) -> lang
    java.lang.String getLocale() -> getLocale
    void setLocale(java.lang.String) -> setLocale
    twitter4j.Query locale(java.lang.String) -> locale
    long getMaxId() -> getMaxId
    void setMaxId(long) -> setMaxId
    twitter4j.Query maxId(long) -> maxId
    int getCount() -> getCount
    void setCount(int) -> setCount
    twitter4j.Query count(int) -> count
    java.lang.String getSince() -> getSince
    void setSince(java.lang.String) -> setSince
    twitter4j.Query since(java.lang.String) -> since
    long getSinceId() -> getSinceId
    void setSinceId(long) -> setSinceId
    twitter4j.Query sinceId(long) -> sinceId
    java.lang.String getGeocode() -> getGeocode
    void setGeoCode(twitter4j.GeoLocation,double,java.lang.String) -> setGeoCode
    twitter4j.Query geoCode(twitter4j.GeoLocation,double,java.lang.String) -> geoCode
    java.lang.String getUntil() -> getUntil
    void setUntil(java.lang.String) -> setUntil
    twitter4j.Query until(java.lang.String) -> until
    java.lang.String getResultType() -> getResultType
    void setResultType(java.lang.String) -> setResultType
    twitter4j.Query resultType(java.lang.String) -> resultType
    twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    java.lang.String nextPage() -> nextPage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.QueryResult -> twitter4j.QueryResult:
    long getSinceId() -> getSinceId
    long getMaxId() -> getMaxId
    java.lang.String getRefreshUrl() -> getRefreshUrl
    java.lang.String getRefreshURL() -> getRefreshURL
    int getCount() -> getCount
    double getCompletedIn() -> getCompletedIn
    java.lang.String getQuery() -> getQuery
    java.util.List getTweets() -> getTweets
    twitter4j.Query nextQuery() -> nextQuery
    boolean hasNext() -> hasNext
twitter4j.RateLimitStatus -> twitter4j.RateLimitStatus:
    int getRemaining() -> getRemaining
    int getRemainingHits() -> getRemainingHits
    int getLimit() -> getLimit
    int getResetTimeInSeconds() -> getResetTimeInSeconds
    int getSecondsUntilReset() -> getSecondsUntilReset
twitter4j.RateLimitStatusEvent -> twitter4j.RateLimitStatusEvent:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    boolean isAccountRateLimitStatus -> isAccountRateLimitStatus
    long serialVersionUID -> serialVersionUID
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    boolean isAccountRateLimitStatus() -> isAccountRateLimitStatus
    boolean isIPRateLimitStatus() -> isIPRateLimitStatus
twitter4j.RateLimitStatusListener -> twitter4j.RateLimitStatusListener:
    void onRateLimitStatus(twitter4j.RateLimitStatusEvent) -> onRateLimitStatus
    void onRateLimitReached(twitter4j.RateLimitStatusEvent) -> onRateLimitReached
twitter4j.RelatedResults -> twitter4j.RelatedResults:
    twitter4j.ResponseList getTweetsWithConversation() -> getTweetsWithConversation
    twitter4j.ResponseList getTweetsWithReply() -> getTweetsWithReply
    twitter4j.ResponseList getTweetsFromUser() -> getTweetsFromUser
twitter4j.Relationship -> twitter4j.Relationship:
    long getSourceUserId() -> getSourceUserId
    long getTargetUserId() -> getTargetUserId
    boolean isSourceBlockingTarget() -> isSourceBlockingTarget
    java.lang.String getSourceUserScreenName() -> getSourceUserScreenName
    java.lang.String getTargetUserScreenName() -> getTargetUserScreenName
    boolean isSourceFollowingTarget() -> isSourceFollowingTarget
    boolean isTargetFollowingSource() -> isTargetFollowingSource
    boolean isSourceFollowedByTarget() -> isSourceFollowedByTarget
    boolean isTargetFollowedBySource() -> isTargetFollowedBySource
    boolean isSourceNotificationsEnabled() -> isSourceNotificationsEnabled
    boolean isSourceWantRetweets() -> isSourceWantRetweets
twitter4j.ResponseList -> twitter4j.ResponseList:
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.SavedSearch -> twitter4j.SavedSearch:
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getQuery() -> getQuery
    int getPosition() -> getPosition
    java.lang.String getName() -> getName
    int getId() -> getId
twitter4j.SimilarPlaces -> twitter4j.SimilarPlaces:
    java.lang.String getToken() -> getToken
twitter4j.Status -> twitter4j.Status:
    java.util.Date getCreatedAt() -> getCreatedAt
    long getId() -> getId
    java.lang.String getText() -> getText
    java.lang.String getSource() -> getSource
    boolean isTruncated() -> isTruncated
    long getInReplyToStatusId() -> getInReplyToStatusId
    long getInReplyToUserId() -> getInReplyToUserId
    java.lang.String getInReplyToScreenName() -> getInReplyToScreenName
    twitter4j.GeoLocation getGeoLocation() -> getGeoLocation
    twitter4j.Place getPlace() -> getPlace
    boolean isFavorited() -> isFavorited
    twitter4j.User getUser() -> getUser
    boolean isRetweet() -> isRetweet
    twitter4j.Status getRetweetedStatus() -> getRetweetedStatus
    long[] getContributors() -> getContributors
    long getRetweetCount() -> getRetweetCount
    boolean isRetweetedByMe() -> isRetweetedByMe
    long getCurrentUserRetweetId() -> getCurrentUserRetweetId
    boolean isPossiblySensitive() -> isPossiblySensitive
twitter4j.StatusDeletionNotice -> twitter4j.StatusDeletionNotice:
    long getStatusId() -> getStatusId
    long getUserId() -> getUserId
twitter4j.StatusDeletionNoticeImpl -> twitter4j.StatusDeletionNoticeImpl:
    long statusId -> statusId
    long userId -> userId
    long serialVersionUID -> serialVersionUID
    long getStatusId() -> getStatusId
    long getUserId() -> getUserId
    int compareTo(twitter4j.StatusDeletionNotice) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.StatusUpdate -> twitter4j.StatusUpdate:
    java.lang.String status -> status
    long inReplyToStatusId -> inReplyToStatusId
    twitter4j.GeoLocation location -> location
    java.lang.String placeId -> placeId
    boolean displayCoordinates -> displayCoordinates
    boolean possiblySensitive -> possiblySensitive
    java.lang.String mediaName -> mediaName
    java.io.InputStream mediaBody -> mediaBody
    java.io.File mediaFile -> mediaFile
    long serialVersionUID -> serialVersionUID
    java.lang.String getStatus() -> getStatus
    long getInReplyToStatusId() -> getInReplyToStatusId
    void setInReplyToStatusId(long) -> setInReplyToStatusId
    twitter4j.StatusUpdate inReplyToStatusId(long) -> inReplyToStatusId
    twitter4j.GeoLocation getLocation() -> getLocation
    void setLocation(twitter4j.GeoLocation) -> setLocation
    twitter4j.StatusUpdate location(twitter4j.GeoLocation) -> location
    java.lang.String getPlaceId() -> getPlaceId
    void setPlaceId(java.lang.String) -> setPlaceId
    twitter4j.StatusUpdate placeId(java.lang.String) -> placeId
    boolean isDisplayCoordinates() -> isDisplayCoordinates
    void setDisplayCoordinates(boolean) -> setDisplayCoordinates
    twitter4j.StatusUpdate displayCoordinates(boolean) -> displayCoordinates
    void setMedia(java.io.File) -> setMedia
    twitter4j.StatusUpdate media(java.io.File) -> media
    void setMedia(java.lang.String,java.io.InputStream) -> setMedia
    boolean isWithMedia() -> isWithMedia
    twitter4j.StatusUpdate media(java.lang.String,java.io.InputStream) -> media
    void setPossiblySensitive(boolean) -> setPossiblySensitive
    twitter4j.StatusUpdate possiblySensitive(boolean) -> possiblySensitive
    boolean isPossiblySensitive() -> isPossiblySensitive
    twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,double,java.util.List) -> appendParameter
    void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.TimeZone -> twitter4j.TimeZone:
    java.lang.String getName() -> getName
    java.lang.String tzinfoName() -> tzinfoName
    int utcOffset() -> utcOffset
twitter4j.Trend -> twitter4j.Trend:
    java.lang.String getName() -> getName
    java.lang.String getUrl() -> getUrl
    java.lang.String getURL() -> getURL
    java.lang.String getQuery() -> getQuery
twitter4j.Trends -> twitter4j.Trends:
    twitter4j.Trend[] getTrends() -> getTrends
    twitter4j.Location getLocation() -> getLocation
    java.util.Date getAsOf() -> getAsOf
    java.util.Date getTrendAt() -> getTrendAt
twitter4j.Twitter -> twitter4j.Twitter:
twitter4j.TwitterAPIConfiguration -> twitter4j.TwitterAPIConfiguration:
    int getPhotoSizeLimit() -> getPhotoSizeLimit
    int getShortURLLength() -> getShortURLLength
    int getShortURLLengthHttps() -> getShortURLLengthHttps
    int getCharactersReservedPerMedia() -> getCharactersReservedPerMedia
    java.util.Map getPhotoSizes() -> getPhotoSizes
    java.lang.String[] getNonUsernamePaths() -> getNonUsernamePaths
    int getMaxMediaPerUpload() -> getMaxMediaPerUpload
twitter4j.TwitterAPIMonitor -> twitter4j.TwitterAPIMonitor:
    twitter4j.internal.logging.Logger logger -> logger
    java.util.regex.Pattern pattern -> pattern
    twitter4j.TwitterAPIMonitor SINGLETON -> SINGLETON
    twitter4j.management.APIStatistics STATISTICS -> STATISTICS
    twitter4j.TwitterAPIMonitor getInstance() -> getInstance
    twitter4j.management.APIStatisticsMBean getStatistics() -> getStatistics
    void methodCalled(java.lang.String,long,boolean) -> methodCalled
twitter4j.TwitterBase -> twitter4j.TwitterBase:
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    void addRateLimitStatusListener(twitter4j.RateLimitStatusListener) -> addRateLimitStatusListener
    twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    twitter4j.conf.Configuration getConfiguration() -> getConfiguration
    void shutdown() -> shutdown
twitter4j.TwitterBaseImpl -> twitter4j.TwitterBaseImpl:
    twitter4j.conf.Configuration conf -> conf
    java.lang.String screenName -> screenName
    long id -> id
    twitter4j.internal.http.HttpClientWrapper http -> http
    java.util.List rateLimitStatusListeners -> rateLimitStatusListeners
    twitter4j.internal.json.z_T4JInternalFactory factory -> factory
    twitter4j.auth.Authorization auth -> auth
    long serialVersionUID -> serialVersionUID
    void init() -> init
    void setFactory() -> setFactory
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    twitter4j.User fillInIDAndScreenName() -> fillInIDAndScreenName
    void addRateLimitStatusListener(twitter4j.RateLimitStatusListener) -> addRateLimitStatusListener
    void httpResponseReceived(twitter4j.internal.http.HttpResponseEvent) -> httpResponseReceived
    twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    twitter4j.conf.Configuration getConfiguration() -> getConfiguration
    void shutdown() -> shutdown
    void ensureAuthorizationEnabled() -> ensureAuthorizationEnabled
    void ensureOAuthEnabled() -> ensureOAuthEnabled
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.OAuthSupport getOAuth() -> getOAuth
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.TwitterException -> twitter4j.TwitterException:
    int statusCode -> statusCode
    int errorCode -> errorCode
    long serialVersionUID -> serialVersionUID
    twitter4j.ExceptionDiagnosis exceptionDiagnosis -> exceptionDiagnosis
    twitter4j.internal.http.HttpResponse response -> response
    java.lang.String errorMessage -> errorMessage
    java.lang.String[] FILTER -> FILTER
    boolean nested -> nested
    java.lang.String getMessage() -> getMessage
    void decode(java.lang.String) -> decode
    int getStatusCode() -> getStatusCode
    int getErrorCode() -> getErrorCode
    java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    int getAccessLevel() -> getAccessLevel
    int getRetryAfter() -> getRetryAfter
    boolean isCausedByNetworkIssue() -> isCausedByNetworkIssue
    boolean exceededRateLimitation() -> exceededRateLimitation
    boolean resourceNotFound() -> resourceNotFound
    java.lang.String getExceptionCode() -> getExceptionCode
    twitter4j.ExceptionDiagnosis getExceptionDiagnosis() -> getExceptionDiagnosis
    void setNested() -> setNested
    java.lang.String getErrorMessage() -> getErrorMessage
    boolean isErrorMessageAvailable() -> isErrorMessageAvailable
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getCause(int) -> getCause
twitter4j.TwitterFactory -> twitter4j.TwitterFactory:
    java.lang.reflect.Constructor TWITTER_CONSTRUCTOR -> TWITTER_CONSTRUCTOR
    twitter4j.auth.Authorization DEFAULT_AUTHORIZATION -> DEFAULT_AUTHORIZATION
    twitter4j.Twitter SINGLETON -> SINGLETON
    long serialVersionUID -> serialVersionUID
    twitter4j.conf.Configuration conf -> conf
    twitter4j.Twitter getInstance() -> getInstance
    twitter4j.Twitter getInstance(twitter4j.auth.AccessToken) -> getInstance
    twitter4j.Twitter getInstance(twitter4j.auth.Authorization) -> getInstance
    twitter4j.Twitter getSingleton() -> getSingleton
twitter4j.TwitterImpl -> twitter4j.TwitterImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String IMPLICIT_PARAMS_STR -> IMPLICIT_PARAMS_STR
    twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS -> IMPLICIT_PARAMS
    twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET -> INCLUDE_MY_RETWEET
    java.util.Map implicitParamsMap -> implicitParamsMap
    java.util.Map implicitParamsStrMap -> implicitParamsStrMap
    twitter4j.ResponseList getMentions() -> getMentions
    twitter4j.ResponseList getMentionsTimeline() -> getMentionsTimeline
    twitter4j.ResponseList getMentions(twitter4j.Paging) -> getMentions
    twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging) -> getMentionsTimeline
    twitter4j.ResponseList getHomeTimeline() -> getHomeTimeline
    twitter4j.ResponseList getHomeTimeline(twitter4j.Paging) -> getHomeTimeline
    twitter4j.ResponseList getRetweetsOfMe() -> getRetweetsOfMe
    twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging) -> getRetweetsOfMe
    twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(java.lang.String) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline() -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getRetweets(long) -> getRetweets
    twitter4j.Status showStatus(long) -> showStatus
    twitter4j.Status destroyStatus(long) -> destroyStatus
    twitter4j.Status updateStatus(java.lang.String) -> updateStatus
    twitter4j.Status updateStatus(twitter4j.StatusUpdate) -> updateStatus
    twitter4j.Status retweetStatus(long) -> retweetStatus
    twitter4j.OEmbed getOEmbed(twitter4j.OEmbedRequest) -> getOEmbed
    twitter4j.QueryResult search(twitter4j.Query) -> search
    twitter4j.ResponseList getDirectMessages() -> getDirectMessages
    twitter4j.ResponseList getDirectMessages(twitter4j.Paging) -> getDirectMessages
    twitter4j.ResponseList getSentDirectMessages() -> getSentDirectMessages
    twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging) -> getSentDirectMessages
    twitter4j.DirectMessage showDirectMessage(long) -> showDirectMessage
    twitter4j.DirectMessage destroyDirectMessage(long) -> destroyDirectMessage
    twitter4j.DirectMessage sendDirectMessage(long,java.lang.String) -> sendDirectMessage
    twitter4j.DirectMessage sendDirectMessage(java.lang.String,java.lang.String) -> sendDirectMessage
    twitter4j.IDs getFriendsIDs(long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(long,long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(java.lang.String,long) -> getFriendsIDs
    twitter4j.IDs getFollowersIDs(long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(long,long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(java.lang.String,long) -> getFollowersIDs
    twitter4j.ResponseList lookupFriendships(long[]) -> lookupFriendships
    twitter4j.ResponseList lookupFriendships(java.lang.String[]) -> lookupFriendships
    twitter4j.IDs getIncomingFriendships(long) -> getIncomingFriendships
    twitter4j.IDs getOutgoingFriendships(long) -> getOutgoingFriendships
    twitter4j.User createFriendship(long) -> createFriendship
    twitter4j.User createFriendship(java.lang.String) -> createFriendship
    twitter4j.User createFriendship(long,boolean) -> createFriendship
    twitter4j.User createFriendship(java.lang.String,boolean) -> createFriendship
    twitter4j.User destroyFriendship(long) -> destroyFriendship
    twitter4j.User destroyFriendship(java.lang.String) -> destroyFriendship
    twitter4j.Relationship updateFriendship(long,boolean,boolean) -> updateFriendship
    twitter4j.Relationship updateFriendship(java.lang.String,boolean,boolean) -> updateFriendship
    twitter4j.Relationship showFriendship(long,long) -> showFriendship
    twitter4j.Relationship showFriendship(java.lang.String,java.lang.String) -> showFriendship
    twitter4j.PagableResponseList getFriendsList(long,long) -> getFriendsList
    twitter4j.PagableResponseList getFriendsList(java.lang.String,long) -> getFriendsList
    twitter4j.PagableResponseList getFollowersList(long,long) -> getFollowersList
    twitter4j.PagableResponseList getFollowersList(java.lang.String,long) -> getFollowersList
    twitter4j.AccountSettings getAccountSettings() -> getAccountSettings
    twitter4j.User verifyCredentials() -> verifyCredentials
    twitter4j.AccountSettings updateAccountSettings(java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateAccountSettings
    twitter4j.User updateProfile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfile
    twitter4j.User updateProfileBackgroundImage(java.io.File,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileBackgroundImage(java.io.InputStream,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileColors(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfileColors
    void addParameterToList(java.util.List,java.lang.String,java.lang.String) -> addParameterToList
    twitter4j.User updateProfileImage(java.io.File) -> updateProfileImage
    twitter4j.User updateProfileImage(java.io.InputStream) -> updateProfileImage
    void checkFileValidity(java.io.File) -> checkFileValidity
    twitter4j.PagableResponseList getBlocksList() -> getBlocksList
    twitter4j.PagableResponseList getBlocksList(long) -> getBlocksList
    twitter4j.IDs getBlocksIDs() -> getBlocksIDs
    twitter4j.IDs getBlocksIDs(long) -> getBlocksIDs
    twitter4j.User createBlock(long) -> createBlock
    twitter4j.User createBlock(java.lang.String) -> createBlock
    twitter4j.User destroyBlock(long) -> destroyBlock
    twitter4j.User destroyBlock(java.lang.String) -> destroyBlock
    twitter4j.ResponseList lookupUsers(long[]) -> lookupUsers
    twitter4j.ResponseList lookupUsers(java.lang.String[]) -> lookupUsers
    twitter4j.User showUser(long) -> showUser
    twitter4j.User showUser(java.lang.String) -> showUser
    twitter4j.ResponseList searchUsers(java.lang.String,int) -> searchUsers
    twitter4j.ResponseList getContributees(long) -> getContributees
    twitter4j.ResponseList getContributees(java.lang.String) -> getContributees
    twitter4j.ResponseList getContributors(long) -> getContributors
    twitter4j.ResponseList getContributors(java.lang.String) -> getContributors
    void removeProfileBanner() -> removeProfileBanner
    void updateProfileBanner(java.io.File) -> updateProfileBanner
    void updateProfileBanner(java.io.InputStream) -> updateProfileBanner
    twitter4j.ResponseList getUserSuggestions(java.lang.String) -> getUserSuggestions
    twitter4j.ResponseList getSuggestedUserCategories() -> getSuggestedUserCategories
    twitter4j.ResponseList getMemberSuggestions(java.lang.String) -> getMemberSuggestions
    twitter4j.ResponseList getFavorites() -> getFavorites
    twitter4j.ResponseList getFavorites(long) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String) -> getFavorites
    twitter4j.ResponseList getFavorites(twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(long,twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String,twitter4j.Paging) -> getFavorites
    twitter4j.Status destroyFavorite(long) -> destroyFavorite
    twitter4j.Status createFavorite(long) -> createFavorite
    twitter4j.ResponseList getUserLists(java.lang.String) -> getUserLists
    twitter4j.ResponseList getUserLists(long) -> getUserLists
    twitter4j.ResponseList getUserListStatuses(int,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(long,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(java.lang.String,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.UserList destroyUserListMember(int,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(int,long) -> deleteUserListMember
    twitter4j.UserList destroyUserListMember(long,java.lang.String,long) -> destroyUserListMember
    twitter4j.UserList destroyUserListMember(java.lang.String,java.lang.String,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(long,java.lang.String,long) -> deleteUserListMember
    twitter4j.PagableResponseList getUserListMemberships(long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListSubscribers(int,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(long,java.lang.String,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(java.lang.String,java.lang.String,long) -> getUserListSubscribers
    twitter4j.UserList createUserListSubscription(int) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(long,java.lang.String) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(java.lang.String,java.lang.String) -> createUserListSubscription
    twitter4j.User showUserListSubscription(int,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(long,java.lang.String,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(java.lang.String,java.lang.String,long) -> showUserListSubscription
    twitter4j.UserList destroyUserListSubscription(int) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(long,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(java.lang.String,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList createUserListMembers(int,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(int,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,java.lang.String[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,java.lang.String[]) -> addUserListMembers
    twitter4j.User showUserListMembership(int,long) -> showUserListMembership
    twitter4j.User showUserListMembership(long,java.lang.String,long) -> showUserListMembership
    twitter4j.User showUserListMembership(java.lang.String,java.lang.String,long) -> showUserListMembership
    twitter4j.PagableResponseList getUserListMembers(int,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(long,java.lang.String,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(java.lang.String,java.lang.String,long) -> getUserListMembers
    twitter4j.UserList createUserListMember(int,long) -> createUserListMember
    twitter4j.UserList addUserListMember(int,long) -> addUserListMember
    twitter4j.UserList createUserListMember(long,java.lang.String,long) -> createUserListMember
    twitter4j.UserList createUserListMember(java.lang.String,java.lang.String,long) -> createUserListMember
    twitter4j.UserList addUserListMember(long,java.lang.String,long) -> addUserListMember
    twitter4j.UserList destroyUserList(int) -> destroyUserList
    twitter4j.UserList destroyUserList(long,java.lang.String) -> destroyUserList
    twitter4j.UserList destroyUserList(java.lang.String,java.lang.String) -> destroyUserList
    twitter4j.UserList updateUserList(int,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(long,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(java.lang.String,boolean,java.lang.String,twitter4j.internal.http.HttpParameter[]) -> updateUserList
    twitter4j.UserList createUserList(java.lang.String,boolean,java.lang.String) -> createUserList
    twitter4j.UserList showUserList(int) -> showUserList
    twitter4j.UserList showUserList(long,java.lang.String) -> showUserList
    twitter4j.UserList showUserList(java.lang.String,java.lang.String) -> showUserList
    twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String,long) -> getUserListSubscriptions
    twitter4j.ResponseList getSavedSearches() -> getSavedSearches
    twitter4j.SavedSearch showSavedSearch(int) -> showSavedSearch
    twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    twitter4j.SavedSearch destroySavedSearch(int) -> destroySavedSearch
    twitter4j.Place getGeoDetails(java.lang.String) -> getGeoDetails
    twitter4j.ResponseList reverseGeoCode(twitter4j.GeoQuery) -> reverseGeoCode
    twitter4j.ResponseList searchPlaces(twitter4j.GeoQuery) -> searchPlaces
    twitter4j.SimilarPlaces getSimilarPlaces(twitter4j.GeoLocation,java.lang.String,java.lang.String,java.lang.String) -> getSimilarPlaces
    twitter4j.Place createPlace(java.lang.String,java.lang.String,java.lang.String,twitter4j.GeoLocation,java.lang.String) -> createPlace
    twitter4j.Trends getLocationTrends(int) -> getLocationTrends
    twitter4j.Trends getPlaceTrends(int) -> getPlaceTrends
    twitter4j.ResponseList getAvailableTrends() -> getAvailableTrends
    twitter4j.ResponseList getAvailableTrends(twitter4j.GeoLocation) -> getAvailableTrends
    twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation) -> getClosestTrends
    twitter4j.User reportSpam(long) -> reportSpam
    twitter4j.User reportSpam(java.lang.String) -> reportSpam
    twitter4j.TwitterAPIConfiguration getAPIConfiguration() -> getAPIConfiguration
    twitter4j.ResponseList getLanguages() -> getLanguages
    java.lang.String getPrivacyPolicy() -> getPrivacyPolicy
    java.lang.String getTermsOfService() -> getTermsOfService
    java.util.Map getRateLimitStatus() -> getRateLimitStatus
    java.util.Map getRateLimitStatus(java.lang.String[]) -> getRateLimitStatus
    twitter4j.RelatedResults getRelatedResults(long) -> getRelatedResults
    twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> get
    twitter4j.internal.http.HttpResponse post(java.lang.String) -> post
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[]) -> mergeParameters
    twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter) -> mergeParameters
    twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[]) -> mergeImplicitParams
    boolean isOk(twitter4j.internal.http.HttpResponse) -> isOk
    java.lang.String toString() -> toString
twitter4j.TwitterResponse -> twitter4j.TwitterResponse:
    int NONE -> NONE
    int READ -> READ
    int READ_WRITE -> READ_WRITE
    int READ_WRITE_DIRECTMESSAGES -> READ_WRITE_DIRECTMESSAGES
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    int getAccessLevel() -> getAccessLevel
twitter4j.URLEntity -> twitter4j.URLEntity:
    java.lang.String getURL() -> getURL
    java.lang.String getExpandedURL() -> getExpandedURL
    java.lang.String getDisplayURL() -> getDisplayURL
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.User -> twitter4j.User:
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    java.lang.String getLocation() -> getLocation
    java.lang.String getDescription() -> getDescription
    boolean isContributorsEnabled() -> isContributorsEnabled
    java.lang.String getProfileImageURL() -> getProfileImageURL
    java.lang.String getBiggerProfileImageURL() -> getBiggerProfileImageURL
    java.lang.String getMiniProfileImageURL() -> getMiniProfileImageURL
    java.lang.String getOriginalProfileImageURL() -> getOriginalProfileImageURL
    java.net.URL getProfileImageUrlHttps() -> getProfileImageUrlHttps
    java.lang.String getProfileImageURLHttps() -> getProfileImageURLHttps
    java.lang.String getBiggerProfileImageURLHttps() -> getBiggerProfileImageURLHttps
    java.lang.String getMiniProfileImageURLHttps() -> getMiniProfileImageURLHttps
    java.lang.String getOriginalProfileImageURLHttps() -> getOriginalProfileImageURLHttps
    java.lang.String getURL() -> getURL
    boolean isProtected() -> isProtected
    int getFollowersCount() -> getFollowersCount
    twitter4j.Status getStatus() -> getStatus
    java.lang.String getProfileBackgroundColor() -> getProfileBackgroundColor
    java.lang.String getProfileTextColor() -> getProfileTextColor
    java.lang.String getProfileLinkColor() -> getProfileLinkColor
    java.lang.String getProfileSidebarFillColor() -> getProfileSidebarFillColor
    java.lang.String getProfileSidebarBorderColor() -> getProfileSidebarBorderColor
    boolean isProfileUseBackgroundImage() -> isProfileUseBackgroundImage
    boolean isShowAllInlineMedia() -> isShowAllInlineMedia
    int getFriendsCount() -> getFriendsCount
    java.util.Date getCreatedAt() -> getCreatedAt
    int getFavouritesCount() -> getFavouritesCount
    int getUtcOffset() -> getUtcOffset
    java.lang.String getTimeZone() -> getTimeZone
    java.lang.String getProfileBackgroundImageUrl() -> getProfileBackgroundImageUrl
    java.lang.String getProfileBackgroundImageURL() -> getProfileBackgroundImageURL
    java.lang.String getProfileBackgroundImageUrlHttps() -> getProfileBackgroundImageUrlHttps
    java.lang.String getProfileBannerURL() -> getProfileBannerURL
    java.lang.String getProfileBannerRetinaURL() -> getProfileBannerRetinaURL
    java.lang.String getProfileBannerIPadURL() -> getProfileBannerIPadURL
    java.lang.String getProfileBannerIPadRetinaURL() -> getProfileBannerIPadRetinaURL
    java.lang.String getProfileBannerMobileURL() -> getProfileBannerMobileURL
    java.lang.String getProfileBannerMobileRetinaURL() -> getProfileBannerMobileRetinaURL
    boolean isProfileBackgroundTiled() -> isProfileBackgroundTiled
    java.lang.String getLang() -> getLang
    int getStatusesCount() -> getStatusesCount
    boolean isGeoEnabled() -> isGeoEnabled
    boolean isVerified() -> isVerified
    boolean isTranslator() -> isTranslator
    int getListedCount() -> getListedCount
    boolean isFollowRequestSent() -> isFollowRequestSent
    twitter4j.URLEntity[] getDescriptionURLEntities() -> getDescriptionURLEntities
    twitter4j.URLEntity getURLEntity() -> getURLEntity
twitter4j.UserList -> twitter4j.UserList:
    int getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    java.lang.String getSlug() -> getSlug
    java.lang.String getDescription() -> getDescription
    int getSubscriberCount() -> getSubscriberCount
    int getMemberCount() -> getMemberCount
    java.net.URI getURI() -> getURI
    boolean isPublic() -> isPublic
    twitter4j.User getUser() -> getUser
    boolean isFollowing() -> isFollowing
twitter4j.UserMentionEntity -> twitter4j.UserMentionEntity:
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.Version -> twitter4j.Version:
    java.lang.String VERSION -> VERSION
    java.lang.String TITLE -> TITLE
    java.lang.String getVersion() -> getVersion
    void main(java.lang.String[]) -> main
twitter4j.api.DirectMessagesResources -> twitter4j.api.DirectMessagesResources:
    twitter4j.ResponseList getDirectMessages() -> getDirectMessages
    twitter4j.ResponseList getDirectMessages(twitter4j.Paging) -> getDirectMessages
    twitter4j.ResponseList getSentDirectMessages() -> getSentDirectMessages
    twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging) -> getSentDirectMessages
    twitter4j.DirectMessage showDirectMessage(long) -> showDirectMessage
    twitter4j.DirectMessage destroyDirectMessage(long) -> destroyDirectMessage
    twitter4j.DirectMessage sendDirectMessage(long,java.lang.String) -> sendDirectMessage
    twitter4j.DirectMessage sendDirectMessage(java.lang.String,java.lang.String) -> sendDirectMessage
twitter4j.api.FavoritesResources -> twitter4j.api.FavoritesResources:
    twitter4j.ResponseList getFavorites() -> getFavorites
    twitter4j.ResponseList getFavorites(long) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String) -> getFavorites
    twitter4j.ResponseList getFavorites(twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(long,twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String,twitter4j.Paging) -> getFavorites
    twitter4j.Status createFavorite(long) -> createFavorite
    twitter4j.Status destroyFavorite(long) -> destroyFavorite
twitter4j.api.FriendsFollowersResources -> twitter4j.api.FriendsFollowersResources:
    twitter4j.IDs getFriendsIDs(long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(long,long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(java.lang.String,long) -> getFriendsIDs
    twitter4j.IDs getFollowersIDs(long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(long,long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(java.lang.String,long) -> getFollowersIDs
    twitter4j.ResponseList lookupFriendships(long[]) -> lookupFriendships
    twitter4j.ResponseList lookupFriendships(java.lang.String[]) -> lookupFriendships
    twitter4j.IDs getIncomingFriendships(long) -> getIncomingFriendships
    twitter4j.IDs getOutgoingFriendships(long) -> getOutgoingFriendships
    twitter4j.User createFriendship(long) -> createFriendship
    twitter4j.User createFriendship(java.lang.String) -> createFriendship
    twitter4j.User createFriendship(long,boolean) -> createFriendship
    twitter4j.User createFriendship(java.lang.String,boolean) -> createFriendship
    twitter4j.User destroyFriendship(long) -> destroyFriendship
    twitter4j.User destroyFriendship(java.lang.String) -> destroyFriendship
    twitter4j.Relationship updateFriendship(long,boolean,boolean) -> updateFriendship
    twitter4j.Relationship updateFriendship(java.lang.String,boolean,boolean) -> updateFriendship
    twitter4j.Relationship showFriendship(long,long) -> showFriendship
    twitter4j.Relationship showFriendship(java.lang.String,java.lang.String) -> showFriendship
    twitter4j.PagableResponseList getFriendsList(long,long) -> getFriendsList
    twitter4j.PagableResponseList getFriendsList(java.lang.String,long) -> getFriendsList
    twitter4j.PagableResponseList getFollowersList(long,long) -> getFollowersList
    twitter4j.PagableResponseList getFollowersList(java.lang.String,long) -> getFollowersList
twitter4j.api.HelpResources -> twitter4j.api.HelpResources:
    twitter4j.TwitterAPIConfiguration getAPIConfiguration() -> getAPIConfiguration
    twitter4j.ResponseList getLanguages() -> getLanguages
    java.lang.String getPrivacyPolicy() -> getPrivacyPolicy
    java.lang.String getTermsOfService() -> getTermsOfService
    java.util.Map getRateLimitStatus() -> getRateLimitStatus
    java.util.Map getRateLimitStatus(java.lang.String[]) -> getRateLimitStatus
twitter4j.api.HelpResources$Language -> twitter4j.api.HelpResources$Language:
    java.lang.String getName() -> getName
    java.lang.String getCode() -> getCode
    java.lang.String getStatus() -> getStatus
twitter4j.api.ListsResources -> twitter4j.api.ListsResources:
    twitter4j.ResponseList getUserLists(java.lang.String) -> getUserLists
    twitter4j.ResponseList getUserLists(long) -> getUserLists
    twitter4j.ResponseList getUserListStatuses(int,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(long,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(java.lang.String,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.UserList destroyUserListMember(int,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(int,long) -> deleteUserListMember
    twitter4j.UserList destroyUserListMember(long,java.lang.String,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(long,java.lang.String,long) -> deleteUserListMember
    twitter4j.UserList destroyUserListMember(java.lang.String,java.lang.String,long) -> destroyUserListMember
    twitter4j.PagableResponseList getUserListMemberships(long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListSubscribers(int,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(long,java.lang.String,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(java.lang.String,java.lang.String,long) -> getUserListSubscribers
    twitter4j.UserList createUserListSubscription(int) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(long,java.lang.String) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(java.lang.String,java.lang.String) -> createUserListSubscription
    twitter4j.User showUserListSubscription(int,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(long,java.lang.String,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(java.lang.String,java.lang.String,long) -> showUserListSubscription
    twitter4j.UserList destroyUserListSubscription(int) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(long,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(java.lang.String,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList createUserListMembers(int,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList createUserListMembers(int,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,java.lang.String[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,java.lang.String[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.User showUserListMembership(int,long) -> showUserListMembership
    twitter4j.User showUserListMembership(long,java.lang.String,long) -> showUserListMembership
    twitter4j.User showUserListMembership(java.lang.String,java.lang.String,long) -> showUserListMembership
    twitter4j.PagableResponseList getUserListMembers(int,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(long,java.lang.String,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(java.lang.String,java.lang.String,long) -> getUserListMembers
    twitter4j.UserList createUserListMember(int,long) -> createUserListMember
    twitter4j.UserList addUserListMember(int,long) -> addUserListMember
    twitter4j.UserList createUserListMember(long,java.lang.String,long) -> createUserListMember
    twitter4j.UserList addUserListMember(long,java.lang.String,long) -> addUserListMember
    twitter4j.UserList createUserListMember(java.lang.String,java.lang.String,long) -> createUserListMember
    twitter4j.UserList destroyUserList(int) -> destroyUserList
    twitter4j.UserList destroyUserList(long,java.lang.String) -> destroyUserList
    twitter4j.UserList destroyUserList(java.lang.String,java.lang.String) -> destroyUserList
    twitter4j.UserList updateUserList(int,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(long,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList createUserList(java.lang.String,boolean,java.lang.String) -> createUserList
    twitter4j.UserList showUserList(int) -> showUserList
    twitter4j.UserList showUserList(long,java.lang.String) -> showUserList
    twitter4j.UserList showUserList(java.lang.String,java.lang.String) -> showUserList
    twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String,long) -> getUserListSubscriptions
twitter4j.api.PlacesGeoResources -> twitter4j.api.PlacesGeoResources:
    twitter4j.Place getGeoDetails(java.lang.String) -> getGeoDetails
    twitter4j.ResponseList reverseGeoCode(twitter4j.GeoQuery) -> reverseGeoCode
    twitter4j.ResponseList searchPlaces(twitter4j.GeoQuery) -> searchPlaces
    twitter4j.SimilarPlaces getSimilarPlaces(twitter4j.GeoLocation,java.lang.String,java.lang.String,java.lang.String) -> getSimilarPlaces
    twitter4j.Place createPlace(java.lang.String,java.lang.String,java.lang.String,twitter4j.GeoLocation,java.lang.String) -> createPlace
twitter4j.api.SavedSearchesResources -> twitter4j.api.SavedSearchesResources:
    twitter4j.ResponseList getSavedSearches() -> getSavedSearches
    twitter4j.SavedSearch showSavedSearch(int) -> showSavedSearch
    twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    twitter4j.SavedSearch destroySavedSearch(int) -> destroySavedSearch
twitter4j.api.SearchResource -> twitter4j.api.SearchResource:
    twitter4j.QueryResult search(twitter4j.Query) -> search
twitter4j.api.SpamReportingResource -> twitter4j.api.SpamReportingResource:
    twitter4j.User reportSpam(long) -> reportSpam
    twitter4j.User reportSpam(java.lang.String) -> reportSpam
twitter4j.api.SuggestedUsersResources -> twitter4j.api.SuggestedUsersResources:
    twitter4j.ResponseList getUserSuggestions(java.lang.String) -> getUserSuggestions
    twitter4j.ResponseList getSuggestedUserCategories() -> getSuggestedUserCategories
    twitter4j.ResponseList getMemberSuggestions(java.lang.String) -> getMemberSuggestions
twitter4j.api.TimelinesResources -> twitter4j.api.TimelinesResources:
    twitter4j.ResponseList getMentions() -> getMentions
    twitter4j.ResponseList getMentionsTimeline() -> getMentionsTimeline
    twitter4j.ResponseList getMentions(twitter4j.Paging) -> getMentions
    twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging) -> getMentionsTimeline
    twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(java.lang.String) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline() -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getHomeTimeline() -> getHomeTimeline
    twitter4j.ResponseList getHomeTimeline(twitter4j.Paging) -> getHomeTimeline
    twitter4j.ResponseList getRetweetsOfMe() -> getRetweetsOfMe
    twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging) -> getRetweetsOfMe
twitter4j.api.TrendsResources -> twitter4j.api.TrendsResources:
    twitter4j.Trends getLocationTrends(int) -> getLocationTrends
    twitter4j.Trends getPlaceTrends(int) -> getPlaceTrends
    twitter4j.ResponseList getAvailableTrends() -> getAvailableTrends
    twitter4j.ResponseList getAvailableTrends(twitter4j.GeoLocation) -> getAvailableTrends
    twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation) -> getClosestTrends
twitter4j.api.TweetsResources -> twitter4j.api.TweetsResources:
    twitter4j.ResponseList getRetweets(long) -> getRetweets
    twitter4j.Status showStatus(long) -> showStatus
    twitter4j.Status destroyStatus(long) -> destroyStatus
    twitter4j.Status updateStatus(java.lang.String) -> updateStatus
    twitter4j.Status updateStatus(twitter4j.StatusUpdate) -> updateStatus
    twitter4j.Status retweetStatus(long) -> retweetStatus
    twitter4j.OEmbed getOEmbed(twitter4j.OEmbedRequest) -> getOEmbed
twitter4j.api.UndocumentedResources -> twitter4j.api.UndocumentedResources:
    twitter4j.RelatedResults getRelatedResults(long) -> getRelatedResults
twitter4j.api.UsersResources -> twitter4j.api.UsersResources:
    twitter4j.AccountSettings getAccountSettings() -> getAccountSettings
    twitter4j.User verifyCredentials() -> verifyCredentials
    twitter4j.AccountSettings updateAccountSettings(java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateAccountSettings
    twitter4j.User updateProfile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfile
    twitter4j.User updateProfileBackgroundImage(java.io.File,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileBackgroundImage(java.io.InputStream,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileColors(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfileColors
    twitter4j.User updateProfileImage(java.io.File) -> updateProfileImage
    twitter4j.User updateProfileImage(java.io.InputStream) -> updateProfileImage
    twitter4j.PagableResponseList getBlocksList() -> getBlocksList
    twitter4j.PagableResponseList getBlocksList(long) -> getBlocksList
    twitter4j.IDs getBlocksIDs() -> getBlocksIDs
    twitter4j.IDs getBlocksIDs(long) -> getBlocksIDs
    twitter4j.User createBlock(long) -> createBlock
    twitter4j.User createBlock(java.lang.String) -> createBlock
    twitter4j.User destroyBlock(long) -> destroyBlock
    twitter4j.User destroyBlock(java.lang.String) -> destroyBlock
    twitter4j.ResponseList lookupUsers(long[]) -> lookupUsers
    twitter4j.ResponseList lookupUsers(java.lang.String[]) -> lookupUsers
    twitter4j.User showUser(long) -> showUser
    twitter4j.User showUser(java.lang.String) -> showUser
    twitter4j.ResponseList searchUsers(java.lang.String,int) -> searchUsers
    twitter4j.ResponseList getContributees(long) -> getContributees
    twitter4j.ResponseList getContributees(java.lang.String) -> getContributees
    twitter4j.ResponseList getContributors(long) -> getContributors
    twitter4j.ResponseList getContributors(java.lang.String) -> getContributors
    void removeProfileBanner() -> removeProfileBanner
    void updateProfileBanner(java.io.File) -> updateProfileBanner
    void updateProfileBanner(java.io.InputStream) -> updateProfileBanner
twitter4j.auth.AccessToken -> twitter4j.auth.AccessToken:
    long serialVersionUID -> serialVersionUID
    java.lang.String screenName -> screenName
    long userId -> userId
    java.lang.String getScreenName() -> getScreenName
    long getUserId() -> getUserId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getToken() -> getToken
twitter4j.auth.Authorization -> twitter4j.auth.Authorization:
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    boolean isEnabled() -> isEnabled
twitter4j.auth.AuthorizationConfiguration -> twitter4j.auth.AuthorizationConfiguration:
    java.lang.String getUser() -> getUser
    java.lang.String getPassword() -> getPassword
    java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
twitter4j.auth.AuthorizationFactory -> twitter4j.auth.AuthorizationFactory:
    twitter4j.auth.Authorization getInstance(twitter4j.conf.Configuration) -> getInstance
twitter4j.auth.BasicAuthorization -> twitter4j.auth.BasicAuthorization:
    java.lang.String userId -> userId
    java.lang.String password -> password
    java.lang.String basic -> basic
    long serialVersionUID -> serialVersionUID
    java.lang.String getUserId() -> getUserId
    java.lang.String getPassword() -> getPassword
    java.lang.String encodeBasicAuthenticationString() -> encodeBasicAuthenticationString
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    boolean isEnabled() -> isEnabled
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.auth.NullAuthorization -> twitter4j.auth.NullAuthorization:
    twitter4j.auth.NullAuthorization SINGLETON -> SINGLETON
    long serialVersionUID -> serialVersionUID
    twitter4j.auth.NullAuthorization getInstance() -> getInstance
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    boolean isEnabled() -> isEnabled
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
twitter4j.auth.OAuthAuthorization -> twitter4j.auth.OAuthAuthorization:
    twitter4j.conf.Configuration conf -> conf
    twitter4j.internal.http.HttpClientWrapper http -> http
    java.lang.String HMAC_SHA1 -> HMAC_SHA1
    twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD -> OAUTH_SIGNATURE_METHOD
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String realm -> realm
    twitter4j.auth.OAuthToken oauthToken -> oauthToken
    java.util.Random RAND -> RAND
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    void ensureTokenIsAvailable() -> ensureTokenIsAvailable
    boolean isEnabled() -> isEnabled
    twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
    void setOAuthRealm(java.lang.String) -> setOAuthRealm
    java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],java.lang.String,java.lang.String,twitter4j.auth.OAuthToken) -> generateAuthorizationHeader
    void parseGetParameters(java.lang.String,java.util.List) -> parseGetParameters
    java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.OAuthToken) -> generateAuthorizationHeader
    java.util.List generateOAuthSignatureHttpParams(java.lang.String,java.lang.String) -> generateOAuthSignatureHttpParams
    java.lang.String generateSignature(java.lang.String,twitter4j.auth.OAuthToken) -> generateSignature
    java.lang.String generateSignature(java.lang.String) -> generateSignature
    java.lang.String normalizeRequestParameters(twitter4j.internal.http.HttpParameter[]) -> normalizeRequestParameters
    java.lang.String normalizeRequestParameters(java.util.List) -> normalizeRequestParameters
    java.lang.String normalizeAuthorizationHeaders(java.util.List) -> normalizeAuthorizationHeaders
    java.util.List toParamList(twitter4j.internal.http.HttpParameter[]) -> toParamList
    java.lang.String encodeParameters(java.util.List) -> encodeParameters
    java.lang.String encodeParameters(java.util.List,java.lang.String,boolean) -> encodeParameters
    java.lang.String constructRequestURL(java.lang.String) -> constructRequestURL
    void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.auth.OAuthSupport -> twitter4j.auth.OAuthSupport:
    void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
twitter4j.auth.OAuthToken -> twitter4j.auth.OAuthToken:
    long serialVersionUID -> serialVersionUID
    java.lang.String token -> token
    java.lang.String tokenSecret -> tokenSecret
    javax.crypto.spec.SecretKeySpec secretKeySpec -> secretKeySpec
    java.lang.String[] responseStr -> responseStr
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void setSecretKeySpec(javax.crypto.spec.SecretKeySpec) -> setSecretKeySpec
    javax.crypto.spec.SecretKeySpec getSecretKeySpec() -> getSecretKeySpec
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.auth.RequestToken -> twitter4j.auth.RequestToken:
    twitter4j.conf.Configuration conf -> conf
    twitter4j.auth.OAuthSupport oauth -> oauth
    long serialVersionUID -> serialVersionUID
    java.lang.String getAuthorizationURL() -> getAuthorizationURL
    java.lang.String getAuthenticationURL() -> getAuthenticationURL
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getToken() -> getToken
twitter4j.conf.Configuration -> twitter4j.conf.Configuration:
    boolean isDalvik() -> isDalvik
    boolean isGAE() -> isGAE
    boolean isDebugEnabled() -> isDebugEnabled
    java.lang.String getUserAgent() -> getUserAgent
    java.lang.String getUser() -> getUser
    java.lang.String getPassword() -> getPassword
    java.util.Map getRequestHeaders() -> getRequestHeaders
    java.lang.String getHttpProxyHost() -> getHttpProxyHost
    java.lang.String getHttpProxyUser() -> getHttpProxyUser
    java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    int getHttpProxyPort() -> getHttpProxyPort
    int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    int getHttpReadTimeout() -> getHttpReadTimeout
    int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    int getHttpRetryCount() -> getHttpRetryCount
    int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    java.lang.String getClientVersion() -> getClientVersion
    java.lang.String getClientURL() -> getClientURL
    java.lang.String getRestBaseURL() -> getRestBaseURL
    java.lang.String getStreamBaseURL() -> getStreamBaseURL
    java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    boolean isMBeanEnabled() -> isMBeanEnabled
    boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    java.lang.String getMediaProvider() -> getMediaProvider
    java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    int getAsyncNumThreads() -> getAsyncNumThreads
    long getContributingTo() -> getContributingTo
    java.lang.String getDispatcherImpl() -> getDispatcherImpl
    java.lang.String getLoggerFactory() -> getLoggerFactory
    boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
twitter4j.conf.ConfigurationBase -> twitter4j.conf.ConfigurationBase:
    boolean debug -> debug
    java.lang.String userAgent -> userAgent
    java.lang.String user -> user
    java.lang.String password -> password
    boolean useSSL -> useSSL
    boolean prettyDebug -> prettyDebug
    boolean gzipEnabled -> gzipEnabled
    java.lang.String httpProxyHost -> httpProxyHost
    java.lang.String httpProxyUser -> httpProxyUser
    java.lang.String httpProxyPassword -> httpProxyPassword
    int httpProxyPort -> httpProxyPort
    int httpConnectionTimeout -> httpConnectionTimeout
    int httpReadTimeout -> httpReadTimeout
    int httpStreamingReadTimeout -> httpStreamingReadTimeout
    int httpRetryCount -> httpRetryCount
    int httpRetryIntervalSeconds -> httpRetryIntervalSeconds
    int maxTotalConnections -> maxTotalConnections
    int defaultMaxPerRoute -> defaultMaxPerRoute
    java.lang.String oAuthConsumerKey -> oAuthConsumerKey
    java.lang.String oAuthConsumerSecret -> oAuthConsumerSecret
    java.lang.String oAuthAccessToken -> oAuthAccessToken
    java.lang.String oAuthAccessTokenSecret -> oAuthAccessTokenSecret
    java.lang.String oAuthRequestTokenURL -> oAuthRequestTokenURL
    java.lang.String oAuthAuthorizationURL -> oAuthAuthorizationURL
    java.lang.String oAuthAccessTokenURL -> oAuthAccessTokenURL
    java.lang.String oAuthAuthenticationURL -> oAuthAuthenticationURL
    java.lang.String restBaseURL -> restBaseURL
    java.lang.String streamBaseURL -> streamBaseURL
    java.lang.String userStreamBaseURL -> userStreamBaseURL
    java.lang.String siteStreamBaseURL -> siteStreamBaseURL
    java.lang.String dispatcherImpl -> dispatcherImpl
    java.lang.String loggerFactory -> loggerFactory
    int asyncNumThreads -> asyncNumThreads
    long contributingTo -> contributingTo
    boolean includeRTsEnabled -> includeRTsEnabled
    boolean includeEntitiesEnabled -> includeEntitiesEnabled
    boolean includeMyRetweetEnabled -> includeMyRetweetEnabled
    boolean jsonStoreEnabled -> jsonStoreEnabled
    boolean mbeanEnabled -> mbeanEnabled
    boolean userStreamRepliesAllEnabled -> userStreamRepliesAllEnabled
    boolean stallWarningsEnabled -> stallWarningsEnabled
    java.lang.String mediaProvider -> mediaProvider
    java.lang.String mediaProviderAPIKey -> mediaProviderAPIKey
    java.util.Properties mediaProviderParameters -> mediaProviderParameters
    java.lang.String clientVersion -> clientVersion
    java.lang.String clientURL -> clientURL
    java.lang.String DALVIK -> DALVIK
    java.lang.String GAE -> GAE
    java.lang.String DEFAULT_OAUTH_REQUEST_TOKEN_URL -> DEFAULT_OAUTH_REQUEST_TOKEN_URL
    java.lang.String DEFAULT_OAUTH_AUTHORIZATION_URL -> DEFAULT_OAUTH_AUTHORIZATION_URL
    java.lang.String DEFAULT_OAUTH_ACCESS_TOKEN_URL -> DEFAULT_OAUTH_ACCESS_TOKEN_URL
    java.lang.String DEFAULT_OAUTH_AUTHENTICATION_URL -> DEFAULT_OAUTH_AUTHENTICATION_URL
    java.lang.String DEFAULT_REST_BASE_URL -> DEFAULT_REST_BASE_URL
    java.lang.String DEFAULT_STREAM_BASE_URL -> DEFAULT_STREAM_BASE_URL
    java.lang.String DEFAULT_USER_STREAM_BASE_URL -> DEFAULT_USER_STREAM_BASE_URL
    java.lang.String DEFAULT_SITE_STREAM_BASE_URL -> DEFAULT_SITE_STREAM_BASE_URL
    boolean IS_DALVIK -> IS_DALVIK
    boolean IS_GAE -> IS_GAE
    long serialVersionUID -> serialVersionUID
    java.lang.String dalvikDetected -> dalvikDetected
    java.lang.String gaeDetected -> gaeDetected
    java.util.Map requestHeaders -> requestHeaders
    java.util.List instances -> instances
    void dumpConfiguration() -> dumpConfiguration
    boolean isDalvik() -> isDalvik
    boolean isGAE() -> isGAE
    boolean isDebugEnabled() -> isDebugEnabled
    void setDebug(boolean) -> setDebug
    java.lang.String getUserAgent() -> getUserAgent
    void setUserAgent(java.lang.String) -> setUserAgent
    java.lang.String getUser() -> getUser
    void setUser(java.lang.String) -> setUser
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    void setUseSSL(boolean) -> setUseSSL
    void setPrettyDebugEnabled(boolean) -> setPrettyDebugEnabled
    void setGZIPEnabled(boolean) -> setGZIPEnabled
    boolean isGZIPEnabled() -> isGZIPEnabled
    void initRequestHeaders() -> initRequestHeaders
    java.util.Map getRequestHeaders() -> getRequestHeaders
    java.lang.String getHttpProxyHost() -> getHttpProxyHost
    void setHttpProxyHost(java.lang.String) -> setHttpProxyHost
    java.lang.String getHttpProxyUser() -> getHttpProxyUser
    void setHttpProxyUser(java.lang.String) -> setHttpProxyUser
    java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    void setHttpProxyPassword(java.lang.String) -> setHttpProxyPassword
    int getHttpProxyPort() -> getHttpProxyPort
    void setHttpProxyPort(int) -> setHttpProxyPort
    int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    void setHttpConnectionTimeout(int) -> setHttpConnectionTimeout
    int getHttpReadTimeout() -> getHttpReadTimeout
    void setHttpReadTimeout(int) -> setHttpReadTimeout
    int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    void setHttpStreamingReadTimeout(int) -> setHttpStreamingReadTimeout
    int getHttpRetryCount() -> getHttpRetryCount
    void setHttpRetryCount(int) -> setHttpRetryCount
    int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    void setHttpRetryIntervalSeconds(int) -> setHttpRetryIntervalSeconds
    int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    void setHttpMaxTotalConnections(int) -> setHttpMaxTotalConnections
    int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    void setHttpDefaultMaxPerRoute(int) -> setHttpDefaultMaxPerRoute
    java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    void setOAuthConsumerKey(java.lang.String) -> setOAuthConsumerKey
    java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    void setOAuthConsumerSecret(java.lang.String) -> setOAuthConsumerSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    void setOAuthAccessToken(java.lang.String) -> setOAuthAccessToken
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    void setOAuthAccessTokenSecret(java.lang.String) -> setOAuthAccessTokenSecret
    int getAsyncNumThreads() -> getAsyncNumThreads
    void setAsyncNumThreads(int) -> setAsyncNumThreads
    long getContributingTo() -> getContributingTo
    void setContributingTo(long) -> setContributingTo
    java.lang.String getClientVersion() -> getClientVersion
    void setClientVersion(java.lang.String) -> setClientVersion
    java.lang.String getClientURL() -> getClientURL
    void setClientURL(java.lang.String) -> setClientURL
    java.lang.String getRestBaseURL() -> getRestBaseURL
    void setRestBaseURL(java.lang.String) -> setRestBaseURL
    void fixRestBaseURL() -> fixRestBaseURL
    java.lang.String getStreamBaseURL() -> getStreamBaseURL
    void setStreamBaseURL(java.lang.String) -> setStreamBaseURL
    java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    void setUserStreamBaseURL(java.lang.String) -> setUserStreamBaseURL
    java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    void setSiteStreamBaseURL(java.lang.String) -> setSiteStreamBaseURL
    java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    void setOAuthRequestTokenURL(java.lang.String) -> setOAuthRequestTokenURL
    java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    void setOAuthAuthorizationURL(java.lang.String) -> setOAuthAuthorizationURL
    java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    void setOAuthAccessTokenURL(java.lang.String) -> setOAuthAccessTokenURL
    java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    void setOAuthAuthenticationURL(java.lang.String) -> setOAuthAuthenticationURL
    java.lang.String getDispatcherImpl() -> getDispatcherImpl
    void setDispatcherImpl(java.lang.String) -> setDispatcherImpl
    java.lang.String getLoggerFactory() -> getLoggerFactory
    boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
    void setLoggerFactory(java.lang.String) -> setLoggerFactory
    void setIncludeRTsEnbled(boolean) -> setIncludeRTsEnbled
    void setIncludeEntitiesEnbled(boolean) -> setIncludeEntitiesEnbled
    boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    void setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    void setJSONStoreEnabled(boolean) -> setJSONStoreEnabled
    boolean isMBeanEnabled() -> isMBeanEnabled
    void setMBeanEnabled(boolean) -> setMBeanEnabled
    boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    void setUserStreamRepliesAllEnabled(boolean) -> setUserStreamRepliesAllEnabled
    boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    void setStallWarningsEnabled(boolean) -> setStallWarningsEnabled
    java.lang.String getMediaProvider() -> getMediaProvider
    void setMediaProvider(java.lang.String) -> setMediaProvider
    java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    void setMediaProviderAPIKey(java.lang.String) -> setMediaProviderAPIKey
    java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    void setMediaProviderParameters(java.util.Properties) -> setMediaProviderParameters
    java.lang.String fixURL(boolean,java.lang.String) -> fixURL
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void cacheInstance(twitter4j.conf.ConfigurationBase) -> cacheInstance
    void cacheInstance() -> cacheInstance
    twitter4j.conf.ConfigurationBase getInstance(twitter4j.conf.ConfigurationBase) -> getInstance
    java.lang.Object readResolve() -> readResolve
twitter4j.conf.ConfigurationBuilder -> twitter4j.conf.ConfigurationBuilder:
    twitter4j.conf.ConfigurationBase configurationBean -> configurationBean
    twitter4j.conf.ConfigurationBuilder setUseSSL(boolean) -> setUseSSL
    twitter4j.conf.ConfigurationBuilder setPrettyDebugEnabled(boolean) -> setPrettyDebugEnabled
    twitter4j.conf.ConfigurationBuilder setGZIPEnabled(boolean) -> setGZIPEnabled
    twitter4j.conf.ConfigurationBuilder setDebugEnabled(boolean) -> setDebugEnabled
    twitter4j.conf.ConfigurationBuilder setUser(java.lang.String) -> setUser
    twitter4j.conf.ConfigurationBuilder setPassword(java.lang.String) -> setPassword
    twitter4j.conf.ConfigurationBuilder setHttpProxyHost(java.lang.String) -> setHttpProxyHost
    twitter4j.conf.ConfigurationBuilder setHttpProxyUser(java.lang.String) -> setHttpProxyUser
    twitter4j.conf.ConfigurationBuilder setHttpProxyPassword(java.lang.String) -> setHttpProxyPassword
    twitter4j.conf.ConfigurationBuilder setHttpProxyPort(int) -> setHttpProxyPort
    twitter4j.conf.ConfigurationBuilder setHttpConnectionTimeout(int) -> setHttpConnectionTimeout
    twitter4j.conf.ConfigurationBuilder setHttpReadTimeout(int) -> setHttpReadTimeout
    twitter4j.conf.ConfigurationBuilder setHttpStreamingReadTimeout(int) -> setHttpStreamingReadTimeout
    twitter4j.conf.ConfigurationBuilder setHttpRetryCount(int) -> setHttpRetryCount
    twitter4j.conf.ConfigurationBuilder setHttpMaxTotalConnections(int) -> setHttpMaxTotalConnections
    twitter4j.conf.ConfigurationBuilder setHttpDefaultMaxPerRoute(int) -> setHttpDefaultMaxPerRoute
    twitter4j.conf.ConfigurationBuilder setHttpRetryIntervalSeconds(int) -> setHttpRetryIntervalSeconds
    twitter4j.conf.ConfigurationBuilder setOAuthConsumerKey(java.lang.String) -> setOAuthConsumerKey
    twitter4j.conf.ConfigurationBuilder setOAuthConsumerSecret(java.lang.String) -> setOAuthConsumerSecret
    twitter4j.conf.ConfigurationBuilder setOAuthAccessToken(java.lang.String) -> setOAuthAccessToken
    twitter4j.conf.ConfigurationBuilder setOAuthAccessTokenSecret(java.lang.String) -> setOAuthAccessTokenSecret
    twitter4j.conf.ConfigurationBuilder setOAuthRequestTokenURL(java.lang.String) -> setOAuthRequestTokenURL
    twitter4j.conf.ConfigurationBuilder setOAuthAuthorizationURL(java.lang.String) -> setOAuthAuthorizationURL
    twitter4j.conf.ConfigurationBuilder setOAuthAccessTokenURL(java.lang.String) -> setOAuthAccessTokenURL
    twitter4j.conf.ConfigurationBuilder setOAuthAuthenticationURL(java.lang.String) -> setOAuthAuthenticationURL
    twitter4j.conf.ConfigurationBuilder setRestBaseURL(java.lang.String) -> setRestBaseURL
    twitter4j.conf.ConfigurationBuilder setStreamBaseURL(java.lang.String) -> setStreamBaseURL
    twitter4j.conf.ConfigurationBuilder setUserStreamBaseURL(java.lang.String) -> setUserStreamBaseURL
    twitter4j.conf.ConfigurationBuilder setSiteStreamBaseURL(java.lang.String) -> setSiteStreamBaseURL
    twitter4j.conf.ConfigurationBuilder setAsyncNumThreads(int) -> setAsyncNumThreads
    twitter4j.conf.ConfigurationBuilder setContributingTo(long) -> setContributingTo
    twitter4j.conf.ConfigurationBuilder setClientVersion(java.lang.String) -> setClientVersion
    twitter4j.conf.ConfigurationBuilder setClientURL(java.lang.String) -> setClientURL
    twitter4j.conf.ConfigurationBuilder setDispatcherImpl(java.lang.String) -> setDispatcherImpl
    twitter4j.conf.ConfigurationBuilder setIncludeRTsEnabled(boolean) -> setIncludeRTsEnabled
    twitter4j.conf.ConfigurationBuilder setIncludeEntitiesEnabled(boolean) -> setIncludeEntitiesEnabled
    twitter4j.conf.ConfigurationBuilder setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    twitter4j.conf.ConfigurationBuilder setJSONStoreEnabled(boolean) -> setJSONStoreEnabled
    twitter4j.conf.ConfigurationBuilder setMBeanEnabled(boolean) -> setMBeanEnabled
    twitter4j.conf.ConfigurationBuilder setUserStreamRepliesAllEnabled(boolean) -> setUserStreamRepliesAllEnabled
    twitter4j.conf.ConfigurationBuilder setMediaProvider(java.lang.String) -> setMediaProvider
    twitter4j.conf.ConfigurationBuilder setMediaProviderAPIKey(java.lang.String) -> setMediaProviderAPIKey
    twitter4j.conf.ConfigurationBuilder setMediaProviderParameters(java.util.Properties) -> setMediaProviderParameters
    twitter4j.conf.ConfigurationBuilder setLoggerImpl(java.lang.String) -> setLoggerImpl
    twitter4j.conf.Configuration build() -> build
    void checkNotBuilt() -> checkNotBuilt
twitter4j.conf.ConfigurationContext -> twitter4j.conf.ConfigurationContext:
    java.lang.String DEFAULT_CONFIGURATION_FACTORY -> DEFAULT_CONFIGURATION_FACTORY
    java.lang.String CONFIGURATION_IMPL -> CONFIGURATION_IMPL
    twitter4j.conf.ConfigurationFactory factory -> factory
    twitter4j.conf.Configuration getInstance() -> getInstance
    twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
twitter4j.conf.ConfigurationFactory -> twitter4j.conf.ConfigurationFactory:
    twitter4j.conf.Configuration getInstance() -> getInstance
    twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
    void dispose() -> dispose
twitter4j.conf.PropertyConfiguration -> twitter4j.conf.PropertyConfiguration:
    java.lang.String DEBUG -> DEBUG
    java.lang.String HTTP_USER_AGENT -> HTTP_USER_AGENT
    java.lang.String USER -> USER
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String HTTP_USE_SSL -> HTTP_USE_SSL
    java.lang.String HTTP_PRETTY_DEBUG -> HTTP_PRETTY_DEBUG
    java.lang.String HTTP_GZIP -> HTTP_GZIP
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_PROXY_HOST_FALLBACK -> HTTP_PROXY_HOST_FALLBACK
    java.lang.String HTTP_PROXY_USER -> HTTP_PROXY_USER
    java.lang.String HTTP_PROXY_PASSWORD -> HTTP_PROXY_PASSWORD
    java.lang.String HTTP_PROXY_PORT -> HTTP_PROXY_PORT
    java.lang.String HTTP_PROXY_PORT_FALLBACK -> HTTP_PROXY_PORT_FALLBACK
    java.lang.String HTTP_CONNECTION_TIMEOUT -> HTTP_CONNECTION_TIMEOUT
    java.lang.String HTTP_READ_TIMEOUT -> HTTP_READ_TIMEOUT
    java.lang.String HTTP_STREAMING_READ_TIMEOUT -> HTTP_STREAMING_READ_TIMEOUT
    java.lang.String HTTP_RETRY_COUNT -> HTTP_RETRY_COUNT
    java.lang.String HTTP_RETRY_INTERVAL_SECS -> HTTP_RETRY_INTERVAL_SECS
    java.lang.String HTTP_MAX_TOTAL_CONNECTIONS -> HTTP_MAX_TOTAL_CONNECTIONS
    java.lang.String HTTP_DEFAULT_MAX_PER_ROUTE -> HTTP_DEFAULT_MAX_PER_ROUTE
    java.lang.String OAUTH_CONSUMER_KEY -> OAUTH_CONSUMER_KEY
    java.lang.String OAUTH_CONSUMER_SECRET -> OAUTH_CONSUMER_SECRET
    java.lang.String OAUTH_ACCESS_TOKEN -> OAUTH_ACCESS_TOKEN
    java.lang.String OAUTH_ACCESS_TOKEN_SECRET -> OAUTH_ACCESS_TOKEN_SECRET
    java.lang.String OAUTH_REQUEST_TOKEN_URL -> OAUTH_REQUEST_TOKEN_URL
    java.lang.String OAUTH_AUTHORIZATION_URL -> OAUTH_AUTHORIZATION_URL
    java.lang.String OAUTH_ACCESS_TOKEN_URL -> OAUTH_ACCESS_TOKEN_URL
    java.lang.String OAUTH_AUTHENTICATION_URL -> OAUTH_AUTHENTICATION_URL
    java.lang.String REST_BASE_URL -> REST_BASE_URL
    java.lang.String STREAM_BASE_URL -> STREAM_BASE_URL
    java.lang.String USER_STREAM_BASE_URL -> USER_STREAM_BASE_URL
    java.lang.String SITE_STREAM_BASE_URL -> SITE_STREAM_BASE_URL
    java.lang.String ASYNC_NUM_THREADS -> ASYNC_NUM_THREADS
    java.lang.String CONTRIBUTING_TO -> CONTRIBUTING_TO
    java.lang.String ASYNC_DISPATCHER_IMPL -> ASYNC_DISPATCHER_IMPL
    java.lang.String INCLUDE_RTS -> INCLUDE_RTS
    java.lang.String INCLUDE_ENTITIES -> INCLUDE_ENTITIES
    java.lang.String INCLUDE_MY_RETWEET -> INCLUDE_MY_RETWEET
    java.lang.String LOGGER_FACTORY -> LOGGER_FACTORY
    java.lang.String JSON_STORE_ENABLED -> JSON_STORE_ENABLED
    java.lang.String MBEAN_ENABLED -> MBEAN_ENABLED
    java.lang.String STREAM_USER_REPLIES_ALL -> STREAM_USER_REPLIES_ALL
    java.lang.String STREAM_STALL_WARNINGS_ENABLED -> STREAM_STALL_WARNINGS_ENABLED
    java.lang.String MEDIA_PROVIDER -> MEDIA_PROVIDER
    java.lang.String MEDIA_PROVIDER_API_KEY -> MEDIA_PROVIDER_API_KEY
    java.lang.String MEDIA_PROVIDER_PARAMETERS -> MEDIA_PROVIDER_PARAMETERS
    java.lang.String CLIENT_VERSION -> CLIENT_VERSION
    java.lang.String CLIENT_URL -> CLIENT_URL
    long serialVersionUID -> serialVersionUID
    boolean notNull(java.util.Properties,java.lang.String,java.lang.String) -> notNull
    boolean loadProperties(java.util.Properties,java.lang.String) -> loadProperties
    boolean loadProperties(java.util.Properties,java.io.InputStream) -> loadProperties
    void normalize(java.util.Properties) -> normalize
    void setFieldsWithTreePath(java.util.Properties,java.lang.String) -> setFieldsWithTreePath
    void setFieldsWithPrefix(java.util.Properties,java.lang.String) -> setFieldsWithPrefix
    boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String) -> getBoolean
    int getIntProperty(java.util.Properties,java.lang.String,java.lang.String) -> getIntProperty
    long getLongProperty(java.util.Properties,java.lang.String,java.lang.String) -> getLongProperty
    java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String) -> getString
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    java.lang.String getMediaProvider() -> getMediaProvider
    boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    boolean isMBeanEnabled() -> isMBeanEnabled
    boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    void setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
    boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    java.lang.String getLoggerFactory() -> getLoggerFactory
    java.lang.String getDispatcherImpl() -> getDispatcherImpl
    java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    java.lang.String getStreamBaseURL() -> getStreamBaseURL
    java.lang.String getRestBaseURL() -> getRestBaseURL
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    java.util.Map getRequestHeaders() -> getRequestHeaders
    boolean isGZIPEnabled() -> isGZIPEnabled
    boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    boolean isGAE() -> isGAE
    void dumpConfiguration() -> dumpConfiguration
twitter4j.conf.PropertyConfigurationFactory -> twitter4j.conf.PropertyConfigurationFactory:
    twitter4j.conf.PropertyConfiguration ROOT_CONFIGURATION -> ROOT_CONFIGURATION
    twitter4j.conf.Configuration getInstance() -> getInstance
    twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
    void dispose() -> dispose
twitter4j.internal.async.Dispatcher -> twitter4j.internal.async.Dispatcher:
    void invokeLater(java.lang.Runnable) -> invokeLater
    void shutdown() -> shutdown
twitter4j.internal.async.DispatcherFactory -> twitter4j.internal.async.DispatcherFactory:
    java.lang.String dispatcherImpl -> dispatcherImpl
    twitter4j.conf.Configuration conf -> conf
    twitter4j.internal.async.Dispatcher getInstance() -> getInstance
twitter4j.internal.async.DispatcherImpl -> twitter4j.internal.async.DispatcherImpl:
    twitter4j.internal.async.ExecuteThread[] threads -> threads
    java.util.List q -> q
    java.lang.Object ticket -> ticket
    boolean active -> active
    void invokeLater(java.lang.Runnable) -> invokeLater
    java.lang.Runnable poll() -> poll
    void shutdown() -> shutdown
    boolean access$000(twitter4j.internal.async.DispatcherImpl) -> access$000
twitter4j.internal.async.DispatcherImpl$1 -> twitter4j.internal.async.DispatcherImpl$1:
    twitter4j.internal.async.DispatcherImpl this$0 -> this$0
    void run() -> run
twitter4j.internal.async.ExecuteThread -> twitter4j.internal.async.ExecuteThread:
    twitter4j.internal.logging.Logger logger -> logger
    twitter4j.internal.async.DispatcherImpl q -> q
    boolean alive -> alive
    void shutdown() -> shutdown
    void run() -> run
twitter4j.internal.http.BASE64Encoder -> twitter4j.internal.http.BASE64Encoder:
    char last2byte -> last2byte
    char last4byte -> last4byte
    char last6byte -> last6byte
    char lead6byte -> lead6byte
    char lead4byte -> lead4byte
    char lead2byte -> lead2byte
    char[] encodeTable -> encodeTable
    java.lang.String encode(byte[]) -> encode
twitter4j.internal.http.HttpClient -> twitter4j.internal.http.HttpClient:
    twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    void shutdown() -> shutdown
twitter4j.internal.http.HttpClientBase -> twitter4j.internal.http.HttpClientBase:
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpClientConfiguration CONF -> CONF
    void shutdown() -> shutdown
    boolean isProxyConfigured() -> isProxyConfigured
    void write(java.io.DataOutputStream,java.lang.String) -> write
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.http.HttpClientConfiguration -> twitter4j.internal.http.HttpClientConfiguration:
    java.lang.String getHttpProxyHost() -> getHttpProxyHost
    int getHttpProxyPort() -> getHttpProxyPort
    java.lang.String getHttpProxyUser() -> getHttpProxyUser
    java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    int getHttpReadTimeout() -> getHttpReadTimeout
    int getHttpRetryCount() -> getHttpRetryCount
    int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    boolean isGZIPEnabled() -> isGZIPEnabled
twitter4j.internal.http.HttpClientFactory -> twitter4j.internal.http.HttpClientFactory:
    java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR -> HTTP_CLIENT_CONSTRUCTOR
    java.lang.String HTTP_CLIENT_IMPLEMENTATION -> HTTP_CLIENT_IMPLEMENTATION
    twitter4j.internal.http.HttpClient getInstance(twitter4j.internal.http.HttpClientConfiguration) -> getInstance
twitter4j.internal.http.HttpClientImpl -> twitter4j.internal.http.HttpClientImpl:
    twitter4j.internal.logging.Logger logger -> logger
    boolean isJDK14orEarlier -> isJDK14orEarlier
    long serialVersionUID -> serialVersionUID
    java.util.Map instanceMap -> instanceMap
    twitter4j.internal.http.HttpClient getInstance(twitter4j.internal.http.HttpClientConfiguration) -> getInstance
    twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    void setHeaders(twitter4j.internal.http.HttpRequest,java.net.HttpURLConnection) -> setHeaders
    java.net.HttpURLConnection getConnection(java.lang.String) -> getConnection
twitter4j.internal.http.HttpClientImpl$1 -> twitter4j.internal.http.HttpClientImpl$1:
    twitter4j.internal.http.HttpClientImpl this$0 -> this$0
    java.net.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
twitter4j.internal.http.HttpClientWrapper -> twitter4j.internal.http.HttpClientWrapper:
    twitter4j.internal.http.HttpClientWrapperConfiguration wrapperConf -> wrapperConf
    twitter4j.internal.http.HttpClient http -> http
    java.util.Map requestHeaders -> requestHeaders
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpResponseListener httpResponseListener -> httpResponseListener
    void shutdown() -> shutdown
    twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    void setHttpResponseListener(twitter4j.internal.http.HttpResponseListener) -> setHttpResponseListener
    twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> get
    twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> get
    twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.auth.Authorization) -> get
    twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> post
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],java.util.Map) -> post
    twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.auth.Authorization) -> post
    twitter4j.internal.http.HttpResponse post(java.lang.String) -> post
    twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> delete
    twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> delete
    twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.auth.Authorization) -> delete
    twitter4j.internal.http.HttpResponse delete(java.lang.String) -> delete
    twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> head
    twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> head
    twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.auth.Authorization) -> head
    twitter4j.internal.http.HttpResponse head(java.lang.String) -> head
    twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> put
    twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> put
    twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.auth.Authorization) -> put
    twitter4j.internal.http.HttpResponse put(java.lang.String) -> put
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.http.HttpClientWrapperConfiguration -> twitter4j.internal.http.HttpClientWrapperConfiguration:
    java.util.Map getRequestHeaders() -> getRequestHeaders
twitter4j.internal.http.HttpParameter -> twitter4j.internal.http.HttpParameter:
    java.lang.String name -> name
    java.lang.String value -> value
    java.io.File file -> file
    java.io.InputStream fileBody -> fileBody
    long serialVersionUID -> serialVersionUID
    java.lang.String JPEG -> JPEG
    java.lang.String GIF -> GIF
    java.lang.String PNG -> PNG
    java.lang.String OCTET -> OCTET
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.io.File getFile() -> getFile
    java.io.InputStream getFileBody() -> getFileBody
    boolean isFile() -> isFile
    boolean hasFileBody() -> hasFileBody
    java.lang.String getContentType() -> getContentType
    boolean equals(java.lang.Object) -> equals
    boolean containsFile(twitter4j.internal.http.HttpParameter[]) -> containsFile
    boolean containsFile(java.util.List) -> containsFile
    twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String) -> getParameterArray
    twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,int) -> getParameterArray
    twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getParameterArray
    twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,int,java.lang.String,int) -> getParameterArray
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String encodeParameters(twitter4j.internal.http.HttpParameter[]) -> encodeParameters
    java.lang.String encode(java.lang.String) -> encode
twitter4j.internal.http.HttpRequest -> twitter4j.internal.http.HttpRequest:
    twitter4j.internal.http.RequestMethod method -> method
    java.lang.String url -> url
    twitter4j.internal.http.HttpParameter[] parameters -> parameters
    twitter4j.auth.Authorization authorization -> authorization
    java.util.Map requestHeaders -> requestHeaders
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpParameter[] NULL_PARAMETERS -> NULL_PARAMETERS
    twitter4j.internal.http.RequestMethod getMethod() -> getMethod
    twitter4j.internal.http.HttpParameter[] getParameters() -> getParameters
    java.lang.String getURL() -> getURL
    twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    java.util.Map getRequestHeaders() -> getRequestHeaders
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponse -> twitter4j.internal.http.HttpResponse:
    twitter4j.internal.logging.Logger logger -> logger
    twitter4j.internal.http.HttpClientConfiguration CONF -> CONF
    int statusCode -> statusCode
    java.lang.String responseAsString -> responseAsString
    java.io.InputStream is -> is
    boolean streamConsumed -> streamConsumed
    twitter4j.internal.org.json.JSONObject json -> json
    twitter4j.internal.org.json.JSONArray jsonArray -> jsonArray
    int getStatusCode() -> getStatusCode
    java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    java.util.Map getResponseHeaderFields() -> getResponseHeaderFields
    java.io.InputStream asStream() -> asStream
    java.lang.String asString() -> asString
    twitter4j.internal.org.json.JSONObject asJSONObject() -> asJSONObject
    twitter4j.internal.org.json.JSONArray asJSONArray() -> asJSONArray
    java.io.Reader asReader() -> asReader
    void disconnectForcibly() -> disconnectForcibly
    void disconnect() -> disconnect
    java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponseCode -> twitter4j.internal.http.HttpResponseCode:
    int OK -> OK
    int MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    int FOUND -> FOUND
    int NOT_MODIFIED -> NOT_MODIFIED
    int BAD_REQUEST -> BAD_REQUEST
    int UNAUTHORIZED -> UNAUTHORIZED
    int FORBIDDEN -> FORBIDDEN
    int NOT_FOUND -> NOT_FOUND
    int NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    int ENHANCE_YOUR_CLAIM -> ENHANCE_YOUR_CLAIM
    int UNPROCESSABLE_ENTITY -> UNPROCESSABLE_ENTITY
    int TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int BAD_GATEWAY -> BAD_GATEWAY
    int SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    int GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
twitter4j.internal.http.HttpResponseEvent -> twitter4j.internal.http.HttpResponseEvent:
    twitter4j.internal.http.HttpRequest request -> request
    twitter4j.internal.http.HttpResponse response -> response
    twitter4j.TwitterException twitterException -> twitterException
    twitter4j.internal.http.HttpRequest getRequest() -> getRequest
    twitter4j.internal.http.HttpResponse getResponse() -> getResponse
    twitter4j.TwitterException getTwitterException() -> getTwitterException
    boolean isAuthenticated() -> isAuthenticated
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponseImpl -> twitter4j.internal.http.HttpResponseImpl:
    java.net.HttpURLConnection con -> con
    java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    java.util.Map getResponseHeaderFields() -> getResponseHeaderFields
    void disconnect() -> disconnect
twitter4j.internal.http.HttpResponseListener -> twitter4j.internal.http.HttpResponseListener:
    void httpResponseReceived(twitter4j.internal.http.HttpResponseEvent) -> httpResponseReceived
twitter4j.internal.http.RequestMethod -> twitter4j.internal.http.RequestMethod:
    twitter4j.internal.http.RequestMethod GET -> GET
    twitter4j.internal.http.RequestMethod POST -> POST
    twitter4j.internal.http.RequestMethod DELETE -> DELETE
    twitter4j.internal.http.RequestMethod HEAD -> HEAD
    twitter4j.internal.http.RequestMethod PUT -> PUT
    twitter4j.internal.http.RequestMethod[] $VALUES -> $VALUES
    twitter4j.internal.http.RequestMethod[] values() -> values
    twitter4j.internal.http.RequestMethod valueOf(java.lang.String) -> valueOf
twitter4j.internal.http.StreamingGZIPInputStream -> twitter4j.internal.http.StreamingGZIPInputStream:
    java.io.InputStream wrapped -> wrapped
    int available() -> available
twitter4j.internal.http.XAuthAuthorization -> twitter4j.internal.http.XAuthAuthorization:
    twitter4j.auth.BasicAuthorization basic -> basic
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    long serialVersionUID -> serialVersionUID
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    java.lang.String getUserId() -> getUserId
    java.lang.String getPassword() -> getPassword
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    boolean isEnabled() -> isEnabled
twitter4j.internal.json.AccountSettingsJSONImpl -> twitter4j.internal.json.AccountSettingsJSONImpl:
    long serialVersionUID -> serialVersionUID
    boolean SLEEP_TIME_ENABLED -> SLEEP_TIME_ENABLED
    java.lang.String SLEEP_START_TIME -> SLEEP_START_TIME
    java.lang.String SLEEP_END_TIME -> SLEEP_END_TIME
    twitter4j.Location[] TREND_LOCATION -> TREND_LOCATION
    boolean GEO_ENABLED -> GEO_ENABLED
    java.lang.String LANGUAGE -> LANGUAGE
    twitter4j.TimeZone TIMEZONE -> TIMEZONE
    boolean ALWAYS_USE_HTTPS -> ALWAYS_USE_HTTPS
    boolean DISCOVERABLE_BY_EMAIL -> DISCOVERABLE_BY_EMAIL
    boolean isSleepTimeEnabled() -> isSleepTimeEnabled
    java.lang.String getSleepStartTime() -> getSleepStartTime
    java.lang.String getSleepEndTime() -> getSleepEndTime
    twitter4j.Location[] getTrendLocations() -> getTrendLocations
    boolean isGeoEnabled() -> isGeoEnabled
    boolean isDiscoverableByEmail() -> isDiscoverableByEmail
    boolean isAlwaysUseHttps() -> isAlwaysUseHttps
    java.lang.String getLanguage() -> getLanguage
    twitter4j.TimeZone getTimeZone() -> getTimeZone
twitter4j.internal.json.AccountTotalsJSONImpl -> twitter4j.internal.json.AccountTotalsJSONImpl:
    long serialVersionUID -> serialVersionUID
    int updates -> updates
    int followers -> followers
    int favorites -> favorites
    int friends -> friends
    int getUpdates() -> getUpdates
    int getFollowers() -> getFollowers
    int getFavorites() -> getFavorites
    int getFriends() -> getFriends
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.CategoryJSONImpl -> twitter4j.internal.json.CategoryJSONImpl:
    java.lang.String name -> name
    java.lang.String slug -> slug
    int size -> size
    long serialVersionUID -> serialVersionUID
    void init(twitter4j.internal.org.json.JSONObject) -> init
    twitter4j.ResponseList createCategoriesList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createCategoriesList
    twitter4j.ResponseList createCategoriesList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createCategoriesList
    java.lang.String getName() -> getName
    java.lang.String getSlug() -> getSlug
    int getSize() -> getSize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.DataObjectFactoryUtil -> twitter4j.internal.json.DataObjectFactoryUtil:
    java.lang.reflect.Method CLEAR_THREAD_LOCAL_MAP -> CLEAR_THREAD_LOCAL_MAP
    java.lang.reflect.Method REGISTER_JSON_OBJECT -> REGISTER_JSON_OBJECT
    void clearThreadLocalMap() -> clearThreadLocalMap
    java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object) -> registerJSONObject
twitter4j.internal.json.DirectMessageJSONImpl -> twitter4j.internal.json.DirectMessageJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String text -> text
    long senderId -> senderId
    long recipientId -> recipientId
    java.util.Date createdAt -> createdAt
    java.lang.String senderScreenName -> senderScreenName
    java.lang.String recipientScreenName -> recipientScreenName
    twitter4j.UserMentionEntity[] userMentionEntities -> userMentionEntities
    twitter4j.URLEntity[] urlEntities -> urlEntities
    twitter4j.HashtagEntity[] hashtagEntities -> hashtagEntities
    twitter4j.MediaEntity[] mediaEntities -> mediaEntities
    twitter4j.User sender -> sender
    twitter4j.User recipient -> recipient
    void init(twitter4j.internal.org.json.JSONObject) -> init
    long getId() -> getId
    java.lang.String getText() -> getText
    long getSenderId() -> getSenderId
    long getRecipientId() -> getRecipientId
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getSenderScreenName() -> getSenderScreenName
    java.lang.String getRecipientScreenName() -> getRecipientScreenName
    twitter4j.User getSender() -> getSender
    twitter4j.User getRecipient() -> getRecipient
    twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
    twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createDirectMessageList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
twitter4j.internal.json.EntityIndex -> twitter4j.internal.json.EntityIndex:
    long serialVersionUID -> serialVersionUID
    int start -> start
    int end -> end
    int compareTo(twitter4j.internal.json.EntityIndex) -> compareTo
    void setStart(int) -> setStart
    void setEnd(int) -> setEnd
    int getStart() -> getStart
    int getEnd() -> getEnd
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.FriendshipJSONImpl -> twitter4j.internal.json.FriendshipJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    boolean following -> following
    boolean followedBy -> followedBy
    twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createFriendshipList
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    boolean isFollowing() -> isFollowing
    boolean isFollowedBy() -> isFollowedBy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.HTMLEntity -> twitter4j.internal.json.HTMLEntity:
    java.util.Map entityEscapeMap -> entityEscapeMap
    java.util.Map escapeEntityMap -> escapeEntityMap
    java.lang.String escape(java.lang.String) -> escape
    void escape(java.lang.StringBuilder) -> escape
    java.lang.String unescape(java.lang.String) -> unescape
    void unescape(java.lang.StringBuilder) -> unescape
    java.lang.String unescapeAndSlideEntityIncdices(java.lang.String,twitter4j.UserMentionEntity[],twitter4j.URLEntity[],twitter4j.HashtagEntity[],twitter4j.MediaEntity[]) -> unescapeAndSlideEntityIncdices
twitter4j.internal.json.HashtagEntityJSONImpl -> twitter4j.internal.json.HashtagEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String text -> text
    void init(twitter4j.internal.org.json.JSONObject) -> init
    java.lang.String getText() -> getText
    int getStart() -> getStart
    int getEnd() -> getEnd
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.IDsJSONImpl -> twitter4j.internal.json.IDsJSONImpl:
    long[] ids -> ids
    long previousCursor -> previousCursor
    long nextCursor -> nextCursor
    long serialVersionUID -> serialVersionUID
    void init(java.lang.String) -> init
    long[] getIDs() -> getIDs
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.LanguageJSONImpl -> twitter4j.internal.json.LanguageJSONImpl:
    java.lang.String name -> name
    java.lang.String code -> code
    java.lang.String status -> status
    void init(twitter4j.internal.org.json.JSONObject) -> init
    java.lang.String getName() -> getName
    java.lang.String getCode() -> getCode
    java.lang.String getStatus() -> getStatus
    twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLanguageList
    twitter4j.ResponseList createLanguageList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLanguageList
twitter4j.internal.json.LocationJSONImpl -> twitter4j.internal.json.LocationJSONImpl:
    int woeid -> woeid
    java.lang.String countryName -> countryName
    java.lang.String countryCode -> countryCode
    java.lang.String placeName -> placeName
    int placeCode -> placeCode
    java.lang.String name -> name
    java.lang.String url -> url
    long serialVersionUID -> serialVersionUID
    twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLocationList
    twitter4j.ResponseList createLocationList(twitter4j.internal.org.json.JSONArray,boolean) -> createLocationList
    int getWoeid() -> getWoeid
    java.lang.String getCountryName() -> getCountryName
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getPlaceName() -> getPlaceName
    int getPlaceCode() -> getPlaceCode
    java.lang.String getName() -> getName
    java.lang.String getURL() -> getURL
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.MediaEntityJSONImpl -> twitter4j.internal.json.MediaEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String url -> url
    java.lang.String mediaURL -> mediaURL
    java.lang.String mediaURLHttps -> mediaURLHttps
    java.lang.String expandedURL -> expandedURL
    java.lang.String displayURL -> displayURL
    java.util.Map sizes -> sizes
    java.lang.String type -> type
    void addMediaEntitySizeIfNotNull(java.util.Map,twitter4j.internal.org.json.JSONObject,java.lang.Integer,java.lang.String) -> addMediaEntitySizeIfNotNull
    long getId() -> getId
    java.lang.String getMediaURL() -> getMediaURL
    java.lang.String getMediaURLHttps() -> getMediaURLHttps
    java.lang.String getURL() -> getURL
    java.lang.String getDisplayURL() -> getDisplayURL
    java.lang.String getExpandedURL() -> getExpandedURL
    java.util.Map getSizes() -> getSizes
    java.lang.String getType() -> getType
    int getStart() -> getStart
    int getEnd() -> getEnd
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(twitter4j.internal.json.EntityIndex) -> compareTo
twitter4j.internal.json.MediaEntityJSONImpl$Size -> twitter4j.internal.json.MediaEntityJSONImpl$Size:
    long serialVersionUID -> serialVersionUID
    int width -> width
    int height -> height
    int resize -> resize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getResize() -> getResize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.OEmbedJSONImpl -> twitter4j.internal.json.OEmbedJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String html -> html
    java.lang.String authorName -> authorName
    java.lang.String url -> url
    java.lang.String version -> version
    long cacheAge -> cacheAge
    java.lang.String authorURL -> authorURL
    int width -> width
    void init(twitter4j.internal.org.json.JSONObject) -> init
    java.lang.String getHtml() -> getHtml
    java.lang.String getAuthorName() -> getAuthorName
    java.lang.String getURL() -> getURL
    java.lang.String getVersion() -> getVersion
    long getCacheAge() -> getCacheAge
    java.lang.String getAuthorURL() -> getAuthorURL
    int getWidth() -> getWidth
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getAccessLevel() -> getAccessLevel
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.internal.json.PagableResponseListImpl -> twitter4j.internal.json.PagableResponseListImpl:
    long previousCursor -> previousCursor
    long nextCursor -> nextCursor
    long serialVersionUID -> serialVersionUID
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.internal.json.PlaceJSONImpl -> twitter4j.internal.json.PlaceJSONImpl:
    java.lang.String name -> name
    java.lang.String streetAddress -> streetAddress
    java.lang.String countryCode -> countryCode
    java.lang.String id -> id
    java.lang.String country -> country
    java.lang.String placeType -> placeType
    java.lang.String url -> url
    java.lang.String fullName -> fullName
    java.lang.String boundingBoxType -> boundingBoxType
    twitter4j.GeoLocation[][] boundingBoxCoordinates -> boundingBoxCoordinates
    java.lang.String geometryType -> geometryType
    twitter4j.GeoLocation[][] geometryCoordinates -> geometryCoordinates
    twitter4j.Place[] containedWithIn -> containedWithIn
    long serialVersionUID -> serialVersionUID
    void init(twitter4j.internal.org.json.JSONObject) -> init
    int compareTo(twitter4j.Place) -> compareTo
    twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPlaceList
    twitter4j.ResponseList createPlaceList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPlaceList
    java.lang.String getName() -> getName
    java.lang.String getStreetAddress() -> getStreetAddress
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getId() -> getId
    java.lang.String getCountry() -> getCountry
    java.lang.String getPlaceType() -> getPlaceType
    java.lang.String getURL() -> getURL
    java.lang.String getFullName() -> getFullName
    java.lang.String getBoundingBoxType() -> getBoundingBoxType
    twitter4j.GeoLocation[][] getBoundingBoxCoordinates() -> getBoundingBoxCoordinates
    java.lang.String getGeometryType() -> getGeometryType
    twitter4j.GeoLocation[][] getGeometryCoordinates() -> getGeometryCoordinates
    twitter4j.Place[] getContainedWithIn() -> getContainedWithIn
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.QueryResultJSONImpl -> twitter4j.internal.json.QueryResultJSONImpl:
    long serialVersionUID -> serialVersionUID
    long sinceId -> sinceId
    long maxId -> maxId
    java.lang.String refreshUrl -> refreshUrl
    int count -> count
    double completedIn -> completedIn
    java.lang.String query -> query
    java.util.List tweets -> tweets
    java.lang.String nextResults -> nextResults
    java.lang.reflect.Method queryFactoryMethod -> queryFactoryMethod
    long getSinceId() -> getSinceId
    long getMaxId() -> getMaxId
    java.lang.String getRefreshUrl() -> getRefreshUrl
    java.lang.String getRefreshURL() -> getRefreshURL
    int getCount() -> getCount
    double getCompletedIn() -> getCompletedIn
    java.lang.String getQuery() -> getQuery
    java.util.List getTweets() -> getTweets
    twitter4j.Query nextQuery() -> nextQuery
    boolean hasNext() -> hasNext
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.RateLimitStatusJSONImpl -> twitter4j.internal.json.RateLimitStatusJSONImpl:
    long serialVersionUID -> serialVersionUID
    int remaining -> remaining
    int limit -> limit
    int resetTimeInSeconds -> resetTimeInSeconds
    int secondsUntilReset -> secondsUntilReset
    java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createRateLimitStatuses
    java.util.Map createRateLimitStatuses(twitter4j.internal.org.json.JSONObject) -> createRateLimitStatuses
    void init(twitter4j.internal.org.json.JSONObject) -> init
    twitter4j.RateLimitStatus createFromResponseHeader(twitter4j.internal.http.HttpResponse) -> createFromResponseHeader
    int getRemaining() -> getRemaining
    int getRemainingHits() -> getRemainingHits
    int getLimit() -> getLimit
    int getResetTimeInSeconds() -> getResetTimeInSeconds
    int getSecondsUntilReset() -> getSecondsUntilReset
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.RelatedResultsJSONImpl -> twitter4j.internal.json.RelatedResultsJSONImpl:
    java.lang.String TWEETS_WITH_CONVERSATION -> TWEETS_WITH_CONVERSATION
    java.lang.String TWEETS_WITH_REPLY -> TWEETS_WITH_REPLY
    java.lang.String TWEETS_FROM_USER -> TWEETS_FROM_USER
    long serialVersionUID -> serialVersionUID
    java.util.Map tweetsMap -> tweetsMap
    void init(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,boolean) -> init
    twitter4j.ResponseList getTweetsWithConversation() -> getTweetsWithConversation
    twitter4j.ResponseList getTweetsWithReply() -> getTweetsWithReply
    twitter4j.ResponseList getTweetsFromUser() -> getTweetsFromUser
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
twitter4j.internal.json.RelationshipJSONImpl -> twitter4j.internal.json.RelationshipJSONImpl:
    long serialVersionUID -> serialVersionUID
    long targetUserId -> targetUserId
    java.lang.String targetUserScreenName -> targetUserScreenName
    boolean sourceBlockingTarget -> sourceBlockingTarget
    boolean sourceNotificationsEnabled -> sourceNotificationsEnabled
    boolean sourceFollowingTarget -> sourceFollowingTarget
    boolean sourceFollowedByTarget -> sourceFollowedByTarget
    long sourceUserId -> sourceUserId
    java.lang.String sourceUserScreenName -> sourceUserScreenName
    boolean wantRetweets -> wantRetweets
    twitter4j.ResponseList createRelationshipList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createRelationshipList
    long getSourceUserId() -> getSourceUserId
    long getTargetUserId() -> getTargetUserId
    boolean isSourceBlockingTarget() -> isSourceBlockingTarget
    java.lang.String getSourceUserScreenName() -> getSourceUserScreenName
    java.lang.String getTargetUserScreenName() -> getTargetUserScreenName
    boolean isSourceFollowingTarget() -> isSourceFollowingTarget
    boolean isTargetFollowingSource() -> isTargetFollowingSource
    boolean isSourceFollowedByTarget() -> isSourceFollowedByTarget
    boolean isTargetFollowedBySource() -> isTargetFollowedBySource
    boolean isSourceNotificationsEnabled() -> isSourceNotificationsEnabled
    boolean isSourceWantRetweets() -> isSourceWantRetweets
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.ResponseListImpl -> twitter4j.internal.json.ResponseListImpl:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    int accessLevel -> accessLevel
    long serialVersionUID -> serialVersionUID
    void init(twitter4j.internal.http.HttpResponse) -> init
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    int getAccessLevel() -> getAccessLevel
twitter4j.internal.json.SavedSearchJSONImpl -> twitter4j.internal.json.SavedSearchJSONImpl:
    java.util.Date createdAt -> createdAt
    java.lang.String query -> query
    int position -> position
    java.lang.String name -> name
    int id -> id
    long serialVersionUID -> serialVersionUID
    twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createSavedSearchList
    void init(twitter4j.internal.org.json.JSONObject) -> init
    int compareTo(twitter4j.SavedSearch) -> compareTo
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getQuery() -> getQuery
    int getPosition() -> getPosition
    java.lang.String getName() -> getName
    int getId() -> getId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.SimilarPlacesImpl -> twitter4j.internal.json.SimilarPlacesImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String token -> token
    java.lang.String getToken() -> getToken
    twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createSimilarPlaces
    int getAccessLevel() -> getAccessLevel
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.internal.json.StatusJSONImpl -> twitter4j.internal.json.StatusJSONImpl:
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    java.util.Date createdAt -> createdAt
    long id -> id
    java.lang.String text -> text
    java.lang.String source -> source
    boolean isTruncated -> isTruncated
    long inReplyToStatusId -> inReplyToStatusId
    long inReplyToUserId -> inReplyToUserId
    boolean isFavorited -> isFavorited
    java.lang.String inReplyToScreenName -> inReplyToScreenName
    twitter4j.GeoLocation geoLocation -> geoLocation
    twitter4j.Place place -> place
    long retweetCount -> retweetCount
    boolean isPossiblySensitive -> isPossiblySensitive
    long[] contributorsIDs -> contributorsIDs
    twitter4j.Status retweetedStatus -> retweetedStatus
    twitter4j.UserMentionEntity[] userMentionEntities -> userMentionEntities
    twitter4j.URLEntity[] urlEntities -> urlEntities
    twitter4j.HashtagEntity[] hashtagEntities -> hashtagEntities
    twitter4j.MediaEntity[] mediaEntities -> mediaEntities
    long currentUserRetweetId -> currentUserRetweetId
    twitter4j.User user -> user
    void init(twitter4j.internal.org.json.JSONObject) -> init
    int compareTo(twitter4j.Status) -> compareTo
    java.util.Date getCreatedAt() -> getCreatedAt
    long getId() -> getId
    java.lang.String getText() -> getText
    java.lang.String getSource() -> getSource
    boolean isTruncated() -> isTruncated
    long getInReplyToStatusId() -> getInReplyToStatusId
    long getInReplyToUserId() -> getInReplyToUserId
    java.lang.String getInReplyToScreenName() -> getInReplyToScreenName
    twitter4j.GeoLocation getGeoLocation() -> getGeoLocation
    twitter4j.Place getPlace() -> getPlace
    long[] getContributors() -> getContributors
    boolean isFavorited() -> isFavorited
    twitter4j.User getUser() -> getUser
    boolean isRetweet() -> isRetweet
    twitter4j.Status getRetweetedStatus() -> getRetweetedStatus
    long getRetweetCount() -> getRetweetCount
    boolean isRetweetedByMe() -> isRetweetedByMe
    long getCurrentUserRetweetId() -> getCurrentUserRetweetId
    boolean isPossiblySensitive() -> isPossiblySensitive
    twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
    twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createStatusList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.TimeZoneJSONImpl -> twitter4j.internal.json.TimeZoneJSONImpl:
    java.lang.String NAME -> NAME
    java.lang.String TZINFO_NAME -> TZINFO_NAME
    int UTC_OFFSET -> UTC_OFFSET
    java.lang.String getName() -> getName
    java.lang.String tzinfoName() -> tzinfoName
    int utcOffset() -> utcOffset
twitter4j.internal.json.TrendJSONImpl -> twitter4j.internal.json.TrendJSONImpl:
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String query -> query
    long serialVersionUID -> serialVersionUID
    java.lang.String getName() -> getName
    java.lang.String getUrl() -> getUrl
    java.lang.String getURL() -> getURL
    java.lang.String getQuery() -> getQuery
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.TrendsJSONImpl -> twitter4j.internal.json.TrendsJSONImpl:
    java.util.Date asOf -> asOf
    java.util.Date trendAt -> trendAt
    twitter4j.Trend[] trends -> trends
    twitter4j.Location location -> location
    long serialVersionUID -> serialVersionUID
    int compareTo(twitter4j.Trends) -> compareTo
    void init(java.lang.String,boolean) -> init
    twitter4j.ResponseList createTrendsList(twitter4j.internal.http.HttpResponse,boolean) -> createTrendsList
    twitter4j.Location extractLocation(twitter4j.internal.org.json.JSONObject,boolean) -> extractLocation
    twitter4j.Trend[] jsonArrayToTrendArray(twitter4j.internal.org.json.JSONArray,boolean) -> jsonArrayToTrendArray
    twitter4j.Trend[] getTrends() -> getTrends
    twitter4j.Location getLocation() -> getLocation
    java.util.Date getAsOf() -> getAsOf
    java.util.Date getTrendAt() -> getTrendAt
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.TwitterAPIConfigurationJSONImpl -> twitter4j.internal.json.TwitterAPIConfigurationJSONImpl:
    long serialVersionUID -> serialVersionUID
    int photoSizeLimit -> photoSizeLimit
    int shortURLLength -> shortURLLength
    int shortURLLengthHttps -> shortURLLengthHttps
    int charactersReservedPerMedia -> charactersReservedPerMedia
    java.util.Map photoSizes -> photoSizes
    java.lang.String[] nonUsernamePaths -> nonUsernamePaths
    int maxMediaPerUpload -> maxMediaPerUpload
    int getPhotoSizeLimit() -> getPhotoSizeLimit
    int getShortURLLength() -> getShortURLLength
    int getShortURLLengthHttps() -> getShortURLLengthHttps
    int getCharactersReservedPerMedia() -> getCharactersReservedPerMedia
    java.util.Map getPhotoSizes() -> getPhotoSizes
    java.lang.String[] getNonUsernamePaths() -> getNonUsernamePaths
    int getMaxMediaPerUpload() -> getMaxMediaPerUpload
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.TwitterResponseImpl -> twitter4j.internal.json.TwitterResponseImpl:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    long serialVersionUID -> serialVersionUID
    int accessLevel -> accessLevel
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    int getAccessLevel() -> getAccessLevel
twitter4j.internal.json.URLEntityJSONImpl -> twitter4j.internal.json.URLEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String url -> url
    java.lang.String expandedURL -> expandedURL
    java.lang.String displayURL -> displayURL
    void init(twitter4j.internal.org.json.JSONObject) -> init
    java.lang.String getURL() -> getURL
    java.lang.String getExpandedURL() -> getExpandedURL
    java.lang.String getDisplayURL() -> getDisplayURL
    int getStart() -> getStart
    int getEnd() -> getEnd
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.UserJSONImpl -> twitter4j.internal.json.UserJSONImpl:
    long id -> id
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    java.lang.String location -> location
    java.lang.String description -> description
    twitter4j.URLEntity[] descriptionURLEntities -> descriptionURLEntities
    twitter4j.URLEntity urlEntity -> urlEntity
    boolean isContributorsEnabled -> isContributorsEnabled
    java.lang.String profileImageUrl -> profileImageUrl
    java.lang.String profileImageUrlHttps -> profileImageUrlHttps
    java.lang.String url -> url
    boolean isProtected -> isProtected
    int followersCount -> followersCount
    twitter4j.Status status -> status
    java.lang.String profileBackgroundColor -> profileBackgroundColor
    java.lang.String profileTextColor -> profileTextColor
    java.lang.String profileLinkColor -> profileLinkColor
    java.lang.String profileSidebarFillColor -> profileSidebarFillColor
    java.lang.String profileSidebarBorderColor -> profileSidebarBorderColor
    boolean profileUseBackgroundImage -> profileUseBackgroundImage
    boolean showAllInlineMedia -> showAllInlineMedia
    int friendsCount -> friendsCount
    java.util.Date createdAt -> createdAt
    int favouritesCount -> favouritesCount
    int utcOffset -> utcOffset
    java.lang.String timeZone -> timeZone
    java.lang.String profileBackgroundImageUrl -> profileBackgroundImageUrl
    java.lang.String profileBackgroundImageUrlHttps -> profileBackgroundImageUrlHttps
    java.lang.String profileBannerImageUrl -> profileBannerImageUrl
    boolean profileBackgroundTiled -> profileBackgroundTiled
    java.lang.String lang -> lang
    int statusesCount -> statusesCount
    boolean isGeoEnabled -> isGeoEnabled
    boolean isVerified -> isVerified
    boolean translator -> translator
    int listedCount -> listedCount
    boolean isFollowRequestSent -> isFollowRequestSent
    long serialVersionUID -> serialVersionUID
    void init(twitter4j.internal.org.json.JSONObject) -> init
    twitter4j.URLEntity[] getURLEntitiesFromJSON(twitter4j.internal.org.json.JSONObject,java.lang.String) -> getURLEntitiesFromJSON
    int compareTo(twitter4j.User) -> compareTo
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    java.lang.String getLocation() -> getLocation
    java.lang.String getDescription() -> getDescription
    boolean isContributorsEnabled() -> isContributorsEnabled
    java.lang.String getProfileImageURL() -> getProfileImageURL
    java.lang.String getBiggerProfileImageURL() -> getBiggerProfileImageURL
    java.lang.String getMiniProfileImageURL() -> getMiniProfileImageURL
    java.lang.String getOriginalProfileImageURL() -> getOriginalProfileImageURL
    java.lang.String toResizedURL(java.lang.String,java.lang.String) -> toResizedURL
    java.net.URL getProfileImageUrlHttps() -> getProfileImageUrlHttps
    java.lang.String getProfileImageURLHttps() -> getProfileImageURLHttps
    java.lang.String getBiggerProfileImageURLHttps() -> getBiggerProfileImageURLHttps
    java.lang.String getMiniProfileImageURLHttps() -> getMiniProfileImageURLHttps
    java.lang.String getOriginalProfileImageURLHttps() -> getOriginalProfileImageURLHttps
    java.lang.String getURL() -> getURL
    boolean isProtected() -> isProtected
    int getFollowersCount() -> getFollowersCount
    java.lang.String getProfileBackgroundColor() -> getProfileBackgroundColor
    java.lang.String getProfileTextColor() -> getProfileTextColor
    java.lang.String getProfileLinkColor() -> getProfileLinkColor
    java.lang.String getProfileSidebarFillColor() -> getProfileSidebarFillColor
    java.lang.String getProfileSidebarBorderColor() -> getProfileSidebarBorderColor
    boolean isProfileUseBackgroundImage() -> isProfileUseBackgroundImage
    boolean isShowAllInlineMedia() -> isShowAllInlineMedia
    int getFriendsCount() -> getFriendsCount
    twitter4j.Status getStatus() -> getStatus
    java.util.Date getCreatedAt() -> getCreatedAt
    int getFavouritesCount() -> getFavouritesCount
    int getUtcOffset() -> getUtcOffset
    java.lang.String getTimeZone() -> getTimeZone
    java.lang.String getProfileBackgroundImageUrl() -> getProfileBackgroundImageUrl
    java.lang.String getProfileBackgroundImageURL() -> getProfileBackgroundImageURL
    java.lang.String getProfileBackgroundImageUrlHttps() -> getProfileBackgroundImageUrlHttps
    java.lang.String getProfileBannerURL() -> getProfileBannerURL
    java.lang.String getProfileBannerRetinaURL() -> getProfileBannerRetinaURL
    java.lang.String getProfileBannerIPadURL() -> getProfileBannerIPadURL
    java.lang.String getProfileBannerIPadRetinaURL() -> getProfileBannerIPadRetinaURL
    java.lang.String getProfileBannerMobileURL() -> getProfileBannerMobileURL
    java.lang.String getProfileBannerMobileRetinaURL() -> getProfileBannerMobileRetinaURL
    boolean isProfileBackgroundTiled() -> isProfileBackgroundTiled
    java.lang.String getLang() -> getLang
    int getStatusesCount() -> getStatusesCount
    boolean isGeoEnabled() -> isGeoEnabled
    boolean isVerified() -> isVerified
    boolean isTranslator() -> isTranslator
    int getListedCount() -> getListedCount
    boolean isFollowRequestSent() -> isFollowRequestSent
    twitter4j.URLEntity[] getDescriptionURLEntities() -> getDescriptionURLEntities
    twitter4j.URLEntity getURLEntity() -> getURLEntity
    twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPagableUserList
    twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserList
    twitter4j.ResponseList createUserList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.UserListJSONImpl -> twitter4j.internal.json.UserListJSONImpl:
    int id -> id
    java.lang.String name -> name
    java.lang.String fullName -> fullName
    java.lang.String slug -> slug
    java.lang.String description -> description
    int subscriberCount -> subscriberCount
    int memberCount -> memberCount
    java.lang.String uri -> uri
    boolean mode -> mode
    twitter4j.User user -> user
    boolean following -> following
    long serialVersionUID -> serialVersionUID
    void init(twitter4j.internal.org.json.JSONObject) -> init
    int compareTo(twitter4j.UserList) -> compareTo
    int getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    java.lang.String getSlug() -> getSlug
    java.lang.String getDescription() -> getDescription
    int getSubscriberCount() -> getSubscriberCount
    int getMemberCount() -> getMemberCount
    java.net.URI getURI() -> getURI
    boolean isPublic() -> isPublic
    boolean isFollowing() -> isFollowing
    twitter4j.User getUser() -> getUser
    twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPagableUserListList
    twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserListList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.UserMentionEntityJSONImpl -> twitter4j.internal.json.UserMentionEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    long id -> id
    void init(twitter4j.internal.org.json.JSONObject) -> init
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    int getStart() -> getStart
    int getEnd() -> getEnd
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.z_T4JInternalFactory -> twitter4j.internal.json.z_T4JInternalFactory:
    twitter4j.Status createStatus(twitter4j.internal.org.json.JSONObject) -> createStatus
    twitter4j.User createUser(twitter4j.internal.org.json.JSONObject) -> createUser
    twitter4j.UserList createAUserList(twitter4j.internal.org.json.JSONObject) -> createAUserList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.org.json.JSONObject) -> createDirectMessage
    java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse) -> createRateLimitStatuses
    twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse) -> createStatus
    twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse) -> createStatusList
    twitter4j.Trends createTrends(twitter4j.internal.http.HttpResponse) -> createTrends
    twitter4j.User createUser(twitter4j.internal.http.HttpResponse) -> createUser
    twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse) -> createUserList
    twitter4j.ResponseList createUserListFromJSONArray(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray
    twitter4j.ResponseList createUserListFromJSONArray_Users(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray_Users
    twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query) -> createQueryResult
    twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse) -> createIDs
    twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse) -> createPagableUserList
    twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse) -> createAUserList
    twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse) -> createPagableUserListList
    twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse) -> createUserListList
    twitter4j.ResponseList createCategoryList(twitter4j.internal.http.HttpResponse) -> createCategoryList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse) -> createDirectMessage
    twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse) -> createDirectMessageList
    twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse) -> createRelationship
    twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse) -> createFriendshipList
    twitter4j.AccountTotals createAccountTotals(twitter4j.internal.http.HttpResponse) -> createAccountTotals
    twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse) -> createAccountSettings
    twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse) -> createSavedSearch
    twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse) -> createSavedSearchList
    twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse) -> createLocationList
    twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse) -> createPlace
    twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse) -> createPlaceList
    twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse) -> createSimilarPlaces
    twitter4j.RelatedResults createRelatedResults(twitter4j.internal.http.HttpResponse) -> createRelatedResults
    twitter4j.TwitterAPIConfiguration createTwitterAPIConfiguration(twitter4j.internal.http.HttpResponse) -> createTwitterAPIConfiguration
    twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse) -> createLanguageList
    twitter4j.ResponseList createEmptyResponseList() -> createEmptyResponseList
    twitter4j.OEmbed createOEmbed(twitter4j.internal.http.HttpResponse) -> createOEmbed
twitter4j.internal.json.z_T4JInternalJSONImplFactory -> twitter4j.internal.json.z_T4JInternalJSONImplFactory:
    long serialVersionUID -> serialVersionUID
    twitter4j.conf.Configuration conf -> conf
    twitter4j.Status createStatus(twitter4j.internal.org.json.JSONObject) -> createStatus
    twitter4j.User createUser(twitter4j.internal.org.json.JSONObject) -> createUser
    twitter4j.UserList createAUserList(twitter4j.internal.org.json.JSONObject) -> createAUserList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.org.json.JSONObject) -> createDirectMessage
    java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse) -> createRateLimitStatuses
    twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse) -> createStatus
    twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse) -> createStatusList
    twitter4j.GeoLocation createGeoLocation(twitter4j.internal.org.json.JSONObject) -> createGeoLocation
    twitter4j.GeoLocation[][] coordinatesAsGeoLocationArray(twitter4j.internal.org.json.JSONArray) -> coordinatesAsGeoLocationArray
    twitter4j.RateLimitStatus createRateLimitStatusFromResponseHeader(twitter4j.internal.http.HttpResponse) -> createRateLimitStatusFromResponseHeader
    twitter4j.Trends createTrends(twitter4j.internal.http.HttpResponse) -> createTrends
    twitter4j.User createUser(twitter4j.internal.http.HttpResponse) -> createUser
    twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse) -> createUserList
    twitter4j.ResponseList createUserListFromJSONArray(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray
    twitter4j.ResponseList createUserListFromJSONArray_Users(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray_Users
    twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query) -> createQueryResult
    twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse) -> createIDs
    twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse) -> createPagableUserList
    twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse) -> createAUserList
    twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse) -> createPagableUserListList
    twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse) -> createUserListList
    twitter4j.ResponseList createCategoryList(twitter4j.internal.http.HttpResponse) -> createCategoryList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse) -> createDirectMessage
    twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse) -> createDirectMessageList
    twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse) -> createRelationship
    twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse) -> createFriendshipList
    twitter4j.AccountTotals createAccountTotals(twitter4j.internal.http.HttpResponse) -> createAccountTotals
    twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse) -> createAccountSettings
    twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse) -> createSavedSearch
    twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse) -> createSavedSearchList
    twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse) -> createLocationList
    twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse) -> createPlace
    twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse) -> createPlaceList
    twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse) -> createSimilarPlaces
    twitter4j.RelatedResults createRelatedResults(twitter4j.internal.http.HttpResponse) -> createRelatedResults
    twitter4j.TwitterAPIConfiguration createTwitterAPIConfiguration(twitter4j.internal.http.HttpResponse) -> createTwitterAPIConfiguration
    twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse) -> createLanguageList
    twitter4j.ResponseList createEmptyResponseList() -> createEmptyResponseList
    twitter4j.OEmbed createOEmbed(twitter4j.internal.http.HttpResponse) -> createOEmbed
    twitter4j.HashtagEntity createHashtagEntity(int,int,java.lang.String) -> createHashtagEntity
    twitter4j.UserMentionEntity createUserMentionEntity(int,int,java.lang.String,java.lang.String,long) -> createUserMentionEntity
    twitter4j.URLEntity createUrlEntity(int,int,java.lang.String,java.lang.String,java.lang.String) -> createUrlEntity
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
twitter4j.internal.json.z_T4JInternalParseUtil -> twitter4j.internal.json.z_T4JInternalParseUtil:
    java.util.Map formatMapQueue -> formatMapQueue
    java.lang.String getUnescapedString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getUnescapedString
    java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getRawString
    java.lang.String getURLDecodedString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getURLDecodedString
    java.util.Date parseTrendsDate(java.lang.String) -> parseTrendsDate
    java.util.Date getDate(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getDate
    java.util.Date getDate(java.lang.String,twitter4j.internal.org.json.JSONObject,java.lang.String) -> getDate
    java.util.Date getDate(java.lang.String,java.lang.String) -> getDate
    int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getInt
    int getInt(java.lang.String) -> getInt
    long getLong(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getLong
    long getLong(java.lang.String) -> getLong
    double getDouble(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getDouble
    boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getBoolean
    int toAccessLevel(twitter4j.internal.http.HttpResponse) -> toAccessLevel
twitter4j.internal.logging.CommonsLoggingLogger -> twitter4j.internal.logging.CommonsLoggingLogger:
    org.apache.commons.logging.Log LOGGER -> LOGGER
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.CommonsLoggingLoggerFactory -> twitter4j.internal.logging.CommonsLoggingLoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.JULLogger -> twitter4j.internal.logging.JULLogger:
    java.util.logging.Logger LOGGER -> LOGGER
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.JULLoggerFactory -> twitter4j.internal.logging.JULLoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.Log4JLogger -> twitter4j.internal.logging.Log4JLogger:
    org.apache.log4j.Logger LOGGER -> LOGGER
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.Log4JLoggerFactory -> twitter4j.internal.logging.Log4JLoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.Logger -> twitter4j.internal.logging.Logger:
    twitter4j.internal.logging.LoggerFactory LOGGER_FACTORY -> LOGGER_FACTORY
    java.lang.String LOGGER_FACTORY_IMPLEMENTATION -> LOGGER_FACTORY_IMPLEMENTATION
    twitter4j.internal.logging.LoggerFactory getLoggerFactoryIfAvailable(java.lang.String,java.lang.String) -> getLoggerFactoryIfAvailable
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.LoggerFactory -> twitter4j.internal.logging.LoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.NullLogger -> twitter4j.internal.logging.NullLogger:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.NullLoggerFactory -> twitter4j.internal.logging.NullLoggerFactory:
    twitter4j.internal.logging.Logger SINGLETON -> SINGLETON
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.SLF4JLogger -> twitter4j.internal.logging.SLF4JLogger:
    org.slf4j.Logger LOGGER -> LOGGER
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.SLF4JLoggerFactory -> twitter4j.internal.logging.SLF4JLoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.StdOutLogger -> twitter4j.internal.logging.StdOutLogger:
    boolean DEBUG -> DEBUG
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.StdOutLoggerFactory -> twitter4j.internal.logging.StdOutLoggerFactory:
    twitter4j.internal.logging.Logger SINGLETON -> SINGLETON
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.org.json.JSONArray -> twitter4j.internal.org.json.JSONArray:
    java.util.ArrayList myArrayList -> myArrayList
    java.lang.Object get(int) -> get
    boolean getBoolean(int) -> getBoolean
    double getDouble(int) -> getDouble
    int getInt(int) -> getInt
    twitter4j.internal.org.json.JSONArray getJSONArray(int) -> getJSONArray
    twitter4j.internal.org.json.JSONObject getJSONObject(int) -> getJSONObject
    long getLong(int) -> getLong
    java.lang.String getString(int) -> getString
    boolean isNull(int) -> isNull
    java.lang.String join(java.lang.String) -> join
    int length() -> length
    java.lang.Object opt(int) -> opt
    twitter4j.internal.org.json.JSONArray put(boolean) -> put
    twitter4j.internal.org.json.JSONArray put(java.util.Collection) -> put
    twitter4j.internal.org.json.JSONArray put(int) -> put
    twitter4j.internal.org.json.JSONArray put(long) -> put
    twitter4j.internal.org.json.JSONArray put(java.util.Map) -> put
    twitter4j.internal.org.json.JSONArray put(java.lang.Object) -> put
    twitter4j.internal.org.json.JSONArray put(int,boolean) -> put
    twitter4j.internal.org.json.JSONArray put(int,java.util.Collection) -> put
    twitter4j.internal.org.json.JSONArray put(int,double) -> put
    twitter4j.internal.org.json.JSONArray put(int,int) -> put
    twitter4j.internal.org.json.JSONArray put(int,long) -> put
    twitter4j.internal.org.json.JSONArray put(int,java.util.Map) -> put
    twitter4j.internal.org.json.JSONArray put(int,java.lang.Object) -> put
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String toString(int,int) -> toString
    java.io.Writer write(java.io.Writer) -> write
twitter4j.internal.org.json.JSONException -> twitter4j.internal.org.json.JSONException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
twitter4j.internal.org.json.JSONObject -> twitter4j.internal.org.json.JSONObject:
    java.util.Map map -> map
    java.lang.Object NULL -> NULL
    twitter4j.internal.org.json.JSONObject append(java.lang.String,java.lang.Object) -> append
    java.lang.Object get(java.lang.String) -> get
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInt(java.lang.String) -> getInt
    twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    long getLong(java.lang.String) -> getLong
    java.lang.String getString(java.lang.String) -> getString
    boolean has(java.lang.String) -> has
    boolean isNull(java.lang.String) -> isNull
    java.util.Iterator keys() -> keys
    int length() -> length
    twitter4j.internal.org.json.JSONArray names() -> names
    java.lang.String numberToString(java.lang.Number) -> numberToString
    java.lang.Object opt(java.lang.String) -> opt
    void populateMap(java.lang.Object) -> populateMap
    twitter4j.internal.org.json.JSONObject put(java.lang.String,boolean) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,java.util.Collection) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,double) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,int) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,long) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,java.util.Map) -> put
    twitter4j.internal.org.json.JSONObject put(java.lang.String,java.lang.Object) -> put
    twitter4j.internal.org.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> putOnce
    twitter4j.internal.org.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> putOpt
    java.lang.String quote(java.lang.String) -> quote
    java.lang.Object remove(java.lang.String) -> remove
    java.util.Iterator sortedKeys() -> sortedKeys
    java.lang.Object stringToValue(java.lang.String) -> stringToValue
    void testValidity(java.lang.Object) -> testValidity
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String toString(int,int) -> toString
    java.lang.String valueToString(java.lang.Object) -> valueToString
    java.lang.String valueToString(java.lang.Object,int,int) -> valueToString
    java.lang.Object wrap(java.lang.Object) -> wrap
    java.io.Writer write(java.io.Writer) -> write
twitter4j.internal.org.json.JSONObject$1 -> twitter4j.internal.org.json.JSONObject$1:
twitter4j.internal.org.json.JSONObject$Null -> twitter4j.internal.org.json.JSONObject$Null:
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
twitter4j.internal.org.json.JSONTokener -> twitter4j.internal.org.json.JSONTokener:
    int character -> character
    boolean eof -> eof
    int index -> index
    int line -> line
    char previous -> previous
    java.io.Reader reader -> reader
    boolean usePrevious -> usePrevious
    void back() -> back
    boolean end() -> end
    boolean more() -> more
    char next() -> next
    char next(char) -> next
    java.lang.String next(int) -> next
    char nextClean() -> nextClean
    java.lang.String nextString(char) -> nextString
    java.lang.Object nextValue() -> nextValue
    twitter4j.internal.org.json.JSONException syntaxError(java.lang.String) -> syntaxError
    java.lang.String toString() -> toString
twitter4j.internal.util.z_T4JInternalStringUtil -> twitter4j.internal.util.z_T4JInternalStringUtil:
    java.lang.String maskString(java.lang.String) -> maskString
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
    java.lang.String join(int[]) -> join
    java.lang.String join(long[]) -> join
    java.lang.String join(java.lang.String[]) -> join
    java.lang.String join(java.util.List) -> join
twitter4j.json.DataObjectFactory -> twitter4j.json.DataObjectFactory:
    java.lang.reflect.Constructor statusConstructor -> statusConstructor
    java.lang.reflect.Constructor userConstructor -> userConstructor
    java.lang.reflect.Constructor relationshipConstructor -> relationshipConstructor
    java.lang.reflect.Constructor placeConstructor -> placeConstructor
    java.lang.reflect.Constructor savedSearchConstructor -> savedSearchConstructor
    java.lang.reflect.Constructor trendConstructor -> trendConstructor
    java.lang.reflect.Constructor trendsConstructor -> trendsConstructor
    java.lang.reflect.Constructor IDsConstructor -> IDsConstructor
    java.lang.reflect.Method rateLimitStatusConstructor -> rateLimitStatusConstructor
    java.lang.reflect.Constructor categoryConstructor -> categoryConstructor
    java.lang.reflect.Constructor directMessageConstructor -> directMessageConstructor
    java.lang.reflect.Constructor locationConstructor -> locationConstructor
    java.lang.reflect.Constructor userListConstructor -> userListConstructor
    java.lang.reflect.Constructor relatedResultsConstructor -> relatedResultsConstructor
    java.lang.reflect.Constructor statusDeletionNoticeConstructor -> statusDeletionNoticeConstructor
    java.lang.reflect.Constructor accountTotalsConstructor -> accountTotalsConstructor
    java.lang.reflect.Constructor oembedConstructor -> oembedConstructor
    java.lang.ThreadLocal rawJsonMap -> rawJsonMap
    java.lang.String getRawJSON(java.lang.Object) -> getRawJSON
    twitter4j.Status createStatus(java.lang.String) -> createStatus
    twitter4j.User createUser(java.lang.String) -> createUser
    twitter4j.AccountTotals createAccountTotals(java.lang.String) -> createAccountTotals
    twitter4j.Relationship createRelationship(java.lang.String) -> createRelationship
    twitter4j.Place createPlace(java.lang.String) -> createPlace
    twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    twitter4j.Trend createTrend(java.lang.String) -> createTrend
    twitter4j.Trends createTrends(java.lang.String) -> createTrends
    twitter4j.IDs createIDs(java.lang.String) -> createIDs
    java.util.Map createRateLimitStatus(java.lang.String) -> createRateLimitStatus
    twitter4j.Category createCategory(java.lang.String) -> createCategory
    twitter4j.DirectMessage createDirectMessage(java.lang.String) -> createDirectMessage
    twitter4j.Location createLocation(java.lang.String) -> createLocation
    twitter4j.UserList createUserList(java.lang.String) -> createUserList
    twitter4j.RelatedResults createRelatedResults(java.lang.String) -> createRelatedResults
    twitter4j.OEmbed createOEmbed(java.lang.String) -> createOEmbed
    java.lang.Object createObject(java.lang.String) -> createObject
    void clearThreadLocalMap() -> clearThreadLocalMap
    java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object) -> registerJSONObject
twitter4j.json.DataObjectFactory$1 -> twitter4j.json.DataObjectFactory$1:
    java.util.Map initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
twitter4j.json.DataObjectFactory$2 -> twitter4j.json.DataObjectFactory$2:
    int[] $SwitchMap$twitter4j$json$JSONObjectType$Type -> $SwitchMap$twitter4j$json$JSONObjectType$Type
twitter4j.json.JSONObjectType -> twitter4j.json.JSONObjectType:
    twitter4j.internal.logging.Logger logger -> logger
    twitter4j.json.JSONObjectType$Type determine(twitter4j.internal.org.json.JSONObject) -> determine
twitter4j.json.JSONObjectType$Type -> twitter4j.json.JSONObjectType$Type:
    twitter4j.json.JSONObjectType$Type SENDER -> SENDER
    twitter4j.json.JSONObjectType$Type STATUS -> STATUS
    twitter4j.json.JSONObjectType$Type DIRECT_MESSAGE -> DIRECT_MESSAGE
    twitter4j.json.JSONObjectType$Type DELETE -> DELETE
    twitter4j.json.JSONObjectType$Type LIMIT -> LIMIT
    twitter4j.json.JSONObjectType$Type STALL_WARNING -> STALL_WARNING
    twitter4j.json.JSONObjectType$Type SCRUB_GEO -> SCRUB_GEO
    twitter4j.json.JSONObjectType$Type FRIENDS -> FRIENDS
    twitter4j.json.JSONObjectType$Type FAVORITE -> FAVORITE
    twitter4j.json.JSONObjectType$Type UNFAVORITE -> UNFAVORITE
    twitter4j.json.JSONObjectType$Type FOLLOW -> FOLLOW
    twitter4j.json.JSONObjectType$Type UNFOLLOW -> UNFOLLOW
    twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_ADDED -> USER_LIST_MEMBER_ADDED
    twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_DELETED -> USER_LIST_MEMBER_DELETED
    twitter4j.json.JSONObjectType$Type USER_LIST_SUBSCRIBED -> USER_LIST_SUBSCRIBED
    twitter4j.json.JSONObjectType$Type USER_LIST_UNSUBSCRIBED -> USER_LIST_UNSUBSCRIBED
    twitter4j.json.JSONObjectType$Type USER_LIST_CREATED -> USER_LIST_CREATED
    twitter4j.json.JSONObjectType$Type USER_LIST_UPDATED -> USER_LIST_UPDATED
    twitter4j.json.JSONObjectType$Type USER_LIST_DESTROYED -> USER_LIST_DESTROYED
    twitter4j.json.JSONObjectType$Type USER_UPDATE -> USER_UPDATE
    twitter4j.json.JSONObjectType$Type BLOCK -> BLOCK
    twitter4j.json.JSONObjectType$Type UNBLOCK -> UNBLOCK
    twitter4j.json.JSONObjectType$Type DISCONNECTION -> DISCONNECTION
    twitter4j.json.JSONObjectType$Type UNKNOWN -> UNKNOWN
    twitter4j.json.JSONObjectType$Type[] $VALUES -> $VALUES
    twitter4j.json.JSONObjectType$Type[] values() -> values
    twitter4j.json.JSONObjectType$Type valueOf(java.lang.String) -> valueOf
twitter4j.management.APIStatistics -> twitter4j.management.APIStatistics:
    twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR -> API_STATS_CALCULATOR
    java.util.Map METHOD_STATS_MAP -> METHOD_STATS_MAP
    int HISTORY_SIZE -> HISTORY_SIZE
    void methodCalled(java.lang.String,long,boolean) -> methodCalled
    twitter4j.management.InvocationStatisticsCalculator getMethodStatistics(java.lang.String) -> getMethodStatistics
    java.lang.Iterable getInvocationStatistics() -> getInvocationStatistics
    void reset() -> reset
    java.lang.String getName() -> getName
    long getCallCount() -> getCallCount
    long getErrorCount() -> getErrorCount
    long getTotalTime() -> getTotalTime
    long getAverageTime() -> getAverageTime
    java.util.Map getMethodLevelSummariesAsString() -> getMethodLevelSummariesAsString
    java.lang.String getMethodLevelSummary(java.lang.String) -> getMethodLevelSummary
twitter4j.management.APIStatisticsMBean -> twitter4j.management.APIStatisticsMBean:
    java.util.Map getMethodLevelSummariesAsString() -> getMethodLevelSummariesAsString
    java.lang.String getMethodLevelSummary(java.lang.String) -> getMethodLevelSummary
    java.lang.Iterable getInvocationStatistics() -> getInvocationStatistics
twitter4j.management.APIStatisticsOpenMBean -> twitter4j.management.APIStatisticsOpenMBean:
    java.lang.String[] ITEM_NAMES -> ITEM_NAMES
    javax.management.openmbean.OpenType[] ITEM_TYPES -> ITEM_TYPES
    java.lang.String[] ITEM_DESCRIPTIONS -> ITEM_DESCRIPTIONS
    javax.management.openmbean.CompositeType METHOD_STATS_TYPE -> METHOD_STATS_TYPE
    twitter4j.management.APIStatisticsMBean API_STATISTICS -> API_STATISTICS
    javax.management.openmbean.TabularType API_STATISTICS_TYPE -> API_STATISTICS_TYPE
    javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    javax.management.openmbean.TabularDataSupport getStatistics() -> getStatistics
    void reset() -> reset
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    javax.management.AttributeList getAttributes(java.lang.String[]) -> getAttributes
    java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    void setAttribute(javax.management.Attribute) -> setAttribute
    javax.management.AttributeList setAttributes(javax.management.AttributeList) -> setAttributes
twitter4j.management.InvocationStatistics -> twitter4j.management.InvocationStatistics:
    java.lang.String getName() -> getName
    long getCallCount() -> getCallCount
    long getErrorCount() -> getErrorCount
    long getTotalTime() -> getTotalTime
    long getAverageTime() -> getAverageTime
    void reset() -> reset
twitter4j.management.InvocationStatisticsCalculator -> twitter4j.management.InvocationStatisticsCalculator:
    java.lang.String name -> name
    long[] times -> times
    int index -> index
    long callCount -> callCount
    long errorCount -> errorCount
    long totalTime -> totalTime
    void increment(long,boolean) -> increment
    java.lang.String getName() -> getName
    long getCallCount() -> getCallCount
    long getErrorCount() -> getErrorCount
    long getTotalTime() -> getTotalTime
    long getAverageTime() -> getAverageTime
    void reset() -> reset
    java.lang.String toString() -> toString
twitter4j.util.CharacterUtil -> twitter4j.util.CharacterUtil:
    int count(java.lang.String) -> count
    boolean isExceedingLengthLimitation(java.lang.String) -> isExceedingLengthLimitation
twitter4j.util.TimeSpanConverter -> twitter4j.util.TimeSpanConverter:
    int ONE_HOUR_IN_SECONDS -> ONE_HOUR_IN_SECONDS
    int ONE_DAY_IN_SECONDS -> ONE_DAY_IN_SECONDS
    int ONE_MONTH_IN_SECONDS -> ONE_MONTH_IN_SECONDS
    long serialVersionUID -> serialVersionUID
    java.text.MessageFormat[] formats -> formats
    java.text.SimpleDateFormat dateMonth -> dateMonth
    java.text.SimpleDateFormat dateMonthYear -> dateMonthYear
    int NOW -> NOW
    int N_SECONDS_AGO -> N_SECONDS_AGO
    int A_MINUTE_AGO -> A_MINUTE_AGO
    int N_MINUTES_AGO -> N_MINUTES_AGO
    int AN_HOUR_AGO -> AN_HOUR_AGO
    int N_HOURS_AGO -> N_HOURS_AGO
    java.lang.String toTimeSpanString(java.util.Date) -> toTimeSpanString
    java.lang.String toTimeSpanString(long) -> toTimeSpanString
    java.lang.String toTimeSpanString(int) -> toTimeSpanString
